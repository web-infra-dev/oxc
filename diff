
test262/test/built-ins/Temporal/ZonedDateTime/prototype/equals/argument-string-time-zone-annotation.js 15


Differences (-oxc|+esbuild):
-const tests=[["1970-01-01T00:00[UTC]","UTC","named, with no offset"],["1970-01-01T00:00[!UTC]","UTC","named, with ! and no offset"],["1970-01-01T00:00[+00:00]","+00:00","numeric, with no offset"],["1970-01-01T00:00[!+00:00]","+00:00","numeric, with ! and no offset"],["1970-01-01T00:00Z[UTC]","UTC","named, with Z"],["1970-01-01T00:00Z[!UTC]","UTC","named, with Z and !"],["1970-01-01T00:00Z[+00:00]","+00:00","numeric, with Z"],["1970-01-01T00:00Z[!+00:00]","+00:00","numeric, with Z and !"],["1970-01-01T00:00+00:00[UTC]","UTC","named, with offset"],["1970-01-01T00:00+00:00[!UTC]","UTC","named, with offset and !"],["1970-01-01T00:00+00:00[+00:00]","+00:00","numeric, with offset"],["1970-01-01T00:00+00:00[!+00:00]","+00:00","numeric, with offset and !"]];tests.forEach(([arg,expectedZone,description])=>{let instance=new Temporal.ZonedDateTime(0n,expectedZone),result=instance.equals(arg);assert.sameValue(result,!0,`time zone annotation (${description})`)});
+const tests=[["1970-01-01T00:00[UTC]","UTC","named, with no offset"],["1970-01-01T00:00[!UTC]","UTC","named, with ! and no offset"],["1970-01-01T00:00[+00:00]","+00:00","numeric, with no offset"],["1970-01-01T00:00[!+00:00]","+00:00","numeric, with ! and no offset"],["1970-01-01T00:00Z[UTC]","UTC","named, with Z"],["1970-01-01T00:00Z[!UTC]","UTC","named, with Z and !"],["1970-01-01T00:00Z[+00:00]","+00:00","numeric, with Z"],["1970-01-01T00:00Z[!+00:00]","+00:00","numeric, with Z and !"],["1970-01-01T00:00+00:00[UTC]","UTC","named, with offset"],["1970-01-01T00:00+00:00[!UTC]","UTC","named, with offset and !"],["1970-01-01T00:00+00:00[+00:00]","+00:00","numeric, with offset"],["1970-01-01T00:00+00:00[!+00:00]","+00:00","numeric, with offset and !"]];tests.forEach(([arg,expectedZone,description])=>{const result=new Temporal.ZonedDateTime(0n,expectedZone).equals(arg);assert.sameValue(result,!0,`time zone annotation (${description})`)});␊



test262/test/language/statements/const/global-use-before-initialization-in-prior-statement.js 1


Differences (-oxc|+esbuild):
-x;const x=1;
+const x=1;␊



test262/test/built-ins/Temporal/ZonedDateTime/prototype/equals/calendar-temporal-object.js 21


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let datetime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");datetime.equals({year:2005,month:6,day:2,timeZone:"UTC",calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.ZonedDateTime(1000000000000000000n,"UTC").equals({year:2005,month:6,day:2,timeZone:"UTC",calendar:temporalObject})});␊



test262/test/built-ins/Temporal/ZonedDateTime/prototype/withCalendar/calendar-temporal-object.js 13


Differences (-oxc|+esbuild):
-const plainDate=new Temporal.PlainDate(2e3,5,2),plainDateTime=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321),plainMonthDay=new Temporal.PlainMonthDay(5,2),plainYearMonth=new Temporal.PlainYearMonth(2e3,5),zonedDateTime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");[plainDate,plainDateTime,plainMonthDay,plainYearMonth,zonedDateTime].forEach(arg=>{let actual=[],expected=[];Object.defineProperty(arg,"calendar",{get(){return actual.push("get calendar"),calendar}});let instance=new Temporal.ZonedDateTime(1000000000000000000n,"UTC","iso8601"),result=instance.withCalendar(arg);assert.sameValue(result.calendarId,"iso8601","Temporal object coerced to calendar"),assert.compareArray(actual,expected,"calendar getter not called")});
+const plainDate=new Temporal.PlainDate(2e3,5,2),plainDateTime=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321),plainMonthDay=new Temporal.PlainMonthDay(5,2),plainYearMonth=new Temporal.PlainYearMonth(2e3,5),zonedDateTime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");[plainDate,plainDateTime,plainMonthDay,plainYearMonth,zonedDateTime].forEach(arg=>{const actual=[],expected=[];Object.defineProperty(arg,"calendar",{get(){return actual.push("get calendar"),calendar}});const result=new Temporal.ZonedDateTime(1000000000000000000n,"UTC","iso8601").withCalendar(arg);assert.sameValue(result.calendarId,"iso8601","Temporal object coerced to calendar"),assert.compareArray(actual,expected,"calendar getter not called")});␊



test262/test/built-ins/TypedArrayConstructors/ctors/object-arg/iterated-array-with-modified-array-iterator.js 5


Differences (-oxc|+esbuild):
-let ArrayIteratorPrototype=Object.getPrototypeOf([].values()),values;ArrayIteratorPrototype.next=function(){let done=values.length===0,value=values.pop();return{value,done}},testWithTypedArrayConstructors(function(TypedArray){values=[1,2,3,4];var ta=new TypedArray([0]);assert.sameValue(ta.length,4),assert.sameValue(ta[0],4),assert.sameValue(ta[1],3),assert.sameValue(ta[2],2),assert.sameValue(ta[3],1)});
+let ArrayIteratorPrototype=Object.getPrototypeOf([].values()),values;ArrayIteratorPrototype.next=function(){let done=values.length===0;return{value:values.pop(),done}},testWithTypedArrayConstructors(function(TypedArray){values=[1,2,3,4];var ta=new TypedArray([0]);assert.sameValue(ta.length,4),assert.sameValue(ta[0],4),assert.sameValue(ta[1],3),assert.sameValue(ta[2],2),assert.sameValue(ta[3],1)});␊



test262/test/language/statements/const/function-local-use-before-initialization-in-prior-statement.js 24


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){(function(){x;let x=1})()});
+assert.throws(ReferenceError,function(){});␊



test262/test/language/statements/const/syntax/with-initializer-default-statement-list.js 6


Differences (-oxc|+esbuild):
-switch(!0){default:let x=1}
+switch(!0){default:}␊



test262/test/language/statements/const/syntax/const.js 17


Differences (-oxc|+esbuild):
-const z=4;{let z=5}assert.sameValue(z,4);{let z=1;assert.sameValue(z,1)}
+const z=4;assert.sameValue(4,4),assert.sameValue(1,1);␊



test262/test/language/statements/const/syntax/with-initializer-case-expression-statement-list.js 6


Differences (-oxc|+esbuild):
-switch(!0){case!0:let x=1}
+switch(!0){case!0:}␊



test262/test/language/expressions/dynamic-import/syntax/valid/nested-block-labeled-import-attributes-trailing-comma-second.js 5


Differences (-oxc|+esbuild):
-label:import("./empty_FIXTURE.js",{});
+import("./empty_FIXTURE.js",{});␊



test262/test/built-ins/Temporal/ZonedDateTime/prototype/until/calendar-temporal-object.js 21


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let datetime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");datetime.until({year:2005,month:6,day:2,timeZone:"UTC",calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.ZonedDateTime(1000000000000000000n,"UTC").until({year:2005,month:6,day:2,timeZone:"UTC",calendar:temporalObject})});␊



test262/test/language/expressions/postfix-increment/S11.3.1_A3_T2.js 11


Differences (-oxc|+esbuild):
-var x=.1;if(x++,x!==1.1)throw new Test262Error("#1: var x = 0.1; x++; x === 0.1 + 1. Actual: "+x);var x=new Number(-1.1);if(x++,x!==-.10000000000000009)throw new Test262Error("#2: var x = new Number(-1.1); x++; x === -1.1 + 1. Actual: "+x);
+var x=.1;if(x++,x!==.1+1)throw new Test262Error("#1: var x = 0.1; x++; x === 0.1 + 1. Actual: "+x);var x=new Number(-1.1);if(x++,x!==-1.1+1)throw new Test262Error("#2: var x = new Number(-1.1); x++; x === -1.1 + 1. Actual: "+x);␊



test262/test/language/statements/let/global-use-before-initialization-in-prior-statement.js 1


Differences (-oxc|+esbuild):
-x;let x;
+let x;␊



test262/test/language/statements/let/block-local-use-before-initialization-in-prior-statement.js 1


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){{x;let x}});
+assert.throws(ReferenceError,function(){{let x}});␊



test262/test/built-ins/Temporal/ZonedDateTime/prototype/toString/timezonename-auto.js 5


Differences (-oxc|+esbuild):
-const tests=[["UTC","1970-01-01T01:01:01.987654321+00:00[UTC]","built-in UTC"],["+01:00","1970-01-01T02:01:01.987654321+01:00[+01:00]","built-in offset"]];for(let[timeZone,expected,description]of tests){let date=new Temporal.ZonedDateTime(3661987654321n,timeZone),result=date.toString({timeZoneName:"auto"});assert.sameValue(result,expected,`${description} time zone for timeZoneName = auto`)}
+const tests=[["UTC","1970-01-01T01:01:01.987654321+00:00[UTC]","built-in UTC"],["+01:00","1970-01-01T02:01:01.987654321+01:00[+01:00]","built-in offset"]];for(const[timeZone,expected,description]of tests){const result=new Temporal.ZonedDateTime(3661987654321n,timeZone).toString({timeZoneName:"auto"});assert.sameValue(result,expected,`${description} time zone for timeZoneName = auto`)}␊



test262/test/language/statements/let/function-local-use-before-initialization-in-prior-statement.js 22


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){(function(){x;let x})()});
+assert.throws(ReferenceError,function(){});␊



test262/test/built-ins/Array/fromAsync/sync-iterable-with-thenable-async-mapped-awaits-once.js 15


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},awaitCounter=0,inputThenable={then(resolve,reject){awaitCounter++,resolve(expectedValue)}},input=[inputThenable].values();await Array.fromAsync(input,async v=>v),assert.sameValue(awaitCounter,1)});
+asyncTest(async function(){const expectedValue={};let awaitCounter=0;const input=[{then(resolve,reject){awaitCounter++,resolve(expectedValue)}}].values();await Array.fromAsync(input,async v=>v),assert.sameValue(awaitCounter,1)});␊



test262/test/built-ins/Array/fromAsync/non-iterable-input-with-thenable-async-mapped-callback-err.js 25


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},inputThenable={then(resolve,reject){resolve(expectedValue)}},input={length:1,0:inputThenable},outputPromise=Array.fromAsync(input,async v=>{throw new Test262Error});assert.throwsAsync(Test262Error,()=>outputPromise)});
+asyncTest(async function(){const expectedValue={},input={length:1,0:{then(resolve,reject){resolve(expectedValue)}}},outputPromise=Array.fromAsync(input,async v=>{throw new Test262Error});assert.throwsAsync(Test262Error,()=>outputPromise)});␊



test262/test/language/statements/let/syntax/escaped-let.js 1


Differences (-oxc|+esbuild):
-this.let=0,let,a;var a;
+this.let=0,let;var a;␊



test262/test/built-ins/Array/fromAsync/sync-iterable-with-thenable-then-method-err.js 53


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},expected=[expectedValue],inputThenable={then(resolve,reject){throw new Test262Error}},input=[inputThenable].values(),output=Array.fromAsync(input);await assert.throwsAsync(Test262Error,()=>output)});
+asyncTest(async function(){const expected=[{}],input=[{then(resolve,reject){throw new Test262Error}}].values(),output=Array.fromAsync(input);await assert.throwsAsync(Test262Error,()=>output)});␊



test262/test/built-ins/Array/fromAsync/returned-promise-resolves-to-array.js 13


Differences (-oxc|+esbuild):
-asyncTest(async function(){let promise=Array.fromAsync([0,1,2]),array=await promise;assert(Array.isArray(array),"Array.fromAsync returns a Promise that resolves to an Array")});
+asyncTest(async function(){const array=await Array.fromAsync([0,1,2]);assert(Array.isArray(array),"Array.fromAsync returns a Promise that resolves to an Array")});␊



test262/test/built-ins/Array/fromAsync/non-iterable-with-thenable-awaits-once.js 15


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},awaitCounter=0,inputThenable={then(resolve,reject){awaitCounter++,resolve(expectedValue)}},input={length:1,0:inputThenable};await Array.fromAsync(input),assert.sameValue(awaitCounter,1)});
+asyncTest(async function(){const expectedValue={};let awaitCounter=0;const input={length:1,0:{then(resolve,reject){awaitCounter++,resolve(expectedValue)}}};await Array.fromAsync(input),assert.sameValue(awaitCounter,1)});␊



test262/test/built-ins/Array/fromAsync/non-iterable-with-thenable-then-method-err.js 25


Differences (-oxc|+esbuild):
-asyncTest(async function(){let inputThenable={then(resolve,reject){throw new Test262Error}},input={length:1,0:inputThenable},outputPromise=Array.fromAsync(input);assert.throwsAsync(Test262Error,()=>outputPromise)});
+asyncTest(async function(){const input={length:1,0:{then(resolve,reject){throw new Test262Error}}},outputPromise=Array.fromAsync(input);assert.throwsAsync(Test262Error,()=>outputPromise)});␊



test262/test/built-ins/Temporal/ZonedDateTime/prototype/toString/timezonename-critical.js 5


Differences (-oxc|+esbuild):
-const tests=[["UTC","1970-01-01T01:01:01.987654321+00:00[!UTC]","built-in UTC"],["+01:00","1970-01-01T02:01:01.987654321+01:00[!+01:00]","built-in offset"]];for(let[timeZone,expected,description]of tests){let date=new Temporal.ZonedDateTime(3661987654321n,timeZone),result=date.toString({timeZoneName:"critical"});assert.sameValue(result,expected,`${description} time zone for timeZoneName = critical`)}
+const tests=[["UTC","1970-01-01T01:01:01.987654321+00:00[!UTC]","built-in UTC"],["+01:00","1970-01-01T02:01:01.987654321+01:00[!+01:00]","built-in offset"]];for(const[timeZone,expected,description]of tests){const result=new Temporal.ZonedDateTime(3661987654321n,timeZone).toString({timeZoneName:"critical"});assert.sameValue(result,expected,`${description} time zone for timeZoneName = critical`)}␊



test262/test/built-ins/Temporal/ZonedDateTime/prototype/equals/argument-propertybag-timezone-normalize-offset-strings.js 7


Differences (-oxc|+esbuild):
-const tests=[{idToTest:"+0000",description:"colon-less"},{idToTest:"+00",description:"hours-only"}];for(let test of tests){let{idToTest,description}=test,instance=new Temporal.ZonedDateTime(0n,"+00:00"),bag={year:1970,monthCode:"M01",day:1,timeZone:idToTest};assert.sameValue(instance.equals(bag),!0,`Offset time zones are equal despite ${description} syntax in property bag argument`);let str="1970-01-01[+00:00]";assert.sameValue(instance.equals(str),!0,`Offset time zones are equal despite ${description} syntax in ISO string argument`)}
+const tests=[{idToTest:"+0000",description:"colon-less"},{idToTest:"+00",description:"hours-only"}];for(const test of tests){const{idToTest,description}=test,instance=new Temporal.ZonedDateTime(0n,"+00:00"),bag={year:1970,monthCode:"M01",day:1,timeZone:idToTest};assert.sameValue(instance.equals(bag),!0,`Offset time zones are equal despite ${description} syntax in property bag argument`),assert.sameValue(instance.equals("1970-01-01[+00:00]"),!0,`Offset time zones are equal despite ${description} syntax in ISO string argument`)}␊



test262/test/built-ins/Temporal/ZonedDateTime/prototype/toString/timezonename-never.js 5


Differences (-oxc|+esbuild):
-const tests=[["UTC","1970-01-01T01:01:01.987654321+00:00","built-in UTC"],["+01:00","1970-01-01T02:01:01.987654321+01:00","built-in offset"]];for(let[timeZone,expected,description]of tests){let date=new Temporal.ZonedDateTime(3661987654321n,timeZone),result=date.toString({timeZoneName:"never"});assert.sameValue(result,expected,`${description} time zone for timeZoneName = never`)}
+const tests=[["UTC","1970-01-01T01:01:01.987654321+00:00","built-in UTC"],["+01:00","1970-01-01T02:01:01.987654321+01:00","built-in offset"]];for(const[timeZone,expected,description]of tests){const result=new Temporal.ZonedDateTime(3661987654321n,timeZone).toString({timeZoneName:"never"});assert.sameValue(result,expected,`${description} time zone for timeZoneName = never`)}␊



test262/test/built-ins/Array/fromAsync/sync-iterable-with-thenable-element-rejects.js 25


Differences (-oxc|+esbuild):
-asyncTest(async function(){let inputThenable={then(resolve,reject){reject(new Test262Error)}},input=[inputThenable].values(),output=Array.fromAsync(input);await assert.throwsAsync(Test262Error,()=>output)});
+asyncTest(async function(){const input=[{then(resolve,reject){reject(new Test262Error)}}].values(),output=Array.fromAsync(input);await assert.throwsAsync(Test262Error,()=>output)});␊



test262/test/language/statements/while/S12.6.2_A4_T3.js 15


Differences (-oxc|+esbuild):
-do_out:for(;;){if(__in__do__before__break)break;var __in__do__before__break="once";do_in:for(;;){var __in__do__IN__before__break="in";break do_out;var __in__do__IN__after__break}var __in__do__after__break="lifetime"}if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break))throw new Test262Error("#1: Break inside do-while is allowed as its described at standard");
+do_out:for(;!__in__do__before__break;){for(var __in__do__before__break="once";;){var __in__do__IN__before__break="in";break do_out;var __in__do__IN__after__break}var __in__do__after__break="lifetime"}if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break))throw new Test262Error("#1: Break inside do-while is allowed as its described at standard");␊



test262/test/language/expressions/division/line-terminator.js 4


Differences (-oxc|+esbuild):
-var x=18/2/9;assert.sameValue(x,1);
+var x=1;assert.sameValue(x,1);␊



test262/test/language/statements/while/S12.6.2_A4_T2.js 15


Differences (-oxc|+esbuild):
-do_out:for(;;){if(__in__do__before__break)break;var __in__do__before__break="black";do_in:for(;;){var __in__do__IN__before__break="hole";break do_in;var __in__do__IN__after__break}var __in__do__after__break="won't you come"}if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break))throw new Test262Error("#1: Break inside do-while is allowed as its described at standard");
+for(;!__in__do__before__break;){var __in__do__before__break="black";do_in:for(;;){var __in__do__IN__before__break="hole";break do_in;var __in__do__IN__after__break}var __in__do__after__break="won't you come"}if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break))throw new Test262Error("#1: Break inside do-while is allowed as its described at standard");␊



test262/test/built-ins/Array/fromAsync/non-iterable-sync-mapped-callback-err.js 25


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},inputThenable={then(resolve,reject){resolve(expectedValue)}},input={length:1,0:inputThenable},outputPromise=Array.fromAsync(input,v=>{throw new Test262Error});await assert.throwsAsync(Test262Error,()=>outputPromise)});
+asyncTest(async function(){const expectedValue={},input={length:1,0:{then(resolve,reject){resolve(expectedValue)}}},outputPromise=Array.fromAsync(input,v=>{throw new Test262Error});await assert.throwsAsync(Test262Error,()=>outputPromise)});␊



test262/test/built-ins/Array/fromAsync/non-iterable-with-thenable-async-mapped-awaits-once.js 15


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},expected=[expectedValue],awaitCounter=0,inputThenable={then(resolve,reject){awaitCounter++,resolve(expectedValue)}},input={length:1,0:inputThenable};await Array.fromAsync(input,async v=>v),assert.sameValue(awaitCounter,1)});
+asyncTest(async function(){const expectedValue={},expected=[expectedValue];let awaitCounter=0;const input={length:1,0:{then(resolve,reject){awaitCounter++,resolve(expectedValue)}}};await Array.fromAsync(input,async v=>v),assert.sameValue(awaitCounter,1)});␊



test262/test/built-ins/Array/fromAsync/non-iterable-input-with-thenable-element-rejects.js 53


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},expected=[expectedValue],inputThenable={then(resolve,reject){reject(new Test262Error)}},input={length:1,0:inputThenable},output=Array.fromAsync(input);await assert.throwsAsync(Test262Error,()=>output)});
+asyncTest(async function(){const expected=[{}],input={length:1,0:{then(resolve,reject){reject(new Test262Error)}}},output=Array.fromAsync(input);await assert.throwsAsync(Test262Error,()=>output)});␊



test262/test/language/statements/while/S12.6.2_A4_T4.js 22


Differences (-oxc|+esbuild):
-do_out:for(;;){if(__in__do__before__break)break;var __in__do__before__break="can't";do_in:for(;;){var __in__do__IN__before__break="get";break;var __in__do__IN__after__break}var __in__do__after__break="Satisfaction"}if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break))throw new Test262Error("#1: Break inside do-while is allowed as its described at standard");
+for(;!__in__do__before__break;){for(var __in__do__before__break="can't";;){var __in__do__IN__before__break="get";break;var __in__do__IN__after__break}var __in__do__after__break="Satisfaction"}if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break))throw new Test262Error("#1: Break inside do-while is allowed as its described at standard");␊



test262/test/built-ins/Temporal/PlainDate/prototype/since/roundingincrement-non-integer.js 5


Differences (-oxc|+esbuild):
-const earlier=new Temporal.PlainDate(2e3,5,2),later=new Temporal.PlainDate(2e3,5,7),result=later.since(earlier,{roundingIncrement:2.5,roundingMode:"trunc"});TemporalHelpers.assertDuration(result,0,0,0,4,0,0,0,0,0,0,"roundingIncrement 2.5 truncates to 2");const result2=later.since(earlier,{smallestUnit:"days",roundingIncrement:1000000000.5,roundingMode:"expand"});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");
+const earlier=new Temporal.PlainDate(2e3,5,2),later=new Temporal.PlainDate(2e3,5,7),result=later.since(earlier,{roundingIncrement:2.5,roundingMode:"trunc"});TemporalHelpers.assertDuration(result,0,0,0,4,0,0,0,0,0,0,"roundingIncrement 2.5 truncates to 2");const result2=later.since(earlier,{smallestUnit:"days",roundingIncrement:1e9+.5,roundingMode:"expand"});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");␊



test262/test/built-ins/Array/fromAsync/sync-iterable-with-thenable-sync-mapped-awaits-once.js 15


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},awaitCounter=0,inputThenable={then(resolve,reject){awaitCounter++,resolve(expectedValue)}},input=[inputThenable].values();await Array.fromAsync(input,v=>v),assert.sameValue(awaitCounter,1)});
+asyncTest(async function(){const expectedValue={};let awaitCounter=0;const input=[{then(resolve,reject){awaitCounter++,resolve(expectedValue)}}].values();await Array.fromAsync(input,v=>v),assert.sameValue(awaitCounter,1)});␊



test262/test/built-ins/Temporal/Instant/prototype/since/argument-zoneddatetime.js 13


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalInstantFastPath(datetime=>{let instant=new Temporal.Instant(1000000000000000000n),result=instant.since(datetime);assert.sameValue(result.total({unit:"nanoseconds"}),-987654321,"nanoseconds result")});
+TemporalHelpers.checkToTemporalInstantFastPath(datetime=>{const result=new Temporal.Instant(1000000000000000000n).since(datetime);assert.sameValue(result.total({unit:"nanoseconds"}),-987654321,"nanoseconds result")});␊



test262/test/built-ins/Array/fromAsync/sync-iterable-input-with-non-promise-thenable.js 25


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},expected=[expectedValue],inputThenable={then(resolve,reject){resolve(expectedValue)}},input=[inputThenable].values(),output=await Array.fromAsync(input);assert.compareArray(output,expected)});
+asyncTest(async function(){const expectedValue={},expected=[expectedValue],input=[{then(resolve,reject){resolve(expectedValue)}}].values(),output=await Array.fromAsync(input);assert.compareArray(output,expected)});␊



test262/test/built-ins/Array/fromAsync/non-iterable-with-thenable-sync-mapped-awaits-once.js 15


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},awaitCounter=0,inputThenable={then(resolve,reject){awaitCounter++,resolve(expectedValue)}},input={length:1,0:inputThenable};await Array.fromAsync(input,v=>v),assert.sameValue(awaitCounter,1)});
+asyncTest(async function(){const expectedValue={};let awaitCounter=0;const input={length:1,0:{then(resolve,reject){awaitCounter++,resolve(expectedValue)}}};await Array.fromAsync(input,v=>v),assert.sameValue(awaitCounter,1)});␊



test262/test/language/asi/S7.9_A5.6_T1.js 3


Differences (-oxc|+esbuild):
-var x=0,y=0;if(x,++y,x!==0&y!==1)throw new Test262Error("#1: Check Postfix Increment Operator for automatic semicolon insertion");if(x,++y,x!==0&y!==2)throw new Test262Error("#2: Check Postfix Increment Operator for automatic semicolon insertion");
+var x=0,y=0;if(++y,x!==0&y!==1)throw new Test262Error("#1: Check Postfix Increment Operator for automatic semicolon insertion");if(++y,x!==0&y!==2)throw new Test262Error("#2: Check Postfix Increment Operator for automatic semicolon insertion");␊



test262/test/built-ins/Array/fromAsync/non-iterable-with-non-promise-thenable.js 25


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},expected=[expectedValue],inputThenable={then(resolve,reject){resolve(expectedValue)}},input={length:1,0:inputThenable},output=await Array.fromAsync(input);assert.compareArray(output,expected)});
+asyncTest(async function(){const expectedValue={},expected=[expectedValue],input={length:1,0:{then(resolve,reject){resolve(expectedValue)}}},output=await Array.fromAsync(input);assert.compareArray(output,expected)});␊



test262/test/built-ins/Array/fromAsync/sync-iterable-with-thenable-awaits-once.js 15


Differences (-oxc|+esbuild):
-asyncTest(async function(){let expectedValue={},awaitCounter=0,inputThenable={then(resolve,reject){awaitCounter++,resolve(expectedValue)}},input=[inputThenable].values();await Array.fromAsync(input),assert.sameValue(awaitCounter,1)});
+asyncTest(async function(){const expectedValue={};let awaitCounter=0;const input=[{then(resolve,reject){awaitCounter++,resolve(expectedValue)}}].values();await Array.fromAsync(input),assert.sameValue(awaitCounter,1)});␊



test262/test/language/asi/S7.9_A1.js 20


Differences (-oxc|+esbuild):
-label1:for(var i=0;i<=0;i++)for(var j=0;j<=1;j++){if(j===0)continue label1;throw new Test262Error("#1: Check continue statement for automatic semicolon insertion")}var result=!1;label2:for(var i=0;i<=1;i++)for(var j=0;j<=1;j++){if(j===0)continue;result=!0}if(result!==!0)throw new Test262Error("#2: Check continue statement for automatic semicolon insertion");
+label1:for(var i=0;i<=0;i++)for(var j=0;j<=1;j++){if(j===0)continue label1;throw new Test262Error("#1: Check continue statement for automatic semicolon insertion")}for(var result=!1,i=0;i<=1;i++)for(var j=0;j<=1;j++)j!==0&&(result=!0);if(result!==!0)throw new Test262Error("#2: Check continue statement for automatic semicolon insertion");␊



test262/test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-5.js 42


Differences (-oxc|+esbuild):
-const seconds=8692288669465520;{let milliseconds=513,d=new Temporal.Duration(0,0,0,0,0,0,seconds,milliseconds),result=d.total({unit:"milliseconds"}),expectedMilliseconds=Number(BigInt(seconds)*1000n+BigInt(milliseconds));assert.sameValue(expectedMilliseconds,869228866946552e4,"check expected value (ms)"),assert.sameValue(result,expectedMilliseconds,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds")}{let microseconds=373761,d=new Temporal.Duration(0,0,0,0,0,0,seconds,0,microseconds),result=d.total({unit:"microseconds"}),expectedMicroseconds=Number(BigInt(seconds)*1000000n+BigInt(microseconds));assert.sameValue(expectedMicroseconds,8692288669465521e6,"check expected value (µs)"),assert.sameValue(result,expectedMicroseconds,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds")}{let nanoseconds=321414345,d=new Temporal.Duration(0,0,0,0,0,0,seconds,0,0,nanoseconds),result=d.total({unit:"nanoseconds"}),expectedNanoseconds=Number(BigInt(seconds)*1000000000n+BigInt(nanoseconds));assert.sameValue(expectedNanoseconds,8692288669465521e9,"check expected value (ns)"),assert.sameValue(result,expectedNanoseconds,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit nanoseconds")}
+const seconds=8692288669465520;{const result=new Temporal.Duration(0,0,0,0,0,0,8692288669465520,513).total({unit:"milliseconds"}),expectedMilliseconds=Number(BigInt(8692288669465520)*1000n+BigInt(513));assert.sameValue(expectedMilliseconds,869228866946552e4,"check expected value (ms)"),assert.sameValue(result,expectedMilliseconds,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds")}{const result=new Temporal.Duration(0,0,0,0,0,0,8692288669465520,0,373761).total({unit:"microseconds"}),expectedMicroseconds=Number(BigInt(8692288669465520)*1000000n+BigInt(373761));assert.sameValue(expectedMicroseconds,8692288669465521e6,"check expected value (\xB5s)"),assert.sameValue(result,expectedMicroseconds,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds")}{const result=new Temporal.Duration(0,0,0,0,0,0,8692288669465520,0,0,321414345).total({unit:"nanoseconds"}),expectedNanoseconds=Number(BigInt(8692288669465520)*1000000000n+BigInt(321414345));assert.sameValue(expectedNanoseconds,8692288669465521e9,"check expected value (ns)"),assert.sameValue(result,expectedNanoseconds,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit nanoseconds")}␊



test262/test/language/asi/S7.9_A5.2_T1.js 1


Differences (-oxc|+esbuild):
-var x=0,y=0;if(x,++y,x!==0)throw new Test262Error("#1: Check Prefix Increment Operator for automatic semicolon insertion");if(y!==1)throw new Test262Error("#2: Check Prefix Increment Operator for automatic semicolon insertion");
+var x=0,y=0;if(++y,x!==0)throw new Test262Error("#1: Check Prefix Increment Operator for automatic semicolon insertion");if(y!==1)throw new Test262Error("#2: Check Prefix Increment Operator for automatic semicolon insertion");␊



test262/test/built-ins/Temporal/Duration/prototype/total/relativeto-string-zoneddatetime.js 15


Differences (-oxc|+esbuild):
-["2000-01-01[UTC]","2000-01-01T00:00[UTC]","2000-01-01T00:00+00:00[UTC]","2000-01-01T00:00+00:00[UTC][u-ca=iso8601]"].forEach(relativeTo=>{let duration=new Temporal.Duration(0,0,0,31),result=duration.total({unit:"months",relativeTo});assert.sameValue(result,1)});
+["2000-01-01[UTC]","2000-01-01T00:00[UTC]","2000-01-01T00:00+00:00[UTC]","2000-01-01T00:00+00:00[UTC][u-ca=iso8601]"].forEach(relativeTo=>{const result=new Temporal.Duration(0,0,0,31).total({unit:"months",relativeTo});assert.sameValue(result,1)});␊



test262/test/language/asi/S7.9_A2.js 10


Differences (-oxc|+esbuild):
-label1:for(var i=0;i<=0;i++){for(var j=0;j<=0;j++)break label1;throw new Test262Error("#1: Check break statement for automatic semicolon insertion")}var result=!1;label2:for(var i=0;i<=0;i++){for(var j=0;j<=0;j++)break;result=!0}if(result!==!0)throw new Test262Error("#2: Check break statement for automatic semicolon insertion");
+label1:for(var i=0;i<=0;i++){for(var j=0;j<=0;j++)break label1;throw new Test262Error("#1: Check break statement for automatic semicolon insertion")}for(var result=!1,i=0;i<=0;i++){for(var j=0;j<=0;j++)break;result=!0}if(result!==!0)throw new Test262Error("#2: Check break statement for automatic semicolon insertion");␊



test262/test/built-ins/Temporal/PlainDate/prototype/since/argument-plaindatetime.js 7


Differences (-oxc|+esbuild):
-TemporalHelpers.checkPlainDateTimeConversionFastPath(datetime=>{let date=new Temporal.PlainDate(2e3,5,2),result=date.since(datetime);assert.sameValue(result.total({unit:"nanoseconds"}),0,"time part dropped")});
+TemporalHelpers.checkPlainDateTimeConversionFastPath(datetime=>{const result=new Temporal.PlainDate(2e3,5,2).since(datetime);assert.sameValue(result.total({unit:"nanoseconds"}),0,"time part dropped")});␊



test262/test/built-ins/TypedArrayConstructors/internals/Delete/key-is-out-of-bounds-non-strict.js 1


Differences (-oxc|+esbuild):
-testWithTypedArrayConstructors(function(TA){let proto=TypedArray.prototype,descriptorGetterThrows={configurable:!0,get(){throw new Test262Error("OrdinaryGet was called!")}};Object.defineProperties(proto,{["-1"]:descriptorGetterThrows,1:descriptorGetterThrows});let sample=new TA(1);assert.sameValue(delete sample[-1],!0,'The value of `delete sample["-1"]` is true'),assert.sameValue(delete sample[-1],!0,"The value of `delete sample[-1]` is true"),assert.sameValue(delete sample[0],!1,'The value of `delete sample["0"]` is false'),assert.sameValue(delete sample[0],!1,"The value of `delete sample[0]` is false"),assert.sameValue(delete sample[1],!0,'The value of `delete sample["1"]` is true'),assert.sameValue(delete sample[1],!0,"The value of `delete sample[1]` is true")});
+testWithTypedArrayConstructors(function(TA){let proto=TypedArray.prototype,descriptorGetterThrows={configurable:!0,get(){throw new Test262Error("OrdinaryGet was called!")}};Object.defineProperties(proto,{"-1":descriptorGetterThrows,1:descriptorGetterThrows});let sample=new TA(1);assert.sameValue(delete sample[-1],!0,'The value of `delete sample["-1"]` is true'),assert.sameValue(delete sample[-1],!0,"The value of `delete sample[-1]` is true"),assert.sameValue(delete sample[0],!1,'The value of `delete sample["0"]` is false'),assert.sameValue(delete sample[0],!1,"The value of `delete sample[0]` is false"),assert.sameValue(delete sample[1],!0,'The value of `delete sample["1"]` is true'),assert.sameValue(delete sample[1],!0,"The value of `delete sample[1]` is true")});␊



test262/test/language/asi/S7.9_A5.6_T2.js 3


Differences (-oxc|+esbuild):
-var x=0,y=2;if(x,--y,x!==0&y!==1)throw new Test262Error("#1: Check Postfix Increment Operator for automatic semicolon insertion");if(x,--y,x!==0&y!==0)throw new Test262Error("#2: Check Postfix Increment Operator for automatic semicolon insertion");
+var x=0,y=2;if(--y,x!==0&y!==1)throw new Test262Error("#1: Check Postfix Increment Operator for automatic semicolon insertion");if(--y,x!==0&y!==0)throw new Test262Error("#2: Check Postfix Increment Operator for automatic semicolon insertion");␊



test262/test/built-ins/TypedArrayConstructors/internals/Delete/BigInt/key-is-out-of-bounds-non-strict.js 1


Differences (-oxc|+esbuild):
-testWithBigIntTypedArrayConstructors(function(TA){let proto=TypedArray.prototype,descriptorGetterThrows={configurable:!0,get(){throw new Test262Error("OrdinaryGet was called!")}};Object.defineProperties(proto,{["-1"]:descriptorGetterThrows,1:descriptorGetterThrows});let sample=new TA(1);assert.sameValue(delete sample[-1],!0,'The value of `delete sample["-1"]` is true'),assert.sameValue(delete sample[-1],!0,"The value of `delete sample[-1]` is true"),assert.sameValue(delete sample[0],!1,'The value of `delete sample["0"]` is false'),assert.sameValue(delete sample[0],!1,"The value of `delete sample[0]` is false"),assert.sameValue(delete sample[1],!0,'The value of `delete sample["1"]` is true'),assert.sameValue(delete sample[1],!0,"The value of `delete sample[1]` is true")});
+testWithBigIntTypedArrayConstructors(function(TA){let proto=TypedArray.prototype,descriptorGetterThrows={configurable:!0,get(){throw new Test262Error("OrdinaryGet was called!")}};Object.defineProperties(proto,{"-1":descriptorGetterThrows,1:descriptorGetterThrows});let sample=new TA(1);assert.sameValue(delete sample[-1],!0,'The value of `delete sample["-1"]` is true'),assert.sameValue(delete sample[-1],!0,"The value of `delete sample[-1]` is true"),assert.sameValue(delete sample[0],!1,'The value of `delete sample["0"]` is false'),assert.sameValue(delete sample[0],!1,"The value of `delete sample[0]` is false"),assert.sameValue(delete sample[1],!0,'The value of `delete sample["1"]` is true'),assert.sameValue(delete sample[1],!0,"The value of `delete sample[1]` is true")});␊



test262/test/built-ins/Temporal/Duration/prototype/total/relativeto-zoneddatetime-with-fractional-days.js 10


Differences (-oxc|+esbuild):
-let duration=Temporal.Duration.from({weeks:1,days:0,hours:1}),zdt=new Temporal.ZonedDateTime(0n,"UTC","iso8601"),result=duration.total({relativeTo:zdt,unit:"days"});assert.sameValue(result,7.041666666666667);
+let duration=Temporal.Duration.from({weeks:1,days:0,hours:1}),zdt=new Temporal.ZonedDateTime(0n,"UTC","iso8601"),result=duration.total({relativeTo:zdt,unit:"days"});assert.sameValue(result,7+1/24);␊



test262/test/language/statements/do-while/S12.6.1_A4_T4.js 11


Differences (-oxc|+esbuild):
-do_out:do{var __in__do__before__break="reached";do_in:do{var __in__do__IN__before__break="reached";break;var __in__do__IN__after__break}while(0);var __in__do__after__break="where am i"}while(!1);if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break))throw new Test262Error("#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)==="+(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break));
+do{var __in__do__before__break="reached";do{var __in__do__IN__before__break="reached";break;var __in__do__IN__after__break}while(!1);var __in__do__after__break="where am i"}while(!1);if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break))throw new Test262Error("#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)==="+(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break));␊



test262/test/language/statements/do-while/S12.6.1_A4_T2.js 5


Differences (-oxc|+esbuild):
-do_out:do{var __in__do__before__break="black";do_in:do{var __in__do__IN__before__break="hole";break do_in;var __in__do__IN__after__break}while(0);var __in__do__after__break="won't you come"}while(!1);if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break))throw new Test262Error("#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)==="+(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break));
+do{var __in__do__before__break="black";do_in:do{var __in__do__IN__before__break="hole";break do_in;var __in__do__IN__after__break}while(!1);var __in__do__after__break="won't you come"}while(!1);if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break))throw new Test262Error("#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)==="+(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break));␊



test262/test/language/statements/do-while/S12.6.1_A4_T3.js 4


Differences (-oxc|+esbuild):
-do_out:do{var __in__do__before__break="once";do_in:do{var __in__do__IN__before__break="in";break do_out;var __in__do__IN__after__break}while(0);var __in__do__after__break="lifetime"}while(!1);if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break))throw new Test262Error("#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)==="+(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break));
+do_out:do{var __in__do__before__break="once";do{var __in__do__IN__before__break="in";break do_out;var __in__do__IN__after__break}while(!1);var __in__do__after__break="lifetime"}while(!1);if(!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break))throw new Test262Error("#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)==="+(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break));␊



test262/test/built-ins/Temporal/PlainDate/prototype/since/calendar-temporal-object.js 13


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let date=new Temporal.PlainDate(2e3,5,2);date.since({year:2005,month:6,day:2,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainDate(2e3,5,2).since({year:2005,month:6,day:2,calendar:temporalObject})});␊



test262/test/built-ins/TypedArrayConstructors/internals/Delete/BigInt/key-is-out-of-bounds-strict.js 1


Differences (-oxc|+esbuild):
-testWithBigIntTypedArrayConstructors(function(TA){let proto=TypedArray.prototype,descriptorGetterThrows={configurable:!0,get(){throw new Test262Error("OrdinaryGet was called!")}};Object.defineProperties(proto,{["-1"]:descriptorGetterThrows,1:descriptorGetterThrows});let sample=new TA(1);assert.sameValue(delete sample[-1],!0,'The value of `delete sample["-1"]` is true'),assert.sameValue(delete sample[-1],!0,"The value of `delete sample[-1]` is true"),assert.throws(TypeError,()=>{delete sample[0]}),assert.throws(TypeError,()=>{delete sample[0]}),assert.sameValue(delete sample[1],!0,'The value of `delete sample["1"]` is true'),assert.sameValue(delete sample[1],!0,"The value of `delete sample[1]` is true")});
+testWithBigIntTypedArrayConstructors(function(TA){let proto=TypedArray.prototype,descriptorGetterThrows={configurable:!0,get(){throw new Test262Error("OrdinaryGet was called!")}};Object.defineProperties(proto,{"-1":descriptorGetterThrows,1:descriptorGetterThrows});let sample=new TA(1);assert.sameValue(delete sample[-1],!0,'The value of `delete sample["-1"]` is true'),assert.sameValue(delete sample[-1],!0,"The value of `delete sample[-1]` is true"),assert.throws(TypeError,()=>{delete sample[0]}),assert.throws(TypeError,()=>{delete sample[0]}),assert.sameValue(delete sample[1],!0,'The value of `delete sample["1"]` is true'),assert.sameValue(delete sample[1],!0,"The value of `delete sample[1]` is true")});␊



test262/test/language/statements/for/S12.6.3_A11.1_T1.js 9


Differences (-oxc|+esbuild):
-var __str;__str="";for(var index=0;index<10;index+=1){if(index<5)continue;__str+=index}if(__str!=="56789")throw new Test262Error('#1: __str === "56789". Actual:  __str ==='+__str);
+var __str;__str="";for(var index=0;index<10;index+=1)index<5||(__str+=index);if(__str!=="56789")throw new Test262Error('#1: __str === "56789". Actual:  __str ==='+__str);␊



test262/test/language/expressions/instanceof/S11.8.6_A2.4_T4.js 1


Differences (-oxc|+esbuild):
-if(!((OBJECT=Object,{})instanceof OBJECT))throw new Test262Error("#1: (OBJECT = Object, {}) instanceof OBJECT !== true");
+if(OBJECT=Object,!({}instanceof OBJECT))throw new Test262Error("#1: (OBJECT = Object, {}) instanceof OBJECT !== true");␊



test262/test/built-ins/Temporal/Duration/prototype/total/relativeto-string-plaindatetime.js 15


Differences (-oxc|+esbuild):
-["2000-01-01","2000-01-01T00:00","2000-01-01T00:00[u-ca=iso8601]"].forEach(relativeTo=>{let duration=new Temporal.Duration(0,0,0,31),result=duration.total({unit:"months",relativeTo});assert.sameValue(result,1)});
+["2000-01-01","2000-01-01T00:00","2000-01-01T00:00[u-ca=iso8601]"].forEach(relativeTo=>{const result=new Temporal.Duration(0,0,0,31).total({unit:"months",relativeTo});assert.sameValue(result,1)});␊



test262/test/language/statements/for/S12.6.3_A12_T1.js 5


Differences (-oxc|+esbuild):
-var __str,index;for(__str="",index=0;index<10;index+=1){if(index>5)break;__str+=index}if(__str!=="012345")throw new Test262Error('#1:__str === "012345". Actual: __str ==='+__str);
+var __str,index;for(__str="",index=0;index<10&&!(index>5);index+=1)__str+=index;if(__str!=="012345")throw new Test262Error('#1:__str === "012345". Actual: __str ==='+__str);␊



test262/test/built-ins/Temporal/Instant/prototype/until/argument-zoneddatetime.js 13


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalInstantFastPath(datetime=>{let instant=new Temporal.Instant(1000000000000000000n),result=instant.until(datetime);assert.sameValue(result.total({unit:"nanoseconds"}),987654321,"nanoseconds result")});
+TemporalHelpers.checkToTemporalInstantFastPath(datetime=>{const result=new Temporal.Instant(1000000000000000000n).until(datetime);assert.sameValue(result.total({unit:"nanoseconds"}),987654321,"nanoseconds result")});␊



test262/test/built-ins/Map/map-iterable-throws-when-set-is-not-callable.js 21


Differences (-oxc|+esbuild):
-Map.prototype.set=null,assert.throws(TypeError,function(){new Map([[1,1],[2,2]])});
+Map.prototype.set=null,assert.throws(TypeError,function(){});␊



test262/test/language/expressions/instanceof/S11.8.6_A2.4_T1.js 1


Differences (-oxc|+esbuild):
-var OBJECT=0;if(!((OBJECT=Object,{})instanceof OBJECT))throw new Test262Error("#1: var OBJECT = 0; (OBJECT = Object, {}) instanceof OBJECT === true");var object={};if(!(object instanceof(object=0,Object)))throw new Test262Error("#2: var object = {};  object instanceof (object = 0, Object) === true");
+var OBJECT=0;if(OBJECT=Object,!({}instanceof OBJECT))throw new Test262Error("#1: var OBJECT = 0; (OBJECT = Object, {}) instanceof OBJECT === true");var object={};if(!(object instanceof(object=0,Object)))throw new Test262Error("#2: var object = {};  object instanceof (object = 0, Object) === true");␊



test262/test/built-ins/Temporal/PlainDate/prototype/withCalendar/calendar-temporal-object.js 13


Differences (-oxc|+esbuild):
-const plainDate=new Temporal.PlainDate(2e3,5,2),plainDateTime=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321),plainMonthDay=new Temporal.PlainMonthDay(5,2),plainYearMonth=new Temporal.PlainYearMonth(2e3,5),zonedDateTime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");[plainDate,plainDateTime,plainMonthDay,plainYearMonth,zonedDateTime].forEach(arg=>{let actual=[],expected=[];Object.defineProperty(arg,"calendar",{get(){return actual.push("get calendar"),calendar}});let instance=new Temporal.PlainDate(1976,11,18,"iso8601"),result=instance.withCalendar(arg);assert.sameValue(result.calendarId,"iso8601","Temporal object coerced to calendar"),assert.compareArray(actual,expected,"calendar getter not called")});
+const plainDate=new Temporal.PlainDate(2e3,5,2),plainDateTime=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321),plainMonthDay=new Temporal.PlainMonthDay(5,2),plainYearMonth=new Temporal.PlainYearMonth(2e3,5),zonedDateTime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");[plainDate,plainDateTime,plainMonthDay,plainYearMonth,zonedDateTime].forEach(arg=>{const actual=[],expected=[];Object.defineProperty(arg,"calendar",{get(){return actual.push("get calendar"),calendar}});const result=new Temporal.PlainDate(1976,11,18,"iso8601").withCalendar(arg);assert.sameValue(result.calendarId,"iso8601","Temporal object coerced to calendar"),assert.compareArray(actual,expected,"calendar getter not called")});␊



test262/test/built-ins/TypedArrayConstructors/internals/Delete/key-is-out-of-bounds-strict.js 1


Differences (-oxc|+esbuild):
-testWithTypedArrayConstructors(function(TA){let proto=TypedArray.prototype,descriptorGetterThrows={configurable:!0,get(){throw new Test262Error("OrdinaryGet was called!")}};Object.defineProperties(proto,{["-1"]:descriptorGetterThrows,1:descriptorGetterThrows});let sample=new TA(1);assert.sameValue(delete sample[-1],!0,'The value of `delete sample["-1"]` is true'),assert.sameValue(delete sample[-1],!0,"The value of `delete sample[-1]` is true"),assert.throws(TypeError,()=>{delete sample[0]}),assert.throws(TypeError,()=>{delete sample[0]}),assert.sameValue(delete sample[1],!0,'The value of `delete sample["1"]` is true'),assert.sameValue(delete sample[1],!0,"The value of `delete sample[1]` is true")});
+testWithTypedArrayConstructors(function(TA){let proto=TypedArray.prototype,descriptorGetterThrows={configurable:!0,get(){throw new Test262Error("OrdinaryGet was called!")}};Object.defineProperties(proto,{"-1":descriptorGetterThrows,1:descriptorGetterThrows});let sample=new TA(1);assert.sameValue(delete sample[-1],!0,'The value of `delete sample["-1"]` is true'),assert.sameValue(delete sample[-1],!0,"The value of `delete sample[-1]` is true"),assert.throws(TypeError,()=>{delete sample[0]}),assert.throws(TypeError,()=>{delete sample[0]}),assert.sameValue(delete sample[1],!0,'The value of `delete sample["1"]` is true'),assert.sameValue(delete sample[1],!0,"The value of `delete sample[1]` is true")});␊



test262/test/built-ins/Map/map-iterable-empty-does-not-call-set.js 11


Differences (-oxc|+esbuild):
-var set=Map.prototype.set,counter=0;Map.prototype.set=function(value){counter++,set.call(this,value)},new Map([]),assert.sameValue(counter,0,"`Map.prototype.set` was not called.");
+var set=Map.prototype.set,counter=0;Map.prototype.set=function(value){counter++,set.call(this,value)},assert.sameValue(counter,0,"`Map.prototype.set` was not called.");␊



test262/test/language/statements/for/head-init-expr-check-empty-inc-empty-syntax.js 10


Differences (-oxc|+esbuild):
-var supreme=5,count;for(count=0;;){if(count===supreme)break;count++}
+var supreme=5,count;for(count=0;count!==supreme;)count++;␊



test262/test/language/expressions/modulus/line-terminator.js 4


Differences (-oxc|+esbuild):
-var x=18%7%3;assert.sameValue(x,1);
+var x=1;assert.sameValue(x,1);␊



test262/test/language/statements/for/S12.6.3_A12.1_T1.js 5


Differences (-oxc|+esbuild):
-var __str;__str="";for(var index=0;index<10;index+=1){if(index>5)break;__str+=index}if(__str!=="012345")throw new Test262Error('#1: __str === "012345". Actual:  __str ==='+__str);
+var __str;__str="";for(var index=0;index<10&&!(index>5);index+=1)__str+=index;if(__str!=="012345")throw new Test262Error('#1: __str === "012345". Actual:  __str ==='+__str);␊



test262/test/built-ins/Map/valid-keys.js 204


Differences (-oxc|+esbuild):
-const negativeZero=-0,positiveZero=0,zero=0,one=1,twoRaisedToFiftyThreeMinusOne=2**53-1,int32Array=new Int32Array([zero,one]),uint32Array=new Uint32Array([zero,one]),n=100000000000000000000000000000000000000000000000000000000000000000000000000000000001n,bigInt=BigInt("100000000000000000000000000000000000000000000000000000000000000000000000000000000001"),n1=1n,n53=9007199254740991n,fiftyThree=BigInt("9007199254740991"),bigInt64Array=new BigInt64Array([n1,n53]),bigUint64Array=new BigUint64Array([n1,n53]),symbol=Symbol(""),object={},array=[],string="",booleanTrue=!0,booleanFalse=!0,functionExprValue=function(){},arrowFunctionValue=()=>{},classValue=class{},map=new Map,set=new Set,weakMap=new WeakMap,weakRef=new WeakRef({}),weakSet=new WeakSet,nullValue=null,undefinedValue=void 0;let unassigned;{let m=new Map([[negativeZero,negativeZero]]);assert.sameValue(m.size,1),assert.sameValue(m.has(negativeZero),!0),assert.sameValue(m.get(negativeZero),negativeZero),m.delete(negativeZero),assert.sameValue(m.size,0),assert.sameValue(m.has(negativeZero),!1),m.set(negativeZero,negativeZero),assert.sameValue(m.size,1),assert.sameValue(m.has(negativeZero),!0),assert.sameValue(m.get(negativeZero),negativeZero)}{let m=new Map([[positiveZero,positiveZero]]);assert.sameValue(m.size,1),assert.sameValue(m.has(positiveZero),!0),assert.sameValue(m.get(positiveZero),positiveZero),m.delete(positiveZero),assert.sameValue(m.size,0),assert.sameValue(m.has(positiveZero),!1),m.set(positiveZero,positiveZero),assert.sameValue(m.size,1),assert.sameValue(m.has(positiveZero),!0),assert.sameValue(m.get(positiveZero),positiveZero)}{let m=new Map([[zero,zero]]);assert.sameValue(m.size,1),assert.sameValue(m.has(zero),!0),assert.sameValue(m.get(zero),zero),m.delete(zero),assert.sameValue(m.size,0),assert.sameValue(m.has(zero),!1),m.set(zero,zero),assert.sameValue(m.size,1),assert.sameValue(m.has(zero),!0),assert.sameValue(m.get(zero),zero)}{let m=new Map([[one,one]]);assert.sameValue(m.size,1),assert.sameValue(m.has(one),!0),assert.sameValue(m.get(one),one),m.delete(one),assert.sameValue(m.size,0),assert.sameValue(m.has(one),!1),m.set(one,one),assert.sameValue(m.size,1),assert.sameValue(m.has(one),!0),assert.sameValue(m.get(one),one)}{let m=new Map([[twoRaisedToFiftyThreeMinusOne,twoRaisedToFiftyThreeMinusOne]]);assert.sameValue(m.size,1),assert.sameValue(m.has(twoRaisedToFiftyThreeMinusOne),!0),assert.sameValue(m.get(twoRaisedToFiftyThreeMinusOne),twoRaisedToFiftyThreeMinusOne),m.delete(twoRaisedToFiftyThreeMinusOne),assert.sameValue(m.size,0),assert.sameValue(m.has(twoRaisedToFiftyThreeMinusOne),!1),m.set(twoRaisedToFiftyThreeMinusOne,twoRaisedToFiftyThreeMinusOne),assert.sameValue(m.size,1),assert.sameValue(m.has(twoRaisedToFiftyThreeMinusOne),!0),assert.sameValue(m.get(twoRaisedToFiftyThreeMinusOne),twoRaisedToFiftyThreeMinusOne)}{let m=new Map([[int32Array,int32Array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(int32Array),!0),assert.sameValue(m.get(int32Array),int32Array),m.delete(int32Array),assert.sameValue(m.size,0),assert.sameValue(m.has(int32Array),!1),m.set(int32Array,int32Array),assert.sameValue(m.size,1),assert.sameValue(m.has(int32Array),!0),assert.sameValue(m.get(int32Array),int32Array)}{let m=new Map([[uint32Array,uint32Array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(uint32Array),!0),assert.sameValue(m.get(uint32Array),uint32Array),m.delete(uint32Array),assert.sameValue(m.size,0),assert.sameValue(m.has(uint32Array),!1),m.set(uint32Array,uint32Array),assert.sameValue(m.size,1),assert.sameValue(m.has(uint32Array),!0),assert.sameValue(m.get(uint32Array),uint32Array)}{let m=new Map([[n,n]]);assert.sameValue(m.size,1),assert.sameValue(m.has(n),!0),assert.sameValue(m.get(n),n),m.delete(n),assert.sameValue(m.size,0),assert.sameValue(m.has(n),!1),m.set(n,n),assert.sameValue(m.size,1),assert.sameValue(m.has(n),!0),assert.sameValue(m.get(n),n)}{let m=new Map([[bigInt,bigInt]]);assert.sameValue(m.size,1),assert.sameValue(m.has(bigInt),!0),assert.sameValue(m.get(bigInt),bigInt),m.delete(bigInt),assert.sameValue(m.size,0),assert.sameValue(m.has(bigInt),!1),m.set(bigInt,bigInt),assert.sameValue(m.size,1),assert.sameValue(m.has(bigInt),!0),assert.sameValue(m.get(bigInt),bigInt)}{let m=new Map([[n1,n1]]);assert.sameValue(m.size,1),assert.sameValue(m.has(n1),!0),assert.sameValue(m.get(n1),n1),m.delete(n1),assert.sameValue(m.size,0),assert.sameValue(m.has(n1),!1),m.set(n1,n1),assert.sameValue(m.size,1),assert.sameValue(m.has(n1),!0),assert.sameValue(m.get(n1),n1)}{let m=new Map([[n53,n53]]);assert.sameValue(m.size,1),assert.sameValue(m.has(n53),!0),assert.sameValue(m.get(n53),n53),m.delete(n53),assert.sameValue(m.size,0),assert.sameValue(m.has(n53),!1),m.set(n53,n53),assert.sameValue(m.size,1),assert.sameValue(m.has(n53),!0),assert.sameValue(m.get(n53),n53)}{let m=new Map([[fiftyThree,fiftyThree]]);assert.sameValue(m.size,1),assert.sameValue(m.has(fiftyThree),!0),assert.sameValue(m.get(fiftyThree),fiftyThree),m.delete(fiftyThree),assert.sameValue(m.size,0),assert.sameValue(m.has(fiftyThree),!1),m.set(fiftyThree,fiftyThree),assert.sameValue(m.size,1),assert.sameValue(m.has(fiftyThree),!0),assert.sameValue(m.get(fiftyThree),fiftyThree)}{let m=new Map([[bigInt64Array,bigInt64Array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(bigInt64Array),!0),assert.sameValue(m.get(bigInt64Array),bigInt64Array),m.delete(bigInt64Array),assert.sameValue(m.size,0),assert.sameValue(m.has(bigInt64Array),!1),m.set(bigInt64Array,bigInt64Array),assert.sameValue(m.size,1),assert.sameValue(m.has(bigInt64Array),!0),assert.sameValue(m.get(bigInt64Array),bigInt64Array)}{let m=new Map([[bigUint64Array,bigUint64Array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(bigUint64Array),!0),assert.sameValue(m.get(bigUint64Array),bigUint64Array),m.delete(bigUint64Array),assert.sameValue(m.size,0),assert.sameValue(m.has(bigUint64Array),!1),m.set(bigUint64Array,bigUint64Array),assert.sameValue(m.size,1),assert.sameValue(m.has(bigUint64Array),!0),assert.sameValue(m.get(bigUint64Array),bigUint64Array)}{let m=new Map([[symbol,symbol]]);assert.sameValue(m.size,1),assert.sameValue(m.has(symbol),!0),assert.sameValue(m.get(symbol),symbol),m.delete(symbol),assert.sameValue(m.size,0),assert.sameValue(m.has(symbol),!1),m.set(symbol,symbol),assert.sameValue(m.size,1),assert.sameValue(m.has(symbol),!0),assert.sameValue(m.get(symbol),symbol)}{let m=new Map([[object,object]]);assert.sameValue(m.size,1),assert.sameValue(m.has(object),!0),assert.sameValue(m.get(object),object),m.delete(object),assert.sameValue(m.size,0),assert.sameValue(m.has(object),!1),m.set(object,object),assert.sameValue(m.size,1),assert.sameValue(m.has(object),!0),assert.sameValue(m.get(object),object)}{let m=new Map([[array,array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(array),!0),assert.sameValue(m.get(array),array),m.delete(array),assert.sameValue(m.size,0),assert.sameValue(m.has(array),!1),m.set(array,array),assert.sameValue(m.size,1),assert.sameValue(m.has(array),!0),assert.sameValue(m.get(array),array)}{let m=new Map([[string,string]]);assert.sameValue(m.size,1),assert.sameValue(m.has(string),!0),assert.sameValue(m.get(string),string),m.delete(string),assert.sameValue(m.size,0),assert.sameValue(m.has(string),!1),m.set(string,string),assert.sameValue(m.size,1),assert.sameValue(m.has(string),!0),assert.sameValue(m.get(string),string)}{let m=new Map([[booleanTrue,booleanTrue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(booleanTrue),!0),assert.sameValue(m.get(booleanTrue),booleanTrue),m.delete(booleanTrue),assert.sameValue(m.size,0),assert.sameValue(m.has(booleanTrue),!1),m.set(booleanTrue,booleanTrue),assert.sameValue(m.size,1),assert.sameValue(m.has(booleanTrue),!0),assert.sameValue(m.get(booleanTrue),booleanTrue)}{let m=new Map([[booleanFalse,booleanFalse]]);assert.sameValue(m.size,1),assert.sameValue(m.has(booleanFalse),!0),assert.sameValue(m.get(booleanFalse),booleanFalse),m.delete(booleanFalse),assert.sameValue(m.size,0),assert.sameValue(m.has(booleanFalse),!1),m.set(booleanFalse,booleanFalse),assert.sameValue(m.size,1),assert.sameValue(m.has(booleanFalse),!0),assert.sameValue(m.get(booleanFalse),booleanFalse)}{let m=new Map([[functionExprValue,functionExprValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(functionExprValue),!0),assert.sameValue(m.get(functionExprValue),functionExprValue),m.delete(functionExprValue),assert.sameValue(m.size,0),assert.sameValue(m.has(functionExprValue),!1),m.set(functionExprValue,functionExprValue),assert.sameValue(m.size,1),assert.sameValue(m.has(functionExprValue),!0),assert.sameValue(m.get(functionExprValue),functionExprValue)}{let m=new Map([[arrowFunctionValue,arrowFunctionValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(arrowFunctionValue),!0),assert.sameValue(m.get(arrowFunctionValue),arrowFunctionValue),m.delete(arrowFunctionValue),assert.sameValue(m.size,0),assert.sameValue(m.has(arrowFunctionValue),!1),m.set(arrowFunctionValue,arrowFunctionValue),assert.sameValue(m.size,1),assert.sameValue(m.has(arrowFunctionValue),!0),assert.sameValue(m.get(arrowFunctionValue),arrowFunctionValue)}{let m=new Map([[classValue,classValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(classValue),!0),assert.sameValue(m.get(classValue),classValue),m.delete(classValue),assert.sameValue(m.size,0),assert.sameValue(m.has(classValue),!1),m.set(classValue,classValue),assert.sameValue(m.size,1),assert.sameValue(m.has(classValue),!0),assert.sameValue(m.get(classValue),classValue)}{let m=new Map([[map,map]]);assert.sameValue(m.size,1),assert.sameValue(m.has(map),!0),assert.sameValue(m.get(map),map),m.delete(map),assert.sameValue(m.size,0),assert.sameValue(m.has(map),!1),m.set(map,map),assert.sameValue(m.size,1),assert.sameValue(m.has(map),!0),assert.sameValue(m.get(map),map)}{let m=new Map([[set,set]]);assert.sameValue(m.size,1),assert.sameValue(m.has(set),!0),assert.sameValue(m.get(set),set),m.delete(set),assert.sameValue(m.size,0),assert.sameValue(m.has(set),!1),m.set(set,set),assert.sameValue(m.size,1),assert.sameValue(m.has(set),!0),assert.sameValue(m.get(set),set)}{let m=new Map([[weakMap,weakMap]]);assert.sameValue(m.size,1),assert.sameValue(m.has(weakMap),!0),assert.sameValue(m.get(weakMap),weakMap),m.delete(weakMap),assert.sameValue(m.size,0),assert.sameValue(m.has(weakMap),!1),m.set(weakMap,weakMap),assert.sameValue(m.size,1),assert.sameValue(m.has(weakMap),!0),assert.sameValue(m.get(weakMap),weakMap)}{let m=new Map([[weakRef,weakRef]]);assert.sameValue(m.size,1),assert.sameValue(m.has(weakRef),!0),assert.sameValue(m.get(weakRef),weakRef),m.delete(weakRef),assert.sameValue(m.size,0),assert.sameValue(m.has(weakRef),!1),m.set(weakRef,weakRef),assert.sameValue(m.size,1),assert.sameValue(m.has(weakRef),!0),assert.sameValue(m.get(weakRef),weakRef)}{let m=new Map([[weakSet,weakSet]]);assert.sameValue(m.size,1),assert.sameValue(m.has(weakSet),!0),assert.sameValue(m.get(weakSet),weakSet),m.delete(weakSet),assert.sameValue(m.size,0),assert.sameValue(m.has(weakSet),!1),m.set(weakSet,weakSet),assert.sameValue(m.size,1),assert.sameValue(m.has(weakSet),!0),assert.sameValue(m.get(weakSet),weakSet)}{let m=new Map([[nullValue,nullValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(nullValue),!0),assert.sameValue(m.get(nullValue),nullValue),m.delete(nullValue),assert.sameValue(m.size,0),assert.sameValue(m.has(nullValue),!1),m.set(nullValue,nullValue),assert.sameValue(m.size,1),assert.sameValue(m.has(nullValue),!0),assert.sameValue(m.get(nullValue),nullValue)}{let m=new Map([[undefinedValue,undefinedValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(undefinedValue),!0),assert.sameValue(m.get(undefinedValue),undefinedValue),m.delete(undefinedValue),assert.sameValue(m.size,0),assert.sameValue(m.has(undefinedValue),!1),m.set(undefinedValue,undefinedValue),assert.sameValue(m.size,1),assert.sameValue(m.has(undefinedValue),!0),assert.sameValue(m.get(undefinedValue),undefinedValue)}{let m=new Map([[unassigned,unassigned]]);assert.sameValue(m.size,1),assert.sameValue(m.has(unassigned),!0),assert.sameValue(m.get(unassigned),unassigned),m.delete(unassigned),assert.sameValue(m.size,0),assert.sameValue(m.has(unassigned),!1),m.set(unassigned,unassigned),assert.sameValue(m.size,1),assert.sameValue(m.has(unassigned),!0),assert.sameValue(m.get(unassigned),unassigned)}
+var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});const negativeZero=-0,positiveZero=0,zero=0,one=1,twoRaisedToFiftyThreeMinusOne=9007199254740991,int32Array=new Int32Array([0,1]),uint32Array=new Uint32Array([0,1]),n=100000000000000000000000000000000000000000000000000000000000000000000000000000000001n,bigInt=BigInt("100000000000000000000000000000000000000000000000000000000000000000000000000000000001"),n1=1n,n53=9007199254740991n,fiftyThree=BigInt("9007199254740991"),bigInt64Array=new BigInt64Array([n1,n53]),bigUint64Array=new BigUint64Array([n1,n53]),symbol=Symbol(""),object={},array=[],string="",booleanTrue=!0,booleanFalse=!0,functionExprValue=__name(function(){},"functionExprValue"),arrowFunctionValue=__name(()=>{},"arrowFunctionValue"),classValue=class{static{__name(this,"classValue")}},map=new Map,set=new Set,weakMap=new WeakMap,weakRef=new WeakRef({}),weakSet=new WeakSet,nullValue=null,undefinedValue=void 0;let unassigned;{const m=new Map([[-0,-0]]);assert.sameValue(m.size,1),assert.sameValue(m.has(-0),!0),assert.sameValue(m.get(-0),-0),m.delete(-0),assert.sameValue(m.size,0),assert.sameValue(m.has(-0),!1),m.set(-0,-0),assert.sameValue(m.size,1),assert.sameValue(m.has(-0),!0),assert.sameValue(m.get(-0),-0)}{const m=new Map([[0,0]]);assert.sameValue(m.size,1),assert.sameValue(m.has(0),!0),assert.sameValue(m.get(0),0),m.delete(0),assert.sameValue(m.size,0),assert.sameValue(m.has(0),!1),m.set(0,0),assert.sameValue(m.size,1),assert.sameValue(m.has(0),!0),assert.sameValue(m.get(0),0)}{const m=new Map([[0,0]]);assert.sameValue(m.size,1),assert.sameValue(m.has(0),!0),assert.sameValue(m.get(0),0),m.delete(0),assert.sameValue(m.size,0),assert.sameValue(m.has(0),!1),m.set(0,0),assert.sameValue(m.size,1),assert.sameValue(m.has(0),!0),assert.sameValue(m.get(0),0)}{const m=new Map([[1,1]]);assert.sameValue(m.size,1),assert.sameValue(m.has(1),!0),assert.sameValue(m.get(1),1),m.delete(1),assert.sameValue(m.size,0),assert.sameValue(m.has(1),!1),m.set(1,1),assert.sameValue(m.size,1),assert.sameValue(m.has(1),!0),assert.sameValue(m.get(1),1)}{const m=new Map([[9007199254740991,9007199254740991]]);assert.sameValue(m.size,1),assert.sameValue(m.has(9007199254740991),!0),assert.sameValue(m.get(9007199254740991),9007199254740991),m.delete(9007199254740991),assert.sameValue(m.size,0),assert.sameValue(m.has(9007199254740991),!1),m.set(9007199254740991,9007199254740991),assert.sameValue(m.size,1),assert.sameValue(m.has(9007199254740991),!0),assert.sameValue(m.get(9007199254740991),9007199254740991)}{const m=new Map([[int32Array,int32Array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(int32Array),!0),assert.sameValue(m.get(int32Array),int32Array),m.delete(int32Array),assert.sameValue(m.size,0),assert.sameValue(m.has(int32Array),!1),m.set(int32Array,int32Array),assert.sameValue(m.size,1),assert.sameValue(m.has(int32Array),!0),assert.sameValue(m.get(int32Array),int32Array)}{const m=new Map([[uint32Array,uint32Array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(uint32Array),!0),assert.sameValue(m.get(uint32Array),uint32Array),m.delete(uint32Array),assert.sameValue(m.size,0),assert.sameValue(m.has(uint32Array),!1),m.set(uint32Array,uint32Array),assert.sameValue(m.size,1),assert.sameValue(m.has(uint32Array),!0),assert.sameValue(m.get(uint32Array),uint32Array)}{const m=new Map([[n,n]]);assert.sameValue(m.size,1),assert.sameValue(m.has(n),!0),assert.sameValue(m.get(n),n),m.delete(n),assert.sameValue(m.size,0),assert.sameValue(m.has(n),!1),m.set(n,n),assert.sameValue(m.size,1),assert.sameValue(m.has(n),!0),assert.sameValue(m.get(n),n)}{const m=new Map([[bigInt,bigInt]]);assert.sameValue(m.size,1),assert.sameValue(m.has(bigInt),!0),assert.sameValue(m.get(bigInt),bigInt),m.delete(bigInt),assert.sameValue(m.size,0),assert.sameValue(m.has(bigInt),!1),m.set(bigInt,bigInt),assert.sameValue(m.size,1),assert.sameValue(m.has(bigInt),!0),assert.sameValue(m.get(bigInt),bigInt)}{const m=new Map([[n1,n1]]);assert.sameValue(m.size,1),assert.sameValue(m.has(n1),!0),assert.sameValue(m.get(n1),n1),m.delete(n1),assert.sameValue(m.size,0),assert.sameValue(m.has(n1),!1),m.set(n1,n1),assert.sameValue(m.size,1),assert.sameValue(m.has(n1),!0),assert.sameValue(m.get(n1),n1)}{const m=new Map([[n53,n53]]);assert.sameValue(m.size,1),assert.sameValue(m.has(n53),!0),assert.sameValue(m.get(n53),n53),m.delete(n53),assert.sameValue(m.size,0),assert.sameValue(m.has(n53),!1),m.set(n53,n53),assert.sameValue(m.size,1),assert.sameValue(m.has(n53),!0),assert.sameValue(m.get(n53),n53)}{const m=new Map([[fiftyThree,fiftyThree]]);assert.sameValue(m.size,1),assert.sameValue(m.has(fiftyThree),!0),assert.sameValue(m.get(fiftyThree),fiftyThree),m.delete(fiftyThree),assert.sameValue(m.size,0),assert.sameValue(m.has(fiftyThree),!1),m.set(fiftyThree,fiftyThree),assert.sameValue(m.size,1),assert.sameValue(m.has(fiftyThree),!0),assert.sameValue(m.get(fiftyThree),fiftyThree)}{const m=new Map([[bigInt64Array,bigInt64Array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(bigInt64Array),!0),assert.sameValue(m.get(bigInt64Array),bigInt64Array),m.delete(bigInt64Array),assert.sameValue(m.size,0),assert.sameValue(m.has(bigInt64Array),!1),m.set(bigInt64Array,bigInt64Array),assert.sameValue(m.size,1),assert.sameValue(m.has(bigInt64Array),!0),assert.sameValue(m.get(bigInt64Array),bigInt64Array)}{const m=new Map([[bigUint64Array,bigUint64Array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(bigUint64Array),!0),assert.sameValue(m.get(bigUint64Array),bigUint64Array),m.delete(bigUint64Array),assert.sameValue(m.size,0),assert.sameValue(m.has(bigUint64Array),!1),m.set(bigUint64Array,bigUint64Array),assert.sameValue(m.size,1),assert.sameValue(m.has(bigUint64Array),!0),assert.sameValue(m.get(bigUint64Array),bigUint64Array)}{const m=new Map([[symbol,symbol]]);assert.sameValue(m.size,1),assert.sameValue(m.has(symbol),!0),assert.sameValue(m.get(symbol),symbol),m.delete(symbol),assert.sameValue(m.size,0),assert.sameValue(m.has(symbol),!1),m.set(symbol,symbol),assert.sameValue(m.size,1),assert.sameValue(m.has(symbol),!0),assert.sameValue(m.get(symbol),symbol)}{const m=new Map([[object,object]]);assert.sameValue(m.size,1),assert.sameValue(m.has(object),!0),assert.sameValue(m.get(object),object),m.delete(object),assert.sameValue(m.size,0),assert.sameValue(m.has(object),!1),m.set(object,object),assert.sameValue(m.size,1),assert.sameValue(m.has(object),!0),assert.sameValue(m.get(object),object)}{const m=new Map([[array,array]]);assert.sameValue(m.size,1),assert.sameValue(m.has(array),!0),assert.sameValue(m.get(array),array),m.delete(array),assert.sameValue(m.size,0),assert.sameValue(m.has(array),!1),m.set(array,array),assert.sameValue(m.size,1),assert.sameValue(m.has(array),!0),assert.sameValue(m.get(array),array)}{const m=new Map([[string,string]]);assert.sameValue(m.size,1),assert.sameValue(m.has(string),!0),assert.sameValue(m.get(string),string),m.delete(string),assert.sameValue(m.size,0),assert.sameValue(m.has(string),!1),m.set(string,string),assert.sameValue(m.size,1),assert.sameValue(m.has(string),!0),assert.sameValue(m.get(string),string)}{const m=new Map([[booleanTrue,booleanTrue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(booleanTrue),!0),assert.sameValue(m.get(booleanTrue),booleanTrue),m.delete(booleanTrue),assert.sameValue(m.size,0),assert.sameValue(m.has(booleanTrue),!1),m.set(booleanTrue,booleanTrue),assert.sameValue(m.size,1),assert.sameValue(m.has(booleanTrue),!0),assert.sameValue(m.get(booleanTrue),booleanTrue)}{const m=new Map([[booleanFalse,booleanFalse]]);assert.sameValue(m.size,1),assert.sameValue(m.has(booleanFalse),!0),assert.sameValue(m.get(booleanFalse),booleanFalse),m.delete(booleanFalse),assert.sameValue(m.size,0),assert.sameValue(m.has(booleanFalse),!1),m.set(booleanFalse,booleanFalse),assert.sameValue(m.size,1),assert.sameValue(m.has(booleanFalse),!0),assert.sameValue(m.get(booleanFalse),booleanFalse)}{const m=new Map([[functionExprValue,functionExprValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(functionExprValue),!0),assert.sameValue(m.get(functionExprValue),functionExprValue),m.delete(functionExprValue),assert.sameValue(m.size,0),assert.sameValue(m.has(functionExprValue),!1),m.set(functionExprValue,functionExprValue),assert.sameValue(m.size,1),assert.sameValue(m.has(functionExprValue),!0),assert.sameValue(m.get(functionExprValue),functionExprValue)}{const m=new Map([[arrowFunctionValue,arrowFunctionValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(arrowFunctionValue),!0),assert.sameValue(m.get(arrowFunctionValue),arrowFunctionValue),m.delete(arrowFunctionValue),assert.sameValue(m.size,0),assert.sameValue(m.has(arrowFunctionValue),!1),m.set(arrowFunctionValue,arrowFunctionValue),assert.sameValue(m.size,1),assert.sameValue(m.has(arrowFunctionValue),!0),assert.sameValue(m.get(arrowFunctionValue),arrowFunctionValue)}{const m=new Map([[classValue,classValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(classValue),!0),assert.sameValue(m.get(classValue),classValue),m.delete(classValue),assert.sameValue(m.size,0),assert.sameValue(m.has(classValue),!1),m.set(classValue,classValue),assert.sameValue(m.size,1),assert.sameValue(m.has(classValue),!0),assert.sameValue(m.get(classValue),classValue)}{const m=new Map([[map,map]]);assert.sameValue(m.size,1),assert.sameValue(m.has(map),!0),assert.sameValue(m.get(map),map),m.delete(map),assert.sameValue(m.size,0),assert.sameValue(m.has(map),!1),m.set(map,map),assert.sameValue(m.size,1),assert.sameValue(m.has(map),!0),assert.sameValue(m.get(map),map)}{const m=new Map([[set,set]]);assert.sameValue(m.size,1),assert.sameValue(m.has(set),!0),assert.sameValue(m.get(set),set),m.delete(set),assert.sameValue(m.size,0),assert.sameValue(m.has(set),!1),m.set(set,set),assert.sameValue(m.size,1),assert.sameValue(m.has(set),!0),assert.sameValue(m.get(set),set)}{const m=new Map([[weakMap,weakMap]]);assert.sameValue(m.size,1),assert.sameValue(m.has(weakMap),!0),assert.sameValue(m.get(weakMap),weakMap),m.delete(weakMap),assert.sameValue(m.size,0),assert.sameValue(m.has(weakMap),!1),m.set(weakMap,weakMap),assert.sameValue(m.size,1),assert.sameValue(m.has(weakMap),!0),assert.sameValue(m.get(weakMap),weakMap)}{const m=new Map([[weakRef,weakRef]]);assert.sameValue(m.size,1),assert.sameValue(m.has(weakRef),!0),assert.sameValue(m.get(weakRef),weakRef),m.delete(weakRef),assert.sameValue(m.size,0),assert.sameValue(m.has(weakRef),!1),m.set(weakRef,weakRef),assert.sameValue(m.size,1),assert.sameValue(m.has(weakRef),!0),assert.sameValue(m.get(weakRef),weakRef)}{const m=new Map([[weakSet,weakSet]]);assert.sameValue(m.size,1),assert.sameValue(m.has(weakSet),!0),assert.sameValue(m.get(weakSet),weakSet),m.delete(weakSet),assert.sameValue(m.size,0),assert.sameValue(m.has(weakSet),!1),m.set(weakSet,weakSet),assert.sameValue(m.size,1),assert.sameValue(m.has(weakSet),!0),assert.sameValue(m.get(weakSet),weakSet)}{const m=new Map([[nullValue,nullValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(nullValue),!0),assert.sameValue(m.get(nullValue),nullValue),m.delete(nullValue),assert.sameValue(m.size,0),assert.sameValue(m.has(nullValue),!1),m.set(nullValue,nullValue),assert.sameValue(m.size,1),assert.sameValue(m.has(nullValue),!0),assert.sameValue(m.get(nullValue),nullValue)}{const m=new Map([[undefinedValue,undefinedValue]]);assert.sameValue(m.size,1),assert.sameValue(m.has(undefinedValue),!0),assert.sameValue(m.get(undefinedValue),undefinedValue),m.delete(undefinedValue),assert.sameValue(m.size,0),assert.sameValue(m.has(undefinedValue),!1),m.set(undefinedValue,undefinedValue),assert.sameValue(m.size,1),assert.sameValue(m.has(undefinedValue),!0),assert.sameValue(m.get(undefinedValue),undefinedValue)}{const m=new Map([[unassigned,unassigned]]);assert.sameValue(m.size,1),assert.sameValue(m.has(unassigned),!0),assert.sameValue(m.get(unassigned),unassigned),m.delete(unassigned),assert.sameValue(m.size,0),assert.sameValue(m.has(unassigned),!1),m.set(unassigned,unassigned),assert.sameValue(m.size,1),assert.sameValue(m.has(unassigned),!0),assert.sameValue(m.get(unassigned),unassigned)}␊



test262/test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-7.js 48


Differences (-oxc|+esbuild):
-const units=["seconds","milliseconds","microseconds","nanoseconds"],toNanos={seconds:1000000000n,milliseconds:1000000n,microseconds:1000n,nanoseconds:1n},integers=[0,1,2,2**51,2**52,2**53,2**54],fractions=[0,1,10,100,125,200,250,500,750,800,900,950,999,1e3,1999,2e3,2999,3e3,3999,4e3,4999,999999,1e6,1000001,999999999,1e9,1000000001],maxTimeDuration=2n**53n*10n**9n-1n;for(let unit of units.slice(0,-1)){let smallerUnit=units[units.indexOf(unit)+1];for(let integer of integers)for(let fraction of fractions){let totalNanoseconds=BigInt(integer)*toNanos[unit]+BigInt(fraction)*toNanos[smallerUnit];if(totalNanoseconds>maxTimeDuration)continue;let i=BigInt(integer)+BigInt(fraction)/1000n,f=String(fraction%1e3).padStart(3,"0"),expected=Number(`${i}.${f}`),d=Temporal.Duration.from({[unit]:integer,[smallerUnit]:fraction}),actual=d.total(unit);assert.sameValue(actual,expected,`${unit}=${integer}, ${smallerUnit}=${fraction}`)}}
+const units=["seconds","milliseconds","microseconds","nanoseconds"],toNanos={seconds:1000000000n,milliseconds:1000000n,microseconds:1000n,nanoseconds:1n},integers=[0,1,2,2**51,2**52,2**53,2**54],fractions=[0,1,10,100,125,200,250,500,750,800,900,950,999,1e3,1999,2e3,2999,3e3,3999,4e3,4999,999999,1e6,1000001,999999999,1e9,1000000001],maxTimeDuration=2n**53n*10n**9n-1n;for(let unit of units.slice(0,-1)){let smallerUnit=units[units.indexOf(unit)+1];for(let integer of integers)for(let fraction of fractions){if(BigInt(integer)*toNanos[unit]+BigInt(fraction)*toNanos[smallerUnit]>maxTimeDuration)continue;let i=BigInt(integer)+BigInt(fraction)/1000n,f=String(fraction%1e3).padStart(3,"0"),expected=+`${i}.${f}`,actual=Temporal.Duration.from({[unit]:integer,[smallerUnit]:fraction}).total(unit);assert.sameValue(actual,expected,`${unit}=${integer}, ${smallerUnit}=${fraction}`)}}␊



test262/test/language/statements/for/S12.6.3_A11_T1.js 9


Differences (-oxc|+esbuild):
-var __str,index;for(__str="",index=0;index<10;index+=1){if(index<5)continue;__str+=index}if(__str!=="56789")throw new Test262Error('#1: __str === "56789". Actual:  __str ==='+__str);
+var __str,index;for(__str="",index=0;index<10;index+=1)index<5||(__str+=index);if(__str!=="56789")throw new Test262Error('#1: __str === "56789". Actual:  __str ==='+__str);␊



test262/test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-6.js 10


Differences (-oxc|+esbuild):
-const data=[{hours:816,nanoseconds:2049187497660},{hours:7825,nanoseconds:1865665040770},{hours:0,nanoseconds:0xf45eaf8f62},{hours:2055144,nanoseconds:2502078444371},{hours:31,nanoseconds:0xeb547c7b59},{hours:24,nanoseconds:2958999560387},{hours:0,nanoseconds:342058521588},{hours:17746,nanoseconds:3009093506309},{hours:4,nanoseconds:892480914569},{hours:3954,nanoseconds:571647777618},{hours:27,nanoseconds:2322199502640},{hours:258054064,nanoseconds:2782411891222},{hours:1485,nanoseconds:2422559903100},{hours:0,nanoseconds:1461068214153},{hours:393,nanoseconds:1250229561658},{hours:0,nanoseconds:91035820},{hours:0,nanoseconds:790982655},{hours:150,nanoseconds:608531524},{hours:5469,nanoseconds:889204952},{hours:7870,nanoseconds:680042770}],nsPerHour=36e11,fractionDigits=Math.log10(nsPerHour)+Math.log10(1e11)-Math.log10(36);assert.sameValue(fractionDigits,22);for(let{hours,nanoseconds}of data){assert(nanoseconds<nsPerHour);let fraction=(BigInt(nanoseconds)*100000000000n/36n).toString().padStart(fractionDigits,"0"),expected=Number(`${hours}.${fraction}`),d=Temporal.Duration.from({hours,nanoseconds}),actual=d.total("hours");assert.sameValue(actual,expected,`hours=${hours}, nanoseconds=${nanoseconds}`)}
+const data=[{hours:816,nanoseconds:2049187497660},{hours:7825,nanoseconds:1865665040770},{hours:0,nanoseconds:0xf45eaf8f62},{hours:2055144,nanoseconds:2502078444371},{hours:31,nanoseconds:0xeb547c7b59},{hours:24,nanoseconds:2958999560387},{hours:0,nanoseconds:342058521588},{hours:17746,nanoseconds:3009093506309},{hours:4,nanoseconds:892480914569},{hours:3954,nanoseconds:571647777618},{hours:27,nanoseconds:2322199502640},{hours:258054064,nanoseconds:2782411891222},{hours:1485,nanoseconds:2422559903100},{hours:0,nanoseconds:1461068214153},{hours:393,nanoseconds:1250229561658},{hours:0,nanoseconds:91035820},{hours:0,nanoseconds:790982655},{hours:150,nanoseconds:608531524},{hours:5469,nanoseconds:889204952},{hours:7870,nanoseconds:680042770}],nsPerHour=36e11,fractionDigits=Math.log10(nsPerHour)+Math.log10(1e11)-Math.log10(36);assert.sameValue(fractionDigits,22);for(let{hours,nanoseconds}of data){assert(nanoseconds<nsPerHour);let fraction=(BigInt(nanoseconds)*100000000000n/36n).toString().padStart(fractionDigits,"0"),expected=+`${hours}.${fraction}`,actual=Temporal.Duration.from({hours,nanoseconds}).total("hours");assert.sameValue(actual,expected,`hours=${hours}, nanoseconds=${nanoseconds}`)}␊



test262/test/built-ins/Temporal/Duration/prototype/total/calendar-temporal-object.js 21


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let duration=new Temporal.Duration(1,1,1,1,1,1,1);duration.total({unit:"seconds",relativeTo:{year:2e3,month:1,day:1,calendar:temporalObject}})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.Duration(1,1,1,1,1,1,1).total({unit:"seconds",relativeTo:{year:2e3,month:1,day:1,calendar:temporalObject}})});␊



test262/test/language/statements/for/S12.6.3_A11_T2.js 35


Differences (-oxc|+esbuild):
-var __str,index,index_n;__str="";outer:for(index=0;index<4;index+=1)nested:for(index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue nested;__str+=""+index+index_n}if(__str!=="001011202122303133")throw new Test262Error('#1: __str === "001011202122303133". Actual:  __str ==='+__str);__str="";outer:for(index=0;index<4;index+=1)nested:for(index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue outer;__str+=""+index+index_n}if(__str!=="0010112021223031")throw new Test262Error('#2: __str === "0010112021223031". Actual:  __str ==='+__str);__str="";outer:for(index=0;index<4;index+=1)nested:for(index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue;__str+=""+index+index_n}if(__str!=="001011202122303133")throw new Test262Error('#3: __str === "001011202122303133". Actual:  __str ==='+__str);
+var __str,index,index_n;for(__str="",index=0;index<4;index+=1)nested:for(index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue nested;__str+=""+index+index_n}if(__str!=="001011202122303133")throw new Test262Error('#1: __str === "001011202122303133". Actual:  __str ==='+__str);__str="";outer:for(index=0;index<4;index+=1)for(index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue outer;__str+=""+index+index_n}if(__str!=="0010112021223031")throw new Test262Error('#2: __str === "0010112021223031". Actual:  __str ==='+__str);for(__str="",index=0;index<4;index+=1)for(index_n=0;index_n<=index;index_n++)index*index_n!=6&&(__str+=""+index+index_n);if(__str!=="001011202122303133")throw new Test262Error('#3: __str === "001011202122303133". Actual:  __str ==='+__str);␊



test262/test/built-ins/Temporal/PlainDate/prototype/until/roundingincrement-non-integer.js 5


Differences (-oxc|+esbuild):
-const earlier=new Temporal.PlainDate(2e3,5,2),later=new Temporal.PlainDate(2e3,5,7),result=earlier.until(later,{roundingIncrement:2.5,roundingMode:"trunc"});TemporalHelpers.assertDuration(result,0,0,0,4,0,0,0,0,0,0,"roundingIncrement 2.5 truncates to 2");const result2=earlier.until(later,{smallestUnit:"days",roundingIncrement:1000000000.5,roundingMode:"expand"});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");
+const earlier=new Temporal.PlainDate(2e3,5,2),later=new Temporal.PlainDate(2e3,5,7),result=earlier.until(later,{roundingIncrement:2.5,roundingMode:"trunc"});TemporalHelpers.assertDuration(result,0,0,0,4,0,0,0,0,0,0,"roundingIncrement 2.5 truncates to 2");const result2=earlier.until(later,{smallestUnit:"days",roundingIncrement:1e9+.5,roundingMode:"expand"});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");␊



test262/test/language/statements/for/S12.6.3_A12.1_T2.js 31


Differences (-oxc|+esbuild):
-var __str;__str="";outer:for(var index=0;index<4;index+=1)nested:for(var index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break nested;__str+=""+index+index_n}if(__str!=="00101120213031")throw new Test262Error('#1: __str === "00101120213031". Actual:  __str ==='+__str);__str="";outer:for(var index=0;index<4;index+=1)nested:for(var index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break outer;__str+=""+index+index_n}if(__str!=="0010112021")throw new Test262Error('#2: __str === "0010112021". Actual:  __str ==='+__str);__str="";outer:for(var index=0;index<4;index+=1)nested:for(var index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break;__str+=""+index+index_n}if(__str!=="00101120213031")throw new Test262Error('#3: __str === "00101120213031". Actual:  __str ==='+__str);
+var __str;__str="";for(var index=0;index<4;index+=1)nested:for(var index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break nested;__str+=""+index+index_n}if(__str!=="00101120213031")throw new Test262Error('#1: __str === "00101120213031". Actual:  __str ==='+__str);__str="";outer:for(var index=0;index<4;index+=1)for(var index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break outer;__str+=""+index+index_n}if(__str!=="0010112021")throw new Test262Error('#2: __str === "0010112021". Actual:  __str ==='+__str);__str="";for(var index=0;index<4;index+=1)for(var index_n=0;index_n<=index&&!(index*index_n>=4);index_n++)__str+=""+index+index_n;if(__str!=="00101120213031")throw new Test262Error('#3: __str === "00101120213031". Actual:  __str ==='+__str);␊



test262/test/language/statements/for/S12.6.3_A12_T2.js 31


Differences (-oxc|+esbuild):
-var __str,index,index_n;__str="";outer:for(index=0;index<4;index+=1)nested:for(index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break nested;__str+=""+index+index_n}if(__str!=="00101120213031")throw new Test262Error('#1: __str === "00101120213031". Actual:  __str ==='+__str);__str="";outer:for(index=0;index<4;index+=1)nested:for(index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break outer;__str+=""+index+index_n}if(__str!=="0010112021")throw new Test262Error('#2: __str === "0010112021". Actual:  __str ==='+__str);__str="";outer:for(index=0;index<4;index+=1)nested:for(index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break;__str+=""+index+index_n}if(__str!=="00101120213031")throw new Test262Error('#3: __str === "00101120213031". Actual:  __str ==='+__str);
+var __str,index,index_n;for(__str="",index=0;index<4;index+=1)nested:for(index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break nested;__str+=""+index+index_n}if(__str!=="00101120213031")throw new Test262Error('#1: __str === "00101120213031". Actual:  __str ==='+__str);__str="";outer:for(index=0;index<4;index+=1)for(index_n=0;index_n<=index;index_n++){if(index*index_n>=4)break outer;__str+=""+index+index_n}if(__str!=="0010112021")throw new Test262Error('#2: __str === "0010112021". Actual:  __str ==='+__str);for(__str="",index=0;index<4;index+=1)for(index_n=0;index_n<=index&&!(index*index_n>=4);index_n++)__str+=""+index+index_n;if(__str!=="00101120213031")throw new Test262Error('#3: __str === "00101120213031". Actual:  __str ==='+__str);␊



test262/test/language/statements/for/S12.6.3_A11.1_T2.js 35


Differences (-oxc|+esbuild):
-var __str;__str="";outer:for(var index=0;index<4;index+=1)nested:for(var index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue nested;__str+=""+index+index_n}if(__str!=="001011202122303133")throw new Test262Error('#1: __str === "001011202122303133". Actual:  __str ==='+__str);__str="";outer:for(var index=0;index<4;index+=1)nested:for(var index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue outer;__str+=""+index+index_n}if(__str!=="0010112021223031")throw new Test262Error('#2: __str === "0010112021223031". Actual:  __str ==='+__str);__str="";outer:for(var index=0;index<4;index+=1)nested:for(var index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue;__str+=""+index+index_n}if(__str!=="001011202122303133")throw new Test262Error('#3: __str === "001011202122303133". Actual:  __str ==='+__str);
+var __str;__str="";for(var index=0;index<4;index+=1)nested:for(var index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue nested;__str+=""+index+index_n}if(__str!=="001011202122303133")throw new Test262Error('#1: __str === "001011202122303133". Actual:  __str ==='+__str);__str="";outer:for(var index=0;index<4;index+=1)for(var index_n=0;index_n<=index;index_n++){if(index*index_n==6)continue outer;__str+=""+index+index_n}if(__str!=="0010112021223031")throw new Test262Error('#2: __str === "0010112021223031". Actual:  __str ==='+__str);__str="";for(var index=0;index<4;index+=1)for(var index_n=0;index_n<=index;index_n++)index*index_n!=6&&(__str+=""+index+index_n);if(__str!=="001011202122303133")throw new Test262Error('#3: __str === "001011202122303133". Actual:  __str ==='+__str);␊



test262/test/built-ins/Temporal/PlainDate/prototype/until/argument-plaindatetime.js 7


Differences (-oxc|+esbuild):
-TemporalHelpers.checkPlainDateTimeConversionFastPath(datetime=>{let date=new Temporal.PlainDate(2e3,5,2),result=date.until(datetime);assert.sameValue(result.total({unit:"nanoseconds"}),0,"time part dropped")});
+TemporalHelpers.checkPlainDateTimeConversionFastPath(datetime=>{const result=new Temporal.PlainDate(2e3,5,2).until(datetime);assert.sameValue(result.total({unit:"nanoseconds"}),0,"time part dropped")});␊



test262/test/built-ins/String/prototype/at/returns-code-unit.js 1


Differences (-oxc|+esbuild):
-assert.sameValue(typeof String.prototype.at,"function");let s="12\\ud80034";assert.sameValue(s.at(0),"1",'s.at(0) must return "1"'),assert.sameValue(s.at(1),"2",'s.at(1) must return "2"'),assert.sameValue(s.at(2),"\\ud800",'s.at(2) must return "\\uD800"'),assert.sameValue(s.at(3),"3",'s.at(3) must return "3"'),assert.sameValue(s.at(4),"4",'s.at(4) must return "4"');
+assert.sameValue(typeof String.prototype.at,"function");let s="12\uD80034";assert.sameValue(s.at(0),"1",'s.at(0) must return "1"'),assert.sameValue(s.at(1),"2",'s.at(1) must return "2"'),assert.sameValue(s.at(2),"\uD800",'s.at(2) must return "\\uD800"'),assert.sameValue(s.at(3),"3",'s.at(3) must return "3"'),assert.sameValue(s.at(4),"4",'s.at(4) must return "4"');␊



test262/test/built-ins/Temporal/PlainDate/prototype/until/calendar-temporal-object.js 13


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let date=new Temporal.PlainDate(2e3,5,2,"iso8601");date.until({year:2005,month:6,day:2,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainDate(2e3,5,2,"iso8601").until({year:2005,month:6,day:2,calendar:temporalObject})});␊



test262/test/built-ins/JSON/parse/reviver-array-non-configurable-prop-delete.js 3


Differences (-oxc|+esbuild):
-var json="[1, 2]",arr=JSON.parse(json,function(key,value){return key==="0"&&Object.defineProperty(this,"1",{configurable:!1}),key==="1"?void 0:value});assert.sameValue(arr[0],1),assert(arr.hasOwnProperty("1")),assert.sameValue(arr[1],2);
+var json="[1, 2]",arr=JSON.parse(json,function(key,value){if(key==="0"&&Object.defineProperty(this,"1",{configurable:!1}),key!=="1")return value});assert.sameValue(arr[0],1),assert(arr.hasOwnProperty("1")),assert.sameValue(arr[1],2);␊



test262/test/language/expressions/postfix-decrement/S11.3.2_A3_T2.js 11


Differences (-oxc|+esbuild):
-var x=1.1;if(x--,x!==.10000000000000009)throw new Test262Error("#1: var x = 1.1; x--; x === 1.1 - 1. Actual: "+x);var x=new Number(-.1);if(x--,x!==-1.1)throw new Test262Error("#2: var x = new Number(-0.1); x--; x === -0.1 - 1. Actual: "+x);
+var x=1.1;if(x--,x!==1.1-1)throw new Test262Error("#1: var x = 1.1; x--; x === 1.1 - 1. Actual: "+x);var x=new Number(-.1);if(x--,x!==-.1-1)throw new Test262Error("#2: var x = new Number(-0.1); x--; x === -0.1 - 1. Actual: "+x);␊



test262/test/built-ins/JSON/parse/reviver-forward-modifies-object.js 92


Differences (-oxc|+esbuild):
-function assertOnlyOwnProperties(object,props,message){assert.compareArray(Object.getOwnPropertyNames(object),props,`${message}: object should have no other properties than expected`),assert.compareArray(Object.getOwnPropertySymbols(object),[],`${message}: object should have no own symbol properties`)}const replacements=[42,["foo"],{foo:"bar"},"foo"];for(let replacement of replacements){let alreadyReplaced=!1,expectedKeys=["0","1",""];typeof replacement=="object"&&expectedKeys.splice(1,0,...Object.keys(replacement));let o=JSON.parse("[1, 2]",function(k,v,{source}){return assert.sameValue(k,expectedKeys.shift()),k==="0"?alreadyReplaced||(this[1]=replacement,alreadyReplaced=!0):k!==""&&assert.sameValue(source,void 0),this[k]});assert.sameValue(expectedKeys.length,0),assert.compareArray(o,[1,replacement],`array forward-modified with ${replacement}`)}function assertOnlyOwnProperties(object,props,message){assert.compareArray(Object.getOwnPropertyNames(object),props,`${message}: object should have no other properties than expected`),assert.compareArray(Object.getOwnPropertySymbols(object),[],`${message}: object should have no own symbol properties`)}for(let replacement of replacements){let alreadyReplaced=!1,expectedKeys=["p","q",""];typeof replacement=="object"&&expectedKeys.splice(1,0,...Object.keys(replacement));let o=JSON.parse('{"p":1, "q":2}',function(k,v,{source}){return assert.sameValue(k,expectedKeys.shift()),k==="p"?alreadyReplaced||(this.q=replacement,alreadyReplaced=!0):k!==""&&assert.sameValue(source,void 0),this[k]});assert.sameValue(expectedKeys.length,0),assertOnlyOwnProperties(o,["p","q"],`object forward-modified with ${replacement}`),assert.sameValue(o.p,1,"property p should not be replaced"),assert.sameValue(o.q,replacement,`property q should be replaced with ${replacement}`)}{let reviverCallIndex=0,expectedKeys=["a","b","c",""],reviver=function(key,value,{source}){return assert.sameValue(key,expectedKeys[reviverCallIndex++]),key==="a"?(this.b=2,assert.sameValue(source,"0")):key==="b"?(this.c=3,assert.sameValue(value,2),assert.sameValue(source,void 0)):key==="c"&&(assert.sameValue(value,3),assert.sameValue(source,void 0)),value},parsed=JSON.parse('{"a": 0, "b": 1, "c": [1, 2]}',reviver);assertOnlyOwnProperties(parsed,["a","b","c"],"object with forward-modified properties"),assert.sameValue(parsed.a,0,"'a' property should be unmodified"),assert.sameValue(parsed.b,2,"'b' property should be modified to 2"),assert.sameValue(parsed.c,3,"'c' property should be modified to 3")}{let reviverCallIndex=0,expectedKeys=["0","1","2","3",""],reviver=function(key,value,{source}){return assert.sameValue(key,expectedKeys[reviverCallIndex++]),key==="0"?(this[1]=3,assert.sameValue(value,1),assert.sameValue(source,"1")):key==="1"?(this[2]=4,assert.sameValue(value,3),assert.sameValue(source,void 0)):key==="2"?(this[3]=5,assert.sameValue(value,4),assert.sameValue(source,void 0)):key==="5"&&(assert.sameValue(value,5),assert.sameValue(source,void 0)),value};assert.compareArray(JSON.parse('[1, 2, 3, {"a": 1}]',reviver),[1,3,4,5],"array with forward-modified elements")}
+var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});const replacements=[42,["foo"],{foo:"bar"},"foo"];for(const replacement of replacements){let alreadyReplaced=!1,expectedKeys=["0","1",""];typeof replacement=="object"&&expectedKeys.splice(1,0,...Object.keys(replacement));const o=JSON.parse("[1, 2]",function(k,v,{source}){return assert.sameValue(k,expectedKeys.shift()),k==="0"?alreadyReplaced||(this[1]=replacement,alreadyReplaced=!0):k!==""&&assert.sameValue(source,void 0),this[k]});assert.sameValue(expectedKeys.length,0),assert.compareArray(o,[1,replacement],`array forward-modified with ${replacement}`)}function assertOnlyOwnProperties(object,props,message){assert.compareArray(Object.getOwnPropertyNames(object),props,`${message}: object should have no other properties than expected`),assert.compareArray(Object.getOwnPropertySymbols(object),[],`${message}: object should have no own symbol properties`)}__name(assertOnlyOwnProperties,"assertOnlyOwnProperties");for(const replacement of replacements){let alreadyReplaced=!1,expectedKeys=["p","q",""];typeof replacement=="object"&&expectedKeys.splice(1,0,...Object.keys(replacement));const o=JSON.parse('{"p":1, "q":2}',function(k,v,{source}){return assert.sameValue(k,expectedKeys.shift()),k==="p"?alreadyReplaced||(this.q=replacement,alreadyReplaced=!0):k!==""&&assert.sameValue(source,void 0),this[k]});assert.sameValue(expectedKeys.length,0),assertOnlyOwnProperties(o,["p","q"],`object forward-modified with ${replacement}`),assert.sameValue(o.p,1,"property p should not be replaced"),assert.sameValue(o.q,replacement,`property q should be replaced with ${replacement}`)}{let reviverCallIndex=0;const expectedKeys=["a","b","c",""],parsed=JSON.parse('{"a": 0, "b": 1, "c": [1, 2]}',__name(function(key,value,{source}){return assert.sameValue(key,expectedKeys[reviverCallIndex++]),key==="a"?(this.b=2,assert.sameValue(source,"0")):key==="b"?(this.c=3,assert.sameValue(value,2),assert.sameValue(source,void 0)):key==="c"&&(assert.sameValue(value,3),assert.sameValue(source,void 0)),value},"reviver"));assertOnlyOwnProperties(parsed,["a","b","c"],"object with forward-modified properties"),assert.sameValue(parsed.a,0,"'a' property should be unmodified"),assert.sameValue(parsed.b,2,"'b' property should be modified to 2"),assert.sameValue(parsed.c,3,"'c' property should be modified to 3")}{let reviverCallIndex=0;const expectedKeys=["0","1","2","3",""],reviver=__name(function(key,value,{source}){return assert.sameValue(key,expectedKeys[reviverCallIndex++]),key==="0"?(this[1]=3,assert.sameValue(value,1),assert.sameValue(source,"1")):key==="1"?(this[2]=4,assert.sameValue(value,3),assert.sameValue(source,void 0)):key==="2"?(this[3]=5,assert.sameValue(value,4),assert.sameValue(source,void 0)):key==="5"&&(assert.sameValue(value,5),assert.sameValue(source,void 0)),value},"reviver");assert.compareArray(JSON.parse('[1, 2, 3, {"a": 1}]',reviver),[1,3,4,5],"array with forward-modified elements")}␊



test262/test/built-ins/JSON/parse/reviver-object-non-configurable-prop-delete.js 3


Differences (-oxc|+esbuild):
-var json='{"a": 1, "b": 2}',obj=JSON.parse(json,function(key,value){return key==="a"&&Object.defineProperty(this,"b",{configurable:!1}),key==="b"?void 0:value});assert.sameValue(obj.a,1),assert(obj.hasOwnProperty("b")),assert.sameValue(obj.b,2);
+var json='{"a": 1, "b": 2}',obj=JSON.parse(json,function(key,value){if(key==="a"&&Object.defineProperty(this,"b",{configurable:!1}),key!=="b")return value});assert.sameValue(obj.a,1),assert(obj.hasOwnProperty("b")),assert.sameValue(obj.b,2);␊



test262/test/built-ins/Temporal/Duration/prototype/round/relativeto-string-zoneddatetime.js 15


Differences (-oxc|+esbuild):
-["2000-01-01[UTC]","2000-01-01T00:00[UTC]","2000-01-01T00:00+00:00[UTC]","2000-01-01T00:00+00:00[UTC][u-ca=iso8601]"].forEach(relativeTo=>{let duration=new Temporal.Duration(0,0,0,31),result=duration.round({largestUnit:"months",relativeTo});TemporalHelpers.assertDuration(result,0,1,0,0,0,0,0,0,0,0)});
+["2000-01-01[UTC]","2000-01-01T00:00[UTC]","2000-01-01T00:00+00:00[UTC]","2000-01-01T00:00+00:00[UTC][u-ca=iso8601]"].forEach(relativeTo=>{const result=new Temporal.Duration(0,0,0,31).round({largestUnit:"months",relativeTo});TemporalHelpers.assertDuration(result,0,1,0,0,0,0,0,0,0,0)});␊



test262/test/built-ins/Temporal/PlainDate/prototype/equals/calendar-temporal-object.js 13


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let date=new Temporal.PlainDate(2e3,5,2,"iso8601");date.equals({year:2005,month:6,day:2,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainDate(2e3,5,2,"iso8601").equals({year:2005,month:6,day:2,calendar:temporalObject})});␊



test262/test/built-ins/Temporal/Duration/prototype/round/roundingincrement-non-integer.js 5


Differences (-oxc|+esbuild):
-const instance=new Temporal.Duration(0,0,0,1),options={smallestUnit:"days",roundingMode:"expand",relativeTo:new Temporal.PlainDate(2e3,1,1)},result=instance.round({...options,roundingIncrement:2.5});TemporalHelpers.assertDuration(result,0,0,0,2,0,0,0,0,0,0,"roundingIncrement 2.5 truncates to 2");const result2=instance.round({...options,roundingIncrement:1000000000.5});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");
+const instance=new Temporal.Duration(0,0,0,1),options={smallestUnit:"days",roundingMode:"expand",relativeTo:new Temporal.PlainDate(2e3,1,1)},result=instance.round({...options,roundingIncrement:2.5});TemporalHelpers.assertDuration(result,0,0,0,2,0,0,0,0,0,0,"roundingIncrement 2.5 truncates to 2");const result2=instance.round({...options,roundingIncrement:1e9+.5});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");␊



test262/test/built-ins/Temporal/Duration/prototype/round/precision-exact-in-round-duration.js 35


Differences (-oxc|+esbuild):
-{let duration=Temporal.Duration.from({hours:1e5,nanoseconds:5}),rounded=duration.round({smallestUnit:"hours",roundingMode:"ceil"});TemporalHelpers.assertDuration(rounded,0,0,0,0,100001,0,0,0,0,0)}{let duration=Temporal.Duration.from({days:1e3,nanoseconds:5}),rounded=duration.round({smallestUnit:"days",roundingMode:"ceil"});TemporalHelpers.assertDuration(rounded,0,0,0,1001,0,0,0,0,0,0)}
+{let rounded=Temporal.Duration.from({hours:1e5,nanoseconds:5}).round({smallestUnit:"hours",roundingMode:"ceil"});TemporalHelpers.assertDuration(rounded,0,0,0,0,100001,0,0,0,0,0)}{let rounded=Temporal.Duration.from({days:1e3,nanoseconds:5}).round({smallestUnit:"days",roundingMode:"ceil"});TemporalHelpers.assertDuration(rounded,0,0,0,1001,0,0,0,0,0,0)}␊



test262/test/built-ins/Temporal/Duration/prototype/round/round-cross-unit-boundary.js 79


Differences (-oxc|+esbuild):
-const relativeTo=new Temporal.PlainDate(2022,1,1),roundingMode="expand";{let duration=new Temporal.Duration(1,11,0,24),result=duration.round({smallestUnit:"months",roundingMode,relativeTo});TemporalHelpers.assertDuration(result,2,0,0,0,0,0,0,0,0,0,"1 year 12 months balances to 2 years")}{let duration=new Temporal.Duration(-1,-11,0,-24),result=duration.round({smallestUnit:"months",roundingMode,relativeTo});TemporalHelpers.assertDuration(result,-2,0,0,0,0,0,0,0,0,0,"-1 year -12 months balances to -2 years")}{let duration=new Temporal.Duration(0,0,0,0,1,59,59,900),result=duration.round({smallestUnit:"seconds",roundingMode});TemporalHelpers.assertDuration(result,0,0,0,0,2,0,0,0,0,0,"1:59:60 balances to 2 hours")}{let duration=new Temporal.Duration(0,0,0,0,-1,-59,-59,-900),result=duration.round({smallestUnit:"seconds",roundingMode});TemporalHelpers.assertDuration(result,0,0,0,0,-2,0,0,0,0,0,"-1:59:60 balances to -2 hours")}{let duration=new Temporal.Duration(0,11,0,24),result=duration.round({smallestUnit:"months",roundingMode,relativeTo});TemporalHelpers.assertDuration(result,0,12,0,0,0,0,0,0,0,0,"12 months stays as is")}
+const relativeTo=new Temporal.PlainDate(2022,1,1),roundingMode="expand";{const result=new Temporal.Duration(1,11,0,24).round({smallestUnit:"months",roundingMode,relativeTo});TemporalHelpers.assertDuration(result,2,0,0,0,0,0,0,0,0,0,"1 year 12 months balances to 2 years")}{const result=new Temporal.Duration(-1,-11,0,-24).round({smallestUnit:"months",roundingMode,relativeTo});TemporalHelpers.assertDuration(result,-2,0,0,0,0,0,0,0,0,0,"-1 year -12 months balances to -2 years")}{const result=new Temporal.Duration(0,0,0,0,1,59,59,900).round({smallestUnit:"seconds",roundingMode});TemporalHelpers.assertDuration(result,0,0,0,0,2,0,0,0,0,0,"1:59:60 balances to 2 hours")}{const result=new Temporal.Duration(0,0,0,0,-1,-59,-59,-900).round({smallestUnit:"seconds",roundingMode});TemporalHelpers.assertDuration(result,0,0,0,0,-2,0,0,0,0,0,"-1:59:60 balances to -2 hours")}{const result=new Temporal.Duration(0,11,0,24).round({smallestUnit:"months",roundingMode,relativeTo});TemporalHelpers.assertDuration(result,0,12,0,0,0,0,0,0,0,0,"12 months stays as is")}␊



test262/test/language/expressions/array/spread-sngl-empty.js 4


Differences (-oxc|+esbuild):
-var callCount=0;(function(){assert.sameValue(arguments.length,0),callCount+=1}).apply(null,[...[]]),assert.sameValue(callCount,1);
+var callCount=0;(function(){assert.sameValue(arguments.length,0),callCount+=1}).apply(null,[]),assert.sameValue(callCount,1);␊



test262/test/built-ins/Temporal/Duration/prototype/round/precision-exact-in-balance-time-duration.js 42


Differences (-oxc|+esbuild):
-const seconds=8692288669465520;{let milliseconds=513,d=new Temporal.Duration(0,0,0,0,0,0,seconds,milliseconds),result=d.round({largestUnit:"milliseconds"}),expectedMilliseconds=Number(BigInt(seconds)*1000n+BigInt(milliseconds));assert.sameValue(expectedMilliseconds,869228866946552e4,"check expected value (ms)"),TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,expectedMilliseconds,0,0,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds")}{let microseconds=373761,d=new Temporal.Duration(0,0,0,0,0,0,seconds,0,microseconds),result=d.round({largestUnit:"microseconds"}),expectedMicroseconds=Number(BigInt(seconds)*1000000n+BigInt(microseconds));assert.sameValue(expectedMicroseconds,8692288669465521e6,"check expected value (µs)"),TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,0,expectedMicroseconds,0,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds")}{let nanoseconds=321414345,d=new Temporal.Duration(0,0,0,0,0,0,seconds,0,0,nanoseconds),result=d.round({largestUnit:"nanoseconds"}),expectedNanoseconds=Number(BigInt(seconds)*1000000000n+BigInt(nanoseconds));assert.sameValue(expectedNanoseconds,8692288669465521e9,"check expected value (ns)"),TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,0,0,expectedNanoseconds,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit nanoseconds")}
+const seconds=8692288669465520;{const result=new Temporal.Duration(0,0,0,0,0,0,8692288669465520,513).round({largestUnit:"milliseconds"}),expectedMilliseconds=Number(BigInt(8692288669465520)*1000n+BigInt(513));assert.sameValue(expectedMilliseconds,869228866946552e4,"check expected value (ms)"),TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,expectedMilliseconds,0,0,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds")}{const result=new Temporal.Duration(0,0,0,0,0,0,8692288669465520,0,373761).round({largestUnit:"microseconds"}),expectedMicroseconds=Number(BigInt(8692288669465520)*1000000n+BigInt(373761));assert.sameValue(expectedMicroseconds,8692288669465521e6,"check expected value (\xB5s)"),TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,0,expectedMicroseconds,0,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds")}{const result=new Temporal.Duration(0,0,0,0,0,0,8692288669465520,0,0,321414345).round({largestUnit:"nanoseconds"}),expectedNanoseconds=Number(BigInt(8692288669465520)*1000000000n+BigInt(321414345));assert.sameValue(expectedNanoseconds,8692288669465521e9,"check expected value (ns)"),TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,0,0,expectedNanoseconds,"BalanceTimeDuration should implement floating-point calculation correctly for largestUnit nanoseconds")}␊



test262/test/language/expressions/array/spread-mult-literal.js 4


Differences (-oxc|+esbuild):
-var callCount=0;(function(){assert.sameValue(arguments.length,5),assert.sameValue(arguments[0],5),assert.sameValue(arguments[1],6),assert.sameValue(arguments[2],7),assert.sameValue(arguments[3],8),assert.sameValue(arguments[4],9),callCount+=1}).apply(null,[5,...[6,7,8],9]),assert.sameValue(callCount,1);
+var callCount=0;(function(){assert.sameValue(arguments.length,5),assert.sameValue(arguments[0],5),assert.sameValue(arguments[1],6),assert.sameValue(arguments[2],7),assert.sameValue(arguments[3],8),assert.sameValue(arguments[4],9),callCount+=1}).apply(null,[5,6,7,8,9]),assert.sameValue(callCount,1);␊



test262/test/language/expressions/dynamic-import/usage/syntax-nested-block-labeled-returns-thenable.js 5


Differences (-oxc|+esbuild):
-label:import("./dynamic-import-module_FIXTURE.js").then(imported=>{assert.sameValue(imported.x,1)}).then($DONE,$DONE).catch($DONE);
+import("./dynamic-import-module_FIXTURE.js").then(imported=>{assert.sameValue(imported.x,1)}).then($DONE,$DONE).catch($DONE);␊



test262/test/built-ins/Temporal/Duration/prototype/round/relativeto-string-plaindatetime.js 15


Differences (-oxc|+esbuild):
-["2000-01-01","2000-01-01T00:00","2000-01-01T00:00[u-ca=iso8601]"].forEach(relativeTo=>{let duration=new Temporal.Duration(0,0,0,31),result=duration.round({largestUnit:"months",relativeTo});TemporalHelpers.assertDuration(result,0,1,0,0,0,0,0,0,0,0)});
+["2000-01-01","2000-01-01T00:00","2000-01-01T00:00[u-ca=iso8601]"].forEach(relativeTo=>{const result=new Temporal.Duration(0,0,0,31).round({largestUnit:"months",relativeTo});TemporalHelpers.assertDuration(result,0,1,0,0,0,0,0,0,0,0)});␊



test262/test/language/expressions/array/spread-sngl-literal.js 4


Differences (-oxc|+esbuild):
-var callCount=0;(function(){assert.sameValue(arguments.length,3),assert.sameValue(arguments[0],3),assert.sameValue(arguments[1],4),assert.sameValue(arguments[2],5),callCount+=1}).apply(null,[...[3,4,5]]),assert.sameValue(callCount,1);
+var callCount=0;(function(){assert.sameValue(arguments.length,3),assert.sameValue(arguments[0],3),assert.sameValue(arguments[1],4),assert.sameValue(arguments[2],5),callCount+=1}).apply(null,[3,4,5]),assert.sameValue(callCount,1);␊



test262/test/built-ins/Temporal/Duration/prototype/round/largestunit-correct-rebalancing.js 116


Differences (-oxc|+esbuild):
-const day_duration=100,tests=[["days",{days:day_duration}],["hours",{hours:day_duration*24}],["minutes",{minutes:day_duration*24*60}],["seconds",{seconds:day_duration*24*60*60}],["milliseconds",{milliseconds:day_duration*24*60*60*1e3}],["microseconds",{microseconds:day_duration*24*60*60*1e3*1e3}],["nanoseconds",{nanoseconds:day_duration*24*60*60*1e3*1e3*1e3}]];for(let[unit,duration_desc]of tests)TemporalHelpers.assertDuration(Temporal.Duration.from(duration_desc).round({relativeTo:"2023-02-21",largestUnit:"month"}),0,3,0,11,0,0,0,0,0,0,`rounding from ${unit}`);
+const day_duration=100,tests=[["days",{days:100}],["hours",{hours:2400}],["minutes",{minutes:144e3}],["seconds",{seconds:864e4}],["milliseconds",{milliseconds:864e7}],["microseconds",{microseconds:864e10}],["nanoseconds",{nanoseconds:864e13}]];for(const[unit,duration_desc]of tests)TemporalHelpers.assertDuration(Temporal.Duration.from(duration_desc).round({relativeTo:"2023-02-21",largestUnit:"month"}),0,3,0,11,0,0,0,0,0,0,`rounding from ${unit}`);␊



test262/test/language/expressions/array/spread-err-mult-err-obj-unresolvable.js 3


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){({a:0,...unresolvableReference})});
+assert.throws(ReferenceError,function(){({...unresolvableReference})});␊



test262/test/language/expressions/dynamic-import/usage/syntax-nested-block-labeled-is-call-expression-square-brackets.js 5


Differences (-oxc|+esbuild):
-label:import("./dynamic-import-module_FIXTURE.js").then(x=>x).then(imported=>{assert.sameValue(imported.x,1)}).then($DONE,$DONE).catch($DONE);
+import("./dynamic-import-module_FIXTURE.js").then(x=>x).then(imported=>{assert.sameValue(imported.x,1)}).then($DONE,$DONE).catch($DONE);␊



test262/test/language/expressions/array/spread-mult-empty.js 5


Differences (-oxc|+esbuild):
-var callCount=0;(function(){assert.sameValue(arguments.length,3),assert.sameValue(arguments[0],1),assert.sameValue(arguments[1],2),assert.sameValue(arguments[2],3),callCount+=1}).apply(null,[1,2,3,...[]]),assert.sameValue(callCount,1);
+var callCount=0;(function(){assert.sameValue(arguments.length,3),assert.sameValue(arguments[0],1),assert.sameValue(arguments[1],2),assert.sameValue(arguments[2],3),callCount+=1}).apply(null,[1,2,3]),assert.sameValue(callCount,1);␊



test262/test/built-ins/Temporal/Duration/prototype/round/calendar-temporal-object.js 21


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let duration=new Temporal.Duration(1,1,1,1,1,1,1);duration.round({smallestUnit:"months",relativeTo:{year:2e3,month:1,day:1,calendar:temporalObject}})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.Duration(1,1,1,1,1,1,1).round({smallestUnit:"months",relativeTo:{year:2e3,month:1,day:1,calendar:temporalObject}})});␊



test262/test/language/expressions/prefix-increment/S11.4.4_A3_T2.js 11


Differences (-oxc|+esbuild):
-var x=.1;if(++x,x!==1.1)throw new Test262Error("#1: var x = 0.1; ++x; x === 0.1 + 1. Actual: "+x);var x=new Number(-1.1);if(++x,x!==-.10000000000000009)throw new Test262Error("#2: var x = new Number(-1.1); ++x; x === -1.1 + 1. Actual: "+x);
+var x=.1;if(++x,x!==.1+1)throw new Test262Error("#1: var x = 0.1; ++x; x === 0.1 + 1. Actual: "+x);var x=new Number(-1.1);if(++x,x!==-1.1+1)throw new Test262Error("#2: var x = new Number(-1.1); ++x; x === -1.1 + 1. Actual: "+x);␊



test262/test/language/expressions/prefix-increment/S11.4.4_A4_T2.js 11


Differences (-oxc|+esbuild):
-var x=.1;if(++x!==1.1)throw new Test262Error("#1: var x = 0.1; ++x === 0.1 + 1. Actual: "+ ++x);var x=new Number(-1.1);if(++x!==-.10000000000000009)throw new Test262Error("#2: var x = new Number(-1.1); ++x === -1.1 + 1. Actual: "+ ++x);
+var x=.1;if(++x!==.1+1)throw new Test262Error("#1: var x = 0.1; ++x === 0.1 + 1. Actual: "+ ++x);var x=new Number(-1.1);if(++x!==-1.1+1)throw new Test262Error("#2: var x = new Number(-1.1); ++x === -1.1 + 1. Actual: "+ ++x);␊



test262/test/language/expressions/dynamic-import/usage/syntax-nested-block-labeled-eval-gtbndng-indirect-update.js 5


Differences (-oxc|+esbuild):
-label:import("./eval-gtbndng-indirect-update_FIXTURE.js").then(imported=>{assert.sameValue(imported.x,1),fnGlobalObject().test262update(),assert.sameValue(imported.x,2)}).then($DONE,$DONE).catch($DONE);
+import("./eval-gtbndng-indirect-update_FIXTURE.js").then(imported=>{assert.sameValue(imported.x,1),fnGlobalObject().test262update(),assert.sameValue(imported.x,2)}).then($DONE,$DONE).catch($DONE);␊



test262/test/language/expressions/dynamic-import/usage/syntax-nested-block-labeled-specifier-tostring.js 5


Differences (-oxc|+esbuild):
-const obj={toString(){return"./module-code_FIXTURE.js"}};label:import(obj).then(imported=>{assert.sameValue(imported.default,42),assert.sameValue(imported.x,"Test262"),assert.sameValue(imported.z,42)}).then($DONE,$DONE).catch($DONE);
+const obj={toString(){return"./module-code_FIXTURE.js"}};import(obj).then(imported=>{assert.sameValue(imported.default,42),assert.sameValue(imported.x,"Test262"),assert.sameValue(imported.z,42)}).then($DONE,$DONE).catch($DONE);␊



test262/test/language/expressions/dynamic-import/usage/syntax-nested-block-labeled-eval-gtbndng-indirect-update-dflt.js 5


Differences (-oxc|+esbuild):
-label:import("./eval-gtbndng-indirect-update-dflt_FIXTURE.js").then(imported=>{assert.sameValue(imported.default(),1),assert.sameValue(imported.default,2)}).then($DONE,$DONE).catch($DONE);
+import("./eval-gtbndng-indirect-update-dflt_FIXTURE.js").then(imported=>{assert.sameValue(imported.default(),1),assert.sameValue(imported.default,2)}).then($DONE,$DONE).catch($DONE);␊



test262/test/language/expressions/optional-chaining/punctuator-decimal-lookahead.js 2


Differences (-oxc|+esbuild):
-const value=.3;assert.sameValue(.3,value);
+const value=.3;assert.sameValue(.3,.3);␊



test262/test/language/expressions/optional-chaining/short-circuiting.js 43


Differences (-oxc|+esbuild):
-const a=void 0;let x=1;a?.[++x],a?.b.c(++x).d,(void 0)?.b.c(++x).d,assert.sameValue(1,x);
+const a=void 0;let x=1;assert.sameValue(1,x);␊



test262/test/language/expressions/optional-chaining/iteration-statement-for.js 13


Differences (-oxc|+esbuild):
-let count;const obj={a:!0};for(count=0;obj?.a;count++)if(count>0)break;assert.sameValue(count,1);let count2=0;const obj2=void 0;for(obj?.a;obj2?.a;obj?.a)count2++;for(assert.sameValue(count2,0),obj?.a;void 0;obj?.a)count2++;assert.sameValue(count2,0);let touched=0;const obj3={get a(){count++}};for(count=0;;obj3?.a?.[touched++])if(count>0)break;assert.sameValue(count,1),assert.sameValue(touched,0);
+let count;const obj={a:!0};for(count=0;obj?.a&&!(count>0);count++);assert.sameValue(count,1);let count2=0;const obj2=void 0;for(obj?.a;obj2?.a;obj?.a)count2++;for(assert.sameValue(count2,0),obj?.a;!1;obj?.a)count2++;assert.sameValue(count2,0);let touched=0;const obj3={get a(){count++}};for(count=0;!(count>0);obj3?.a?.[touched++]);assert.sameValue(count,1),assert.sameValue(touched,0);␊



test262/test/language/expressions/optional-chaining/optional-call-preserves-this.js 1


Differences (-oxc|+esbuild):
-const a={b(){return this._b},_b:{c:42}};assert.sameValue(a?.b().c,42),assert.sameValue((a?.b)().c,42),assert.sameValue(a.b?.().c,42),assert.sameValue(a.b?.().c,42),assert.sameValue(a?.b?.().c,42),assert.sameValue((a?.b)?.().c,42);
+const a={b(){return this._b},_b:{c:42}};assert.sameValue(a?.b().c,42),assert.sameValue((a?.b)().c,42),assert.sameValue(a.b?.().c,42),assert.sameValue(a.b?.().c,42),assert.sameValue(a?.b?.().c,42),assert.sameValue(a?.b?.().c,42);␊



test262/test/language/statements/for/head-init-var-check-empty-inc-empty-syntax.js 10


Differences (-oxc|+esbuild):
-for(var supreme=5,count=0;;){if(count===supreme)break;count++}
+for(var supreme=5,count=0;count!==supreme;)count++;␊



test262/test/built-ins/TypedArray/prototype/with/index-bigger-or-eq-than-length.js 8


Differences (-oxc|+esbuild):
-testWithTypedArrayConstructors(TA=>{var arr=new TA([0,1,2]);assert.throws(RangeError,function(){arr.with(3,7)}),assert.throws(RangeError,function(){arr.with(10,7)}),assert.throws(RangeError,function(){arr.with(9007199254740994,7)}),assert.throws(RangeError,function(){arr.with(1/0,7)})});
+testWithTypedArrayConstructors(TA=>{var arr=new TA([0,1,2]);assert.throws(RangeError,function(){arr.with(3,7)}),assert.throws(RangeError,function(){arr.with(10,7)}),assert.throws(RangeError,function(){arr.with(2**53+2,7)}),assert.throws(RangeError,function(){arr.with(1/0,7)})});␊



test262/test/language/statements/switch/scope-lex-const.js 6


Differences (-oxc|+esbuild):
-switch(0){default:let x=1}x;
+switch(0){default:}x;␊



test262/test/language/expressions/in/S11.8.7_A2.4_T1.js 1


Differences (-oxc|+esbuild):
-var NUMBER=0;if(!((NUMBER=Number,"MAX_VALUE")in NUMBER))throw new Test262Error('#1: var NUMBER = 0; (NUMBER = Number, "MAX_VALUE") in NUMBER === true');var max_value="MAX_VALUE";if(!(max_value in(max_value="none",Number)))throw new Test262Error('#2: var max_value = "MAX_VALUE"; max_value in (max_value = "none", Number) === true');
+var NUMBER=0;if(NUMBER=Number,!("MAX_VALUE"in NUMBER))throw new Test262Error('#1: var NUMBER = 0; (NUMBER = Number, "MAX_VALUE") in NUMBER === true');var max_value="MAX_VALUE";if(!(max_value in(max_value="none",Number)))throw new Test262Error('#2: var max_value = "MAX_VALUE"; max_value in (max_value = "none", Number) === true');␊



test262/test/language/expressions/in/S11.8.7_A2.4_T4.js 1


Differences (-oxc|+esbuild):
-if(!((NUMBER=Number,"MAX_VALUE")in NUMBER))throw new Test262Error('#1: (NUMBER = Number, "MAX_VALUE") in NUMBER !== true');
+if(NUMBER=Number,!("MAX_VALUE"in NUMBER))throw new Test262Error('#1: (NUMBER = Number, "MAX_VALUE") in NUMBER !== true');␊



test262/test/language/statements/try/S12.14_A8.js 7


Differences (-oxc|+esbuild):
-var c1=1;try{if(c1===1)throw"ex1";throw new Test262Error('#1.2: throw "ex1" inside the "if" statement lead to throwing exception')}catch(er1){if(er1!=="ex1")throw new Test262Error('#1.3: Exception ==="ex1". Actual:  Exception ==='+er1)}var c2=1;if(c2===1)try{throw"ex1"}catch(er1){if(er1!="ex1")throw new Test262Error('#2.2: Exception ==="ex1". Actual:  Exception ==='+er1)}
+var c1=1;try{throw c1===1?"ex1":new Test262Error('#1.2: throw "ex1" inside the "if" statement lead to throwing exception')}catch(er1){if(er1!=="ex1")throw new Test262Error('#1.3: Exception ==="ex1". Actual:  Exception ==='+er1)}var c2=1;if(c2===1)try{throw"ex1"}catch(er1){if(er1!="ex1")throw new Test262Error('#2.2: Exception ==="ex1". Actual:  Exception ==='+er1)}␊



test262/test/language/expressions/dynamic-import/catch/nested-block-labeled-file-does-not-exist.js 5


Differences (-oxc|+esbuild):
-label:import("./THIS_FILE_DOES_NOT_EXIST.js").catch(error=>{assert.notSameValue(typeof error,"undefined")}).then($DONE,$DONE);
+import("./THIS_FILE_DOES_NOT_EXIST.js").catch(error=>{assert.notSameValue(typeof error,"undefined")}).then($DONE,$DONE);␊



test262/test/language/expressions/dynamic-import/catch/nested-block-labeled-eval-script-code-target.js 5


Differences (-oxc|+esbuild):
-label:import("./script-code_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"SyntaxError")}).then($DONE,$DONE);
+import("./script-code_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"SyntaxError")}).then($DONE,$DONE);␊



test262/test/language/expressions/dynamic-import/catch/nested-block-labeled-instn-iee-err-ambiguous-import.js 5


Differences (-oxc|+esbuild):
-label:import("./instn-iee-err-ambiguous-export_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"SyntaxError")}).then($DONE,$DONE);
+import("./instn-iee-err-ambiguous-export_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"SyntaxError")}).then($DONE,$DONE);␊



test262/test/built-ins/Temporal/PlainTime/minute-undefined.js 7


Differences (-oxc|+esbuild):
-const hour=12,explicit=new Temporal.PlainTime(hour,void 0);TemporalHelpers.assertPlainTime(explicit,hour,0,0,0,0,0,"explicit");const implicit=new Temporal.PlainTime(hour);TemporalHelpers.assertPlainTime(implicit,hour,0,0,0,0,0,"implicit");
+const hour=12,explicit=new Temporal.PlainTime(12,void 0);TemporalHelpers.assertPlainTime(explicit,12,0,0,0,0,0,"explicit");const implicit=new Temporal.PlainTime(12);TemporalHelpers.assertPlainTime(implicit,12,0,0,0,0,0,"implicit");␊



test262/test/language/statements/break/S12.8_A7.js 5


Differences (-oxc|+esbuild):
-var x=0,y=0;try{LABEL1:do x++,eval("break LABEL1"),y++;while(0);throw new Test262Error('#1: eval("break LABEL1") does not lead to throwing exception')}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("1.1: Appearing of break within eval statement inside of IterationStatement yields SyntaxError")}
+var x=0,y=0;try{do x++,eval("break LABEL1"),y++;while(!1);throw new Test262Error('#1: eval("break LABEL1") does not lead to throwing exception')}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("1.1: Appearing of break within eval statement inside of IterationStatement yields SyntaxError")}␊



test262/test/language/expressions/dynamic-import/catch/nested-block-labeled-specifier-tostring-abrupt-rejects.js 5


Differences (-oxc|+esbuild):
-const obj={toString(){throw"custom error"}};label:import(obj).catch(error=>{assert.sameValue(error,"custom error")}).then($DONE,$DONE);
+const obj={toString(){throw"custom error"}};import(obj).catch(error=>{assert.sameValue(error,"custom error")}).then($DONE,$DONE);␊



test262/test/language/statements/break/12.8-1.js 8


Differences (-oxc|+esbuild):
-for(var sum=0,i=1;i<=10;i++){if(i===6)break;sum+=i}assert.sameValue(sum,15,"sum");
+for(var sum=0,i=1;i<=10&&i!==6;i++)sum+=i;assert.sameValue(sum,15,"sum");␊



test262/test/language/statements/break/line-terminators.js 43


Differences (-oxc|+esbuild):
-FOR1:for(var i=1;i<2;i++)LABEL1:do break;while(0);assert.sameValue(i,2,"#1: Since LineTerminator(U-000A) between break and Identifier not allowed break evaluates without label");FOR2:for(var i=1;i<2;i++)LABEL2:do break;while(0);assert.sameValue(i,2,"#2: Since LineTerminator(U-000D) between break and Identifier not allowed break evaluates without label");FOR3:for(var i=1;i<2;i++)LABEL3:do break;while(0);assert.sameValue(i,2,"#3: Since LineTerminator(U-2028) between break and Identifier not allowed break evaluates without label");FOR4:for(var i=1;i<2;i++)LABEL4:do break;while(0);assert.sameValue(i,2,"#4: Since LineTerminator(U-2029) between break and Identifier not allowed break evaluates without label");
+for(var i=1;i<2;i++)do break;while(!1);assert.sameValue(i,2,"#1: Since LineTerminator(U-000A) between break and Identifier not allowed break evaluates without label");for(var i=1;i<2;i++)do break;while(!1);assert.sameValue(i,2,"#2: Since LineTerminator(U-000D) between break and Identifier not allowed break evaluates without label");for(var i=1;i<2;i++)do break;while(!1);assert.sameValue(i,2,"#3: Since LineTerminator(U-2028) between break and Identifier not allowed break evaluates without label");for(var i=1;i<2;i++)do break;while(!1);assert.sameValue(i,2,"#4: Since LineTerminator(U-2029) between break and Identifier not allowed break evaluates without label");␊



test262/test/language/expressions/dynamic-import/catch/nested-block-labeled-eval-rqstd-abrupt-typeerror.js 5


Differences (-oxc|+esbuild):
-label:import("./eval-rqstd-abrupt-err-type_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"TypeError")}).then($DONE,$DONE);
+import("./eval-rqstd-abrupt-err-type_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"TypeError")}).then($DONE,$DONE);␊



test262/test/language/statements/break/S12.8_A9_T2.js 3


Differences (-oxc|+esbuild):
-var x=0,y=0;if(function(){FOR:for(;;)try{if(x++,x===10)return;throw 1}catch{break}}(),x!==1)throw new Test262Error("#1: break inside of try-catch nested in loop is allowed");
+var x=0,y=0;if(function(){for(;;)try{if(x++,x===10)return;throw 1}catch{break}}(),x!==1)throw new Test262Error("#1: break inside of try-catch nested in loop is allowed");␊



test262/test/language/expressions/dynamic-import/catch/nested-block-labeled-eval-rqstd-abrupt-urierror.js 5


Differences (-oxc|+esbuild):
-label:import("./eval-rqstd-abrupt-err-uri_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"URIError")}).then($DONE,$DONE);
+import("./eval-rqstd-abrupt-err-uri_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"URIError")}).then($DONE,$DONE);␊



test262/test/language/expressions/dynamic-import/catch/nested-block-labeled-instn-iee-err-circular.js 5


Differences (-oxc|+esbuild):
-label:import("./instn-iee-err-circular-1_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"SyntaxError")}).then($DONE,$DONE);
+import("./instn-iee-err-circular-1_FIXTURE.js").catch(error=>{assert.sameValue(error.name,"SyntaxError")}).then($DONE,$DONE);␊



test262/test/language/statements/for-in/S12.6.4_A1.js 1


Differences (-oxc|+esbuild):
-try{for(__key in void 0){var key=__key}}catch{throw new Test262Error('#1: "for(key in undefined){}" does not lead to throwing exception')}if(key!==void 0)throw new Test262Error("#2: key === undefined. Actual: key === "+key);
+try{for(__key in void 0)var key=__key}catch{throw new Test262Error('#1: "for(key in undefined){}" does not lead to throwing exception')}if(key!==void 0)throw new Test262Error("#2: key === undefined. Actual: key === "+key);␊



test262/test/language/statements/for-in/S12.6.4_A2.js 1


Differences (-oxc|+esbuild):
-try{for(__key in null){var key=__key}}catch{throw new Test262Error('#1: "for(__key in null){}" does not lead to throwing exception')}if(key!==void 0)throw new Test262Error("#2: key === undefined. Actual: key ==="+key);
+try{for(__key in null)var key=__key}catch{throw new Test262Error('#1: "for(__key in null){}" does not lead to throwing exception')}if(key!==void 0)throw new Test262Error("#2: key === undefined. Actual: key ==="+key);␊



test262/test/language/expressions/arrow-function/prototype-rules.js 3


Differences (-oxc|+esbuild):
-assert.sameValue(typeof(()=>{}),"function"),assert.sameValue(Object.getPrototypeOf(()=>{}),Function.prototype),assert.sameValue("prototype"in(()=>{}),!1);
+assert.sameValue("function","function"),assert.sameValue(Object.getPrototypeOf(()=>{}),Function.prototype),assert.sameValue("prototype"in(()=>{}),!1);␊



test262/test/language/statements/continue/line-terminators.js 15


Differences (-oxc|+esbuild):
-FOR1:for(var i=1;i<2;i++)FOR1NESTED:for(var j=1;j<2;j++);assert.sameValue(j,2,"#1: Since LineTerminator(U-000A) between continue and Identifier not allowed continue evaluates without label");FOR2:for(var i=1;i<2;i++)FOR2NESTED:for(var j=1;j<2;j++);assert.sameValue(j,2,"#2: Since LineTerminator(U-000D) between continue and Identifier not allowed continue evaluates without label");FOR3:for(var i=1;i<2;i++)FOR3NESTED:for(var j=1;j<2;j++);assert.sameValue(j,2,"#3: Since LineTerminator(U-2028) between continue and Identifier not allowed continue evaluates without label");FOR4:for(var i=1;i<2;i++)FOR4NESTED:for(var j=1;j<2;j++);assert.sameValue(j,2,"#4: Since LineTerminator(U-2029) between continue and Identifier not allowed continue evaluates without label");
+for(var i=1;i<2;i++){for(var j=1;j<2;j++);for(;!1;);}assert.sameValue(j,2,"#1: Since LineTerminator(U-000A) between continue and Identifier not allowed continue evaluates without label");for(var i=1;i<2;i++){for(var j=1;j<2;j++);for(;!1;);}assert.sameValue(j,2,"#2: Since LineTerminator(U-000D) between continue and Identifier not allowed continue evaluates without label");for(var i=1;i<2;i++){for(var j=1;j<2;j++);for(;!1;);}assert.sameValue(j,2,"#3: Since LineTerminator(U-2028) between continue and Identifier not allowed continue evaluates without label");for(var i=1;i<2;i++){for(var j=1;j<2;j++);for(;!1;);}assert.sameValue(j,2,"#4: Since LineTerminator(U-2029) between continue and Identifier not allowed continue evaluates without label");␊



test262/test/language/statements/continue/S12.7_A9_T2.js 3


Differences (-oxc|+esbuild):
-var x=0,y=0;if(function(){FOR:for(;;)try{if(x++,x===10)return;throw 1}catch{continue}}(),x!==10)throw new Test262Error("#1: Continue inside of try-catch nested in loop is allowed");
+var x=0,y=0;if(function(){for(;;)try{if(x++,x===10)return;throw 1}catch{continue}}(),x!==10)throw new Test262Error("#1: Continue inside of try-catch nested in loop is allowed");␊



test262/test/language/expressions/arrow-function/syntax/variations.js 15


Differences (-oxc|+esbuild):
-assert.sameValue((()=>1)(),1),assert.sameValue((a=>a+1)(1),2),assert.sameValue((()=>3)(),3),assert.sameValue((a=>a+3)(1),4),assert.sameValue(((a,b)=>a+b)(1,4),5),assert.sameValue(((a,b)=>a+b)(1,5),6);
+assert.sameValue(1,1),assert.sameValue((a=>a+1)(1),2),assert.sameValue(3,3),assert.sameValue((a=>a+3)(1),4),assert.sameValue(((a,b)=>a+b)(1,4),5),assert.sameValue(((a,b)=>a+b)(1,5),6);␊



test262/test/language/statements/continue/S12.7_A7.js 5


Differences (-oxc|+esbuild):
-var x=0,y=0;try{LABEL1:do x++,eval("continue LABEL1"),y++;while(0);throw new Test262Error('#1: eval("continue LABEL1") does not lead to throwing exception')}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("1.1: Appearing of continue within eval statement inside of IterationStatement yields SyntaxError")}
+var x=0,y=0;try{do x++,eval("continue LABEL1"),y++;while(!1);throw new Test262Error('#1: eval("continue LABEL1") does not lead to throwing exception')}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("1.1: Appearing of continue within eval statement inside of IterationStatement yields SyntaxError")}␊



test262/test/built-ins/RegExp/escape/escaped-surrogates.js 515


Differences (-oxc|+esbuild):
-assert.sameValue(RegExp.escape("\\ud800"),"\\ud800","High surrogate \\uD800 is correctly escaped"),assert.sameValue(RegExp.escape("\\udbff"),"\\udbff","High surrogate \\uDBFF is correctly escaped"),assert.sameValue(RegExp.escape("\\udc00"),"\\udc00","Low surrogate \\uDC00 is correctly escaped"),assert.sameValue(RegExp.escape("\\udfff"),"\\udfff","Low surrogate \\uDFFF is correctly escaped");const highSurrogatesGroup1="\\ud800\\ud801\\ud802\\ud803\\ud804\\ud805\\ud806\\ud807\\ud808\\ud809\\ud80a\\ud80b\\ud80c\\ud80d\\ud80e\\ud80f",highSurrogatesGroup2="\\ud810\\ud811\\ud812\\ud813\\ud814\\ud815\\ud816\\ud817\\ud818\\ud819\\ud81a\\ud81b\\ud81c\\ud81d\\ud81e\\ud81f",highSurrogatesGroup3="\\ud820\\ud821\\ud822\\ud823\\ud824\\ud825\\ud826\\ud827\\ud828\\ud829\\ud82a\\ud82b\\ud82c\\ud82d\\ud82e\\ud82f",highSurrogatesGroup4="\\ud830\\ud831\\ud832\\ud833\\ud834\\ud835\\ud836\\ud837\\ud838\\ud839\\ud83a\\ud83b\\ud83c\\ud83d\\ud83e\\ud83f",highSurrogatesGroup5="\\ud840\\ud841\\ud842\\ud843\\ud844\\ud845\\ud846\\ud847\\ud848\\ud849\\ud84a\\ud84b\\ud84c\\ud84d\\ud84e\\ud84f",highSurrogatesGroup6="\\ud850\\ud851\\ud852\\ud853\\ud854\\ud855\\ud856\\ud857\\ud858\\ud859\\ud85a\\ud85b\\ud85c\\ud85d\\ud85e\\ud85f",highSurrogatesGroup7="\\ud860\\ud861\\ud862\\ud863\\ud864\\ud865\\ud866\\ud867\\ud868\\ud869\\ud86a\\ud86b\\ud86c\\ud86d\\ud86e\\ud86f",highSurrogatesGroup8="\\ud870\\ud871\\ud872\\ud873\\ud874\\ud875\\ud876\\ud877\\ud878\\ud879\\ud87a\\ud87b\\ud87c\\ud87d\\ud87e\\ud87f",highSurrogatesGroup9="\\ud880\\ud881\\ud882\\ud883\\ud884\\ud885\\ud886\\ud887\\ud888\\ud889\\ud88a\\ud88b\\ud88c\\ud88d\\ud88e\\ud88f",highSurrogatesGroup10="\\ud890\\ud891\\ud892\\ud893\\ud894\\ud895\\ud896\\ud897\\ud898\\ud899\\ud89a\\ud89b\\ud89c\\ud89d\\ud89e\\ud89f",highSurrogatesGroup11="\\ud8a0\\ud8a1\\ud8a2\\ud8a3\\ud8a4\\ud8a5\\ud8a6\\ud8a7\\ud8a8\\ud8a9\\ud8aa\\ud8ab\\ud8ac\\ud8ad\\ud8ae\\ud8af",highSurrogatesGroup12="\\ud8b0\\ud8b1\\ud8b2\\ud8b3\\ud8b4\\ud8b5\\ud8b6\\ud8b7\\ud8b8\\ud8b9\\ud8ba\\ud8bb\\ud8bc\\ud8bd\\ud8be\\ud8bf",highSurrogatesGroup13="\\ud8c0\\ud8c1\\ud8c2\\ud8c3\\ud8c4\\ud8c5\\ud8c6\\ud8c7\\ud8c8\\ud8c9\\ud8ca\\ud8cb\\ud8cc\\ud8cd\\ud8ce\\ud8cf",highSurrogatesGroup14="\\ud8d0\\ud8d1\\ud8d2\\ud8d3\\ud8d4\\ud8d5\\ud8d6\\ud8d7\\ud8d8\\ud8d9\\ud8da\\ud8db\\ud8dc\\ud8dd\\ud8de\\ud8df",highSurrogatesGroup15="\\ud8e0\\ud8e1\\ud8e2\\ud8e3\\ud8e4\\ud8e5\\ud8e6\\ud8e7\\ud8e8\\ud8e9\\ud8ea\\ud8eb\\ud8ec\\ud8ed\\ud8ee\\ud8ef",highSurrogatesGroup16="\\ud8f0\\ud8f1\\ud8f2\\ud8f3\\ud8f4\\ud8f5\\ud8f6\\ud8f7\\ud8f8\\ud8f9\\ud8fa\\ud8fb\\ud8fc\\ud8fd\\ud8fe\\ud8ff";assert.sameValue(RegExp.escape(highSurrogatesGroup1),"\\ud800\\ud801\\ud802\\ud803\\ud804\\ud805\\ud806\\ud807\\ud808\\ud809\\ud80a\\ud80b\\ud80c\\ud80d\\ud80e\\ud80f","High surrogates group 1 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup2),"\\ud810\\ud811\\ud812\\ud813\\ud814\\ud815\\ud816\\ud817\\ud818\\ud819\\ud81a\\ud81b\\ud81c\\ud81d\\ud81e\\ud81f","High surrogates group 2 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup3),"\\ud820\\ud821\\ud822\\ud823\\ud824\\ud825\\ud826\\ud827\\ud828\\ud829\\ud82a\\ud82b\\ud82c\\ud82d\\ud82e\\ud82f","High surrogates group 3 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup4),"\\ud830\\ud831\\ud832\\ud833\\ud834\\ud835\\ud836\\ud837\\ud838\\ud839\\ud83a\\ud83b\\ud83c\\ud83d\\ud83e\\ud83f","High surrogates group 4 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup5),"\\ud840\\ud841\\ud842\\ud843\\ud844\\ud845\\ud846\\ud847\\ud848\\ud849\\ud84a\\ud84b\\ud84c\\ud84d\\ud84e\\ud84f","High surrogates group 5 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup6),"\\ud850\\ud851\\ud852\\ud853\\ud854\\ud855\\ud856\\ud857\\ud858\\ud859\\ud85a\\ud85b\\ud85c\\ud85d\\ud85e\\ud85f","High surrogates group 6 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup7),"\\ud860\\ud861\\ud862\\ud863\\ud864\\ud865\\ud866\\ud867\\ud868\\ud869\\ud86a\\ud86b\\ud86c\\ud86d\\ud86e\\ud86f","High surrogates group 7 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup8),"\\ud870\\ud871\\ud872\\ud873\\ud874\\ud875\\ud876\\ud877\\ud878\\ud879\\ud87a\\ud87b\\ud87c\\ud87d\\ud87e\\ud87f","High surrogates group 8 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup9),"\\ud880\\ud881\\ud882\\ud883\\ud884\\ud885\\ud886\\ud887\\ud888\\ud889\\ud88a\\ud88b\\ud88c\\ud88d\\ud88e\\ud88f","High surrogates group 9 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup10),"\\ud890\\ud891\\ud892\\ud893\\ud894\\ud895\\ud896\\ud897\\ud898\\ud899\\ud89a\\ud89b\\ud89c\\ud89d\\ud89e\\ud89f","High surrogates group 10 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup11),"\\ud8a0\\ud8a1\\ud8a2\\ud8a3\\ud8a4\\ud8a5\\ud8a6\\ud8a7\\ud8a8\\ud8a9\\ud8aa\\ud8ab\\ud8ac\\ud8ad\\ud8ae\\ud8af","High surrogates group 11 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup12),"\\ud8b0\\ud8b1\\ud8b2\\ud8b3\\ud8b4\\ud8b5\\ud8b6\\ud8b7\\ud8b8\\ud8b9\\ud8ba\\ud8bb\\ud8bc\\ud8bd\\ud8be\\ud8bf","High surrogates group 12 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup13),"\\ud8c0\\ud8c1\\ud8c2\\ud8c3\\ud8c4\\ud8c5\\ud8c6\\ud8c7\\ud8c8\\ud8c9\\ud8ca\\ud8cb\\ud8cc\\ud8cd\\ud8ce\\ud8cf","High surrogates group 13 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup14),"\\ud8d0\\ud8d1\\ud8d2\\ud8d3\\ud8d4\\ud8d5\\ud8d6\\ud8d7\\ud8d8\\ud8d9\\ud8da\\ud8db\\ud8dc\\ud8dd\\ud8de\\ud8df","High surrogates group 14 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup15),"\\ud8e0\\ud8e1\\ud8e2\\ud8e3\\ud8e4\\ud8e5\\ud8e6\\ud8e7\\ud8e8\\ud8e9\\ud8ea\\ud8eb\\ud8ec\\ud8ed\\ud8ee\\ud8ef","High surrogates group 15 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup16),"\\ud8f0\\ud8f1\\ud8f2\\ud8f3\\ud8f4\\ud8f5\\ud8f6\\ud8f7\\ud8f8\\ud8f9\\ud8fa\\ud8fb\\ud8fc\\ud8fd\\ud8fe\\ud8ff","High surrogates group 16 are correctly escaped");const lowSurrogatesGroup1="\\udc00\\udc01\\udc02\\udc03\\udc04\\udc05\\udc06\\udc07\\udc08\\udc09\\udc0a\\udc0b\\udc0c\\udc0d\\udc0e\\udc0f",lowSurrogatesGroup2="\\udc10\\udc11\\udc12\\udc13\\udc14\\udc15\\udc16\\udc17\\udc18\\udc19\\udc1a\\udc1b\\udc1c\\udc1d\\udc1e\\udc1f",lowSurrogatesGroup3="\\udc20\\udc21\\udc22\\udc23\\udc24\\udc25\\udc26\\udc27\\udc28\\udc29\\udc2a\\udc2b\\udc2c\\udc2d\\udc2e\\udc2f",lowSurrogatesGroup4="\\udc30\\udc31\\udc32\\udc33\\udc34\\udc35\\udc36\\udc37\\udc38\\udc39\\udc3a\\udc3b\\udc3c\\udc3d\\udc3e\\udc3f",lowSurrogatesGroup5="\\udc40\\udc41\\udc42\\udc43\\udc44\\udc45\\udc46\\udc47\\udc48\\udc49\\udc4a\\udc4b\\udc4c\\udc4d\\udc4e\\udc4f",lowSurrogatesGroup6="\\udc50\\udc51\\udc52\\udc53\\udc54\\udc55\\udc56\\udc57\\udc58\\udc59\\udc5a\\udc5b\\udc5c\\udc5d\\udc5e\\udc5f",lowSurrogatesGroup7="\\udc60\\udc61\\udc62\\udc63\\udc64\\udc65\\udc66\\udc67\\udc68\\udc69\\udc6a\\udc6b\\udc6c\\udc6d\\udc6e\\udc6f",lowSurrogatesGroup8="\\udc70\\udc71\\udc72\\udc73\\udc74\\udc75\\udc76\\udc77\\udc78\\udc79\\udc7a\\udc7b\\udc7c\\udc7d\\udc7e\\udc7f",lowSurrogatesGroup9="\\udc80\\udc81\\udc82\\udc83\\udc84\\udc85\\udc86\\udc87\\udc88\\udc89\\udc8a\\udc8b\\udc8c\\udc8d\\udc8e\\udc8f",lowSurrogatesGroup10="\\udc90\\udc91\\udc92\\udc93\\udc94\\udc95\\udc96\\udc97\\udc98\\udc99\\udc9a\\udc9b\\udc9c\\udc9d\\udc9e\\udc9f",lowSurrogatesGroup11="\\udca0\\udca1\\udca2\\udca3\\udca4\\udca5\\udca6\\udca7\\udca8\\udca9\\udcaa\\udcab\\udcac\\udcad\\udcae\\udcaf",lowSurrogatesGroup12="\\udcb0\\udcb1\\udcb2\\udcb3\\udcb4\\udcb5\\udcb6\\udcb7\\udcb8\\udcb9\\udcba\\udcbb\\udcbc\\udcbd\\udcbe\\udcbf",lowSurrogatesGroup13="\\udcc0\\udcc1\\udcc2\\udcc3\\udcc4\\udcc5\\udcc6\\udcc7\\udcc8\\udcc9\\udcca\\udccb\\udccc\\udccd\\udcce\\udccf",lowSurrogatesGroup14="\\udcd0\\udcd1\\udcd2\\udcd3\\udcd4\\udcd5\\udcd6\\udcd7\\udcd8\\udcd9\\udcda\\udcdb\\udcdc\\udcdd\\udcde\\udcdf",lowSurrogatesGroup15="\\udce0\\udce1\\udce2\\udce3\\udce4\\udce5\\udce6\\udce7\\udce8\\udce9\\udcea\\udceb\\udcec\\udced\\udcee\\udcef",lowSurrogatesGroup16="\\udcf0\\udcf1\\udcf2\\udcf3\\udcf4\\udcf5\\udcf6\\udcf7\\udcf8\\udcf9\\udcfa\\udcfb\\udcfc\\udcfd\\udcfe\\udcff";assert.sameValue(RegExp.escape(lowSurrogatesGroup1),"\\udc00\\udc01\\udc02\\udc03\\udc04\\udc05\\udc06\\udc07\\udc08\\udc09\\udc0a\\udc0b\\udc0c\\udc0d\\udc0e\\udc0f","Low surrogates group 1 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup2),"\\udc10\\udc11\\udc12\\udc13\\udc14\\udc15\\udc16\\udc17\\udc18\\udc19\\udc1a\\udc1b\\udc1c\\udc1d\\udc1e\\udc1f","Low surrogates group 2 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup3),"\\udc20\\udc21\\udc22\\udc23\\udc24\\udc25\\udc26\\udc27\\udc28\\udc29\\udc2a\\udc2b\\udc2c\\udc2d\\udc2e\\udc2f","Low surrogates group 3 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup4),"\\udc30\\udc31\\udc32\\udc33\\udc34\\udc35\\udc36\\udc37\\udc38\\udc39\\udc3a\\udc3b\\udc3c\\udc3d\\udc3e\\udc3f","Low surrogates group 4 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup5),"\\udc40\\udc41\\udc42\\udc43\\udc44\\udc45\\udc46\\udc47\\udc48\\udc49\\udc4a\\udc4b\\udc4c\\udc4d\\udc4e\\udc4f","Low surrogates group 5 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup6),"\\udc50\\udc51\\udc52\\udc53\\udc54\\udc55\\udc56\\udc57\\udc58\\udc59\\udc5a\\udc5b\\udc5c\\udc5d\\udc5e\\udc5f","Low surrogates group 6 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup7),"\\udc60\\udc61\\udc62\\udc63\\udc64\\udc65\\udc66\\udc67\\udc68\\udc69\\udc6a\\udc6b\\udc6c\\udc6d\\udc6e\\udc6f","Low surrogates group 7 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup8),"\\udc70\\udc71\\udc72\\udc73\\udc74\\udc75\\udc76\\udc77\\udc78\\udc79\\udc7a\\udc7b\\udc7c\\udc7d\\udc7e\\udc7f","Low surrogates group 8 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup9),"\\udc80\\udc81\\udc82\\udc83\\udc84\\udc85\\udc86\\udc87\\udc88\\udc89\\udc8a\\udc8b\\udc8c\\udc8d\\udc8e\\udc8f","Low surrogates group 9 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup10),"\\udc90\\udc91\\udc92\\udc93\\udc94\\udc95\\udc96\\udc97\\udc98\\udc99\\udc9a\\udc9b\\udc9c\\udc9d\\udc9e\\udc9f","Low surrogates group 10 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup11),"\\udca0\\udca1\\udca2\\udca3\\udca4\\udca5\\udca6\\udca7\\udca8\\udca9\\udcaa\\udcab\\udcac\\udcad\\udcae\\udcaf","Low surrogates group 11 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup12),"\\udcb0\\udcb1\\udcb2\\udcb3\\udcb4\\udcb5\\udcb6\\udcb7\\udcb8\\udcb9\\udcba\\udcbb\\udcbc\\udcbd\\udcbe\\udcbf","Low surrogates group 12 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup13),"\\udcc0\\udcc1\\udcc2\\udcc3\\udcc4\\udcc5\\udcc6\\udcc7\\udcc8\\udcc9\\udcca\\udccb\\udccc\\udccd\\udcce\\udccf","Low surrogates group 13 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup14),"\\udcd0\\udcd1\\udcd2\\udcd3\\udcd4\\udcd5\\udcd6\\udcd7\\udcd8\\udcd9\\udcda\\udcdb\\udcdc\\udcdd\\udcde\\udcdf","Low surrogates group 14 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup15),"\\udce0\\udce1\\udce2\\udce3\\udce4\\udce5\\udce6\\udce7\\udce8\\udce9\\udcea\\udceb\\udcec\\udced\\udcee\\udcef","Low surrogates group 15 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup16),"\\udcf0\\udcf1\\udcf2\\udcf3\\udcf4\\udcf5\\udcf6\\udcf7\\udcf8\\udcf9\\udcfa\\udcfb\\udcfc\\udcfd\\udcfe\\udcff","Low surrogates group 16 are correctly escaped");
+assert.sameValue(RegExp.escape("\uD800"),"\\ud800","High surrogate \\uD800 is correctly escaped"),assert.sameValue(RegExp.escape("\uDBFF"),"\\udbff","High surrogate \\uDBFF is correctly escaped"),assert.sameValue(RegExp.escape("\uDC00"),"\\udc00","Low surrogate \\uDC00 is correctly escaped"),assert.sameValue(RegExp.escape("\uDFFF"),"\\udfff","Low surrogate \\uDFFF is correctly escaped");const highSurrogatesGroup1="\uD800\uD801\uD802\uD803\uD804\uD805\uD806\uD807\uD808\uD809\uD80A\uD80B\uD80C\uD80D\uD80E\uD80F",highSurrogatesGroup2="\uD810\uD811\uD812\uD813\uD814\uD815\uD816\uD817\uD818\uD819\uD81A\uD81B\uD81C\uD81D\uD81E\uD81F",highSurrogatesGroup3="\uD820\uD821\uD822\uD823\uD824\uD825\uD826\uD827\uD828\uD829\uD82A\uD82B\uD82C\uD82D\uD82E\uD82F",highSurrogatesGroup4="\uD830\uD831\uD832\uD833\uD834\uD835\uD836\uD837\uD838\uD839\uD83A\uD83B\uD83C\uD83D\uD83E\uD83F",highSurrogatesGroup5="\uD840\uD841\uD842\uD843\uD844\uD845\uD846\uD847\uD848\uD849\uD84A\uD84B\uD84C\uD84D\uD84E\uD84F",highSurrogatesGroup6="\uD850\uD851\uD852\uD853\uD854\uD855\uD856\uD857\uD858\uD859\uD85A\uD85B\uD85C\uD85D\uD85E\uD85F",highSurrogatesGroup7="\uD860\uD861\uD862\uD863\uD864\uD865\uD866\uD867\uD868\uD869\uD86A\uD86B\uD86C\uD86D\uD86E\uD86F",highSurrogatesGroup8="\uD870\uD871\uD872\uD873\uD874\uD875\uD876\uD877\uD878\uD879\uD87A\uD87B\uD87C\uD87D\uD87E\uD87F",highSurrogatesGroup9="\uD880\uD881\uD882\uD883\uD884\uD885\uD886\uD887\uD888\uD889\uD88A\uD88B\uD88C\uD88D\uD88E\uD88F",highSurrogatesGroup10="\uD890\uD891\uD892\uD893\uD894\uD895\uD896\uD897\uD898\uD899\uD89A\uD89B\uD89C\uD89D\uD89E\uD89F",highSurrogatesGroup11="\uD8A0\uD8A1\uD8A2\uD8A3\uD8A4\uD8A5\uD8A6\uD8A7\uD8A8\uD8A9\uD8AA\uD8AB\uD8AC\uD8AD\uD8AE\uD8AF",highSurrogatesGroup12="\uD8B0\uD8B1\uD8B2\uD8B3\uD8B4\uD8B5\uD8B6\uD8B7\uD8B8\uD8B9\uD8BA\uD8BB\uD8BC\uD8BD\uD8BE\uD8BF",highSurrogatesGroup13="\uD8C0\uD8C1\uD8C2\uD8C3\uD8C4\uD8C5\uD8C6\uD8C7\uD8C8\uD8C9\uD8CA\uD8CB\uD8CC\uD8CD\uD8CE\uD8CF",highSurrogatesGroup14="\uD8D0\uD8D1\uD8D2\uD8D3\uD8D4\uD8D5\uD8D6\uD8D7\uD8D8\uD8D9\uD8DA\uD8DB\uD8DC\uD8DD\uD8DE\uD8DF",highSurrogatesGroup15="\uD8E0\uD8E1\uD8E2\uD8E3\uD8E4\uD8E5\uD8E6\uD8E7\uD8E8\uD8E9\uD8EA\uD8EB\uD8EC\uD8ED\uD8EE\uD8EF",highSurrogatesGroup16="\uD8F0\uD8F1\uD8F2\uD8F3\uD8F4\uD8F5\uD8F6\uD8F7\uD8F8\uD8F9\uD8FA\uD8FB\uD8FC\uD8FD\uD8FE\uD8FF";assert.sameValue(RegExp.escape(highSurrogatesGroup1),"\\ud800\\ud801\\ud802\\ud803\\ud804\\ud805\\ud806\\ud807\\ud808\\ud809\\ud80a\\ud80b\\ud80c\\ud80d\\ud80e\\ud80f","High surrogates group 1 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup2),"\\ud810\\ud811\\ud812\\ud813\\ud814\\ud815\\ud816\\ud817\\ud818\\ud819\\ud81a\\ud81b\\ud81c\\ud81d\\ud81e\\ud81f","High surrogates group 2 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup3),"\\ud820\\ud821\\ud822\\ud823\\ud824\\ud825\\ud826\\ud827\\ud828\\ud829\\ud82a\\ud82b\\ud82c\\ud82d\\ud82e\\ud82f","High surrogates group 3 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup4),"\\ud830\\ud831\\ud832\\ud833\\ud834\\ud835\\ud836\\ud837\\ud838\\ud839\\ud83a\\ud83b\\ud83c\\ud83d\\ud83e\\ud83f","High surrogates group 4 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup5),"\\ud840\\ud841\\ud842\\ud843\\ud844\\ud845\\ud846\\ud847\\ud848\\ud849\\ud84a\\ud84b\\ud84c\\ud84d\\ud84e\\ud84f","High surrogates group 5 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup6),"\\ud850\\ud851\\ud852\\ud853\\ud854\\ud855\\ud856\\ud857\\ud858\\ud859\\ud85a\\ud85b\\ud85c\\ud85d\\ud85e\\ud85f","High surrogates group 6 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup7),"\\ud860\\ud861\\ud862\\ud863\\ud864\\ud865\\ud866\\ud867\\ud868\\ud869\\ud86a\\ud86b\\ud86c\\ud86d\\ud86e\\ud86f","High surrogates group 7 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup8),"\\ud870\\ud871\\ud872\\ud873\\ud874\\ud875\\ud876\\ud877\\ud878\\ud879\\ud87a\\ud87b\\ud87c\\ud87d\\ud87e\\ud87f","High surrogates group 8 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup9),"\\ud880\\ud881\\ud882\\ud883\\ud884\\ud885\\ud886\\ud887\\ud888\\ud889\\ud88a\\ud88b\\ud88c\\ud88d\\ud88e\\ud88f","High surrogates group 9 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup10),"\\ud890\\ud891\\ud892\\ud893\\ud894\\ud895\\ud896\\ud897\\ud898\\ud899\\ud89a\\ud89b\\ud89c\\ud89d\\ud89e\\ud89f","High surrogates group 10 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup11),"\\ud8a0\\ud8a1\\ud8a2\\ud8a3\\ud8a4\\ud8a5\\ud8a6\\ud8a7\\ud8a8\\ud8a9\\ud8aa\\ud8ab\\ud8ac\\ud8ad\\ud8ae\\ud8af","High surrogates group 11 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup12),"\\ud8b0\\ud8b1\\ud8b2\\ud8b3\\ud8b4\\ud8b5\\ud8b6\\ud8b7\\ud8b8\\ud8b9\\ud8ba\\ud8bb\\ud8bc\\ud8bd\\ud8be\\ud8bf","High surrogates group 12 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup13),"\\ud8c0\\ud8c1\\ud8c2\\ud8c3\\ud8c4\\ud8c5\\ud8c6\\ud8c7\\ud8c8\\ud8c9\\ud8ca\\ud8cb\\ud8cc\\ud8cd\\ud8ce\\ud8cf","High surrogates group 13 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup14),"\\ud8d0\\ud8d1\\ud8d2\\ud8d3\\ud8d4\\ud8d5\\ud8d6\\ud8d7\\ud8d8\\ud8d9\\ud8da\\ud8db\\ud8dc\\ud8dd\\ud8de\\ud8df","High surrogates group 14 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup15),"\\ud8e0\\ud8e1\\ud8e2\\ud8e3\\ud8e4\\ud8e5\\ud8e6\\ud8e7\\ud8e8\\ud8e9\\ud8ea\\ud8eb\\ud8ec\\ud8ed\\ud8ee\\ud8ef","High surrogates group 15 are correctly escaped"),assert.sameValue(RegExp.escape(highSurrogatesGroup16),"\\ud8f0\\ud8f1\\ud8f2\\ud8f3\\ud8f4\\ud8f5\\ud8f6\\ud8f7\\ud8f8\\ud8f9\\ud8fa\\ud8fb\\ud8fc\\ud8fd\\ud8fe\\ud8ff","High surrogates group 16 are correctly escaped");const lowSurrogatesGroup1="\uDC00\uDC01\uDC02\uDC03\uDC04\uDC05\uDC06\uDC07\uDC08\uDC09\uDC0A\uDC0B\uDC0C\uDC0D\uDC0E\uDC0F",lowSurrogatesGroup2="\uDC10\uDC11\uDC12\uDC13\uDC14\uDC15\uDC16\uDC17\uDC18\uDC19\uDC1A\uDC1B\uDC1C\uDC1D\uDC1E\uDC1F",lowSurrogatesGroup3="\uDC20\uDC21\uDC22\uDC23\uDC24\uDC25\uDC26\uDC27\uDC28\uDC29\uDC2A\uDC2B\uDC2C\uDC2D\uDC2E\uDC2F",lowSurrogatesGroup4="\uDC30\uDC31\uDC32\uDC33\uDC34\uDC35\uDC36\uDC37\uDC38\uDC39\uDC3A\uDC3B\uDC3C\uDC3D\uDC3E\uDC3F",lowSurrogatesGroup5="\uDC40\uDC41\uDC42\uDC43\uDC44\uDC45\uDC46\uDC47\uDC48\uDC49\uDC4A\uDC4B\uDC4C\uDC4D\uDC4E\uDC4F",lowSurrogatesGroup6="\uDC50\uDC51\uDC52\uDC53\uDC54\uDC55\uDC56\uDC57\uDC58\uDC59\uDC5A\uDC5B\uDC5C\uDC5D\uDC5E\uDC5F",lowSurrogatesGroup7="\uDC60\uDC61\uDC62\uDC63\uDC64\uDC65\uDC66\uDC67\uDC68\uDC69\uDC6A\uDC6B\uDC6C\uDC6D\uDC6E\uDC6F",lowSurrogatesGroup8="\uDC70\uDC71\uDC72\uDC73\uDC74\uDC75\uDC76\uDC77\uDC78\uDC79\uDC7A\uDC7B\uDC7C\uDC7D\uDC7E\uDC7F",lowSurrogatesGroup9="\uDC80\uDC81\uDC82\uDC83\uDC84\uDC85\uDC86\uDC87\uDC88\uDC89\uDC8A\uDC8B\uDC8C\uDC8D\uDC8E\uDC8F",lowSurrogatesGroup10="\uDC90\uDC91\uDC92\uDC93\uDC94\uDC95\uDC96\uDC97\uDC98\uDC99\uDC9A\uDC9B\uDC9C\uDC9D\uDC9E\uDC9F",lowSurrogatesGroup11="\uDCA0\uDCA1\uDCA2\uDCA3\uDCA4\uDCA5\uDCA6\uDCA7\uDCA8\uDCA9\uDCAA\uDCAB\uDCAC\uDCAD\uDCAE\uDCAF",lowSurrogatesGroup12="\uDCB0\uDCB1\uDCB2\uDCB3\uDCB4\uDCB5\uDCB6\uDCB7\uDCB8\uDCB9\uDCBA\uDCBB\uDCBC\uDCBD\uDCBE\uDCBF",lowSurrogatesGroup13="\uDCC0\uDCC1\uDCC2\uDCC3\uDCC4\uDCC5\uDCC6\uDCC7\uDCC8\uDCC9\uDCCA\uDCCB\uDCCC\uDCCD\uDCCE\uDCCF",lowSurrogatesGroup14="\uDCD0\uDCD1\uDCD2\uDCD3\uDCD4\uDCD5\uDCD6\uDCD7\uDCD8\uDCD9\uDCDA\uDCDB\uDCDC\uDCDD\uDCDE\uDCDF",lowSurrogatesGroup15="\uDCE0\uDCE1\uDCE2\uDCE3\uDCE4\uDCE5\uDCE6\uDCE7\uDCE8\uDCE9\uDCEA\uDCEB\uDCEC\uDCED\uDCEE\uDCEF",lowSurrogatesGroup16="\uDCF0\uDCF1\uDCF2\uDCF3\uDCF4\uDCF5\uDCF6\uDCF7\uDCF8\uDCF9\uDCFA\uDCFB\uDCFC\uDCFD\uDCFE\uDCFF";assert.sameValue(RegExp.escape(lowSurrogatesGroup1),"\\udc00\\udc01\\udc02\\udc03\\udc04\\udc05\\udc06\\udc07\\udc08\\udc09\\udc0a\\udc0b\\udc0c\\udc0d\\udc0e\\udc0f","Low surrogates group 1 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup2),"\\udc10\\udc11\\udc12\\udc13\\udc14\\udc15\\udc16\\udc17\\udc18\\udc19\\udc1a\\udc1b\\udc1c\\udc1d\\udc1e\\udc1f","Low surrogates group 2 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup3),"\\udc20\\udc21\\udc22\\udc23\\udc24\\udc25\\udc26\\udc27\\udc28\\udc29\\udc2a\\udc2b\\udc2c\\udc2d\\udc2e\\udc2f","Low surrogates group 3 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup4),"\\udc30\\udc31\\udc32\\udc33\\udc34\\udc35\\udc36\\udc37\\udc38\\udc39\\udc3a\\udc3b\\udc3c\\udc3d\\udc3e\\udc3f","Low surrogates group 4 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup5),"\\udc40\\udc41\\udc42\\udc43\\udc44\\udc45\\udc46\\udc47\\udc48\\udc49\\udc4a\\udc4b\\udc4c\\udc4d\\udc4e\\udc4f","Low surrogates group 5 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup6),"\\udc50\\udc51\\udc52\\udc53\\udc54\\udc55\\udc56\\udc57\\udc58\\udc59\\udc5a\\udc5b\\udc5c\\udc5d\\udc5e\\udc5f","Low surrogates group 6 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup7),"\\udc60\\udc61\\udc62\\udc63\\udc64\\udc65\\udc66\\udc67\\udc68\\udc69\\udc6a\\udc6b\\udc6c\\udc6d\\udc6e\\udc6f","Low surrogates group 7 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup8),"\\udc70\\udc71\\udc72\\udc73\\udc74\\udc75\\udc76\\udc77\\udc78\\udc79\\udc7a\\udc7b\\udc7c\\udc7d\\udc7e\\udc7f","Low surrogates group 8 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup9),"\\udc80\\udc81\\udc82\\udc83\\udc84\\udc85\\udc86\\udc87\\udc88\\udc89\\udc8a\\udc8b\\udc8c\\udc8d\\udc8e\\udc8f","Low surrogates group 9 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup10),"\\udc90\\udc91\\udc92\\udc93\\udc94\\udc95\\udc96\\udc97\\udc98\\udc99\\udc9a\\udc9b\\udc9c\\udc9d\\udc9e\\udc9f","Low surrogates group 10 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup11),"\\udca0\\udca1\\udca2\\udca3\\udca4\\udca5\\udca6\\udca7\\udca8\\udca9\\udcaa\\udcab\\udcac\\udcad\\udcae\\udcaf","Low surrogates group 11 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup12),"\\udcb0\\udcb1\\udcb2\\udcb3\\udcb4\\udcb5\\udcb6\\udcb7\\udcb8\\udcb9\\udcba\\udcbb\\udcbc\\udcbd\\udcbe\\udcbf","Low surrogates group 12 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup13),"\\udcc0\\udcc1\\udcc2\\udcc3\\udcc4\\udcc5\\udcc6\\udcc7\\udcc8\\udcc9\\udcca\\udccb\\udccc\\udccd\\udcce\\udccf","Low surrogates group 13 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup14),"\\udcd0\\udcd1\\udcd2\\udcd3\\udcd4\\udcd5\\udcd6\\udcd7\\udcd8\\udcd9\\udcda\\udcdb\\udcdc\\udcdd\\udcde\\udcdf","Low surrogates group 14 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup15),"\\udce0\\udce1\\udce2\\udce3\\udce4\\udce5\\udce6\\udce7\\udce8\\udce9\\udcea\\udceb\\udcec\\udced\\udcee\\udcef","Low surrogates group 15 are correctly escaped"),assert.sameValue(RegExp.escape(lowSurrogatesGroup16),"\\udcf0\\udcf1\\udcf2\\udcf3\\udcf4\\udcf5\\udcf6\\udcf7\\udcf8\\udcf9\\udcfa\\udcfb\\udcfc\\udcfd\\udcfe\\udcff","Low surrogates group 16 are correctly escaped");␊



test262/test/language/expressions/dynamic-import/syntax/valid/nested-block-labeled-import-attributes-trailing-comma-first.js 5


Differences (-oxc|+esbuild):
-label:import("./empty_FIXTURE.js");
+import("./empty_FIXTURE.js");␊



test262/test/language/expressions/dynamic-import/syntax/valid/nested-block-labeled-nested-imports.js 5


Differences (-oxc|+esbuild):
-label:import(import(import("./empty_FIXTURE.js")));
+import(import(import("./empty_FIXTURE.js")));␊



test262/test/language/expressions/dynamic-import/syntax/valid/nested-block-labeled-empty-str-is-valid-assign-expr.js 5


Differences (-oxc|+esbuild):
-label:import("");
+import("");␊



test262/test/language/literals/regexp/named-groups/invalid-lone-surrogate-groupname.js 3


Differences (-oxc|+esbuild):
-assert.throws(SyntaxError,()=>eval("/(?<a\\ud801>.)/"),"Lead"),assert.throws(SyntaxError,()=>eval("/(?<a\\udca4>.)/"),"Trail"),assert.throws(SyntaxError,()=>eval("/(?<a\\ud801>.)/u"),"Lead with u flag"),assert.throws(SyntaxError,()=>eval("/(?<a\\udca4>.)/u"),"Trail with u flag");
+assert.throws(SyntaxError,()=>eval("/(?<a\uD801>.)/"),"Lead"),assert.throws(SyntaxError,()=>eval("/(?<a\uDCA4>.)/"),"Trail"),assert.throws(SyntaxError,()=>eval("/(?<a\uD801>.)/u"),"Lead with u flag"),assert.throws(SyntaxError,()=>eval("/(?<a\uDCA4>.)/u"),"Trail with u flag");␊



test262/test/built-ins/Set/prototype/isDisjointFrom/set-like-class-mutation.js 5


Differences (-oxc|+esbuild):
-const baseSet=new Set(["a","b","c"]),evilSetLike={size:3,has(v){if(v==="a")return baseSet.delete("b"),baseSet.delete("c"),baseSet.add("b"),!1;if(v==="b")return!1;if(v==="c")throw new Test262Error("Set.prototype.isDisjointFrom should not call its argument's has method with values from this which have been deleted before visiting");throw new Test262Error("Set.prototype.isDisjointFrom should only call its argument's has method with contents of this")},*keys(){throw new Test262Error("Set.prototype.isDisjointFrom should not call its argument's keys iterator when this.size ≤ arg.size")}},result=baseSet.isDisjointFrom(evilSetLike);assert.sameValue(result,!0);const expectedNewBase=["a","b"];assert.compareArray([...baseSet],expectedNewBase);
+const baseSet=new Set(["a","b","c"]),evilSetLike={size:3,has(v){if(v==="a")return baseSet.delete("b"),baseSet.delete("c"),baseSet.add("b"),!1;if(v==="b")return!1;throw v==="c"?new Test262Error("Set.prototype.isDisjointFrom should not call its argument's has method with values from this which have been deleted before visiting"):new Test262Error("Set.prototype.isDisjointFrom should only call its argument's has method with contents of this")},*keys(){throw new Test262Error("Set.prototype.isDisjointFrom should not call its argument's keys iterator when this.size \u2264 arg.size")}},result=baseSet.isDisjointFrom(evilSetLike);assert.sameValue(result,!0);const expectedNewBase=["a","b"];assert.compareArray([...baseSet],expectedNewBase);␊



test262/test/built-ins/Array/from/array-like-has-length-but-no-indexes-with-values.js 5


Differences (-oxc|+esbuild):
-const length=5,newlyCreatedArray=Array.from({length});assert.sameValue(newlyCreatedArray.length,length,"The newly created array's length is equal to the value of the length property for the provided array like object"),assert.compareArray(newlyCreatedArray,[void 0,void 0,void 0,void 0,void 0]);const newlyCreatedAndMappedArray=Array.from({length}).map(x=>1);assert.sameValue(newlyCreatedAndMappedArray.length,length,"The newly created and mapped array's length is equal to the value of the length property for the provided array like object"),assert.compareArray(newlyCreatedAndMappedArray,[1,1,1,1,1]);
+const length=5,newlyCreatedArray=Array.from({length:5});assert.sameValue(newlyCreatedArray.length,5,"The newly created array's length is equal to the value of the length property for the provided array like object"),assert.compareArray(newlyCreatedArray,[void 0,void 0,void 0,void 0,void 0]);const newlyCreatedAndMappedArray=Array.from({length:5}).map(x=>1);assert.sameValue(newlyCreatedAndMappedArray.length,5,"The newly created and mapped array's length is equal to the value of the length property for the provided array like object"),assert.compareArray(newlyCreatedAndMappedArray,[1,1,1,1,1]);␊



test262/test/built-ins/TypedArray/prototype/set/typedarray-arg-set-values-diff-buffer-other-type-conversions-sab.js 1


Differences (-oxc|+esbuild):
-testTypedArrayConversions(byteConversionValues,function(TA,value,expected,initial){if(TA===Float64Array||TA===Float32Array||typeof Float16Array<"u"&&TA===Float16Array||TA===Uint8ClampedArray||TA===Int32Array)return;var sab,src,target;sab=new SharedArrayBuffer(4),src=new Int32Array(sab),src[0]=value,target=new TA([initial]),target.set(src),assert.sameValue(target[0],expected,"src is SAB-backed"),sab=new SharedArrayBuffer(4),src=new Int32Array([value]),target=new TA(sab),target[0]=initial,target.set(src),assert.sameValue(target[0],expected,"target is SAB-backed");var sab1=new SharedArrayBuffer(4),sab2=new SharedArrayBuffer(4);src=new Int32Array(sab1),src[0]=value,target=new TA(sab2),target[0]=initial,target.set(src),assert.sameValue(target[0],expected,"src and target are SAB-backed")});
+testTypedArrayConversions(byteConversionValues,function(TA,value,expected,initial){if(!(TA===Float64Array||TA===Float32Array||typeof Float16Array<"u"&&TA===Float16Array||TA===Uint8ClampedArray)&&TA!==Int32Array){var sab,src,target;sab=new SharedArrayBuffer(4),src=new Int32Array(sab),src[0]=value,target=new TA([initial]),target.set(src),assert.sameValue(target[0],expected,"src is SAB-backed"),sab=new SharedArrayBuffer(4),src=new Int32Array([value]),target=new TA(sab),target[0]=initial,target.set(src),assert.sameValue(target[0],expected,"target is SAB-backed");var sab1=new SharedArrayBuffer(4),sab2=new SharedArrayBuffer(4);src=new Int32Array(sab1),src[0]=value,target=new TA(sab2),target[0]=initial,target.set(src),assert.sameValue(target[0],expected,"src and target are SAB-backed")}});␊



test262/test/built-ins/TypedArray/prototype/set/typedarray-arg-set-values-diff-buffer-other-type-conversions.js 4


Differences (-oxc|+esbuild):
-testTypedArrayConversions(byteConversionValues,function(TA,value,expected,initial){if(TA===Float64Array)return;var src=new Float64Array([value]),target=new TA([initial]);target.set(src),assert.sameValue(target[0],expected)});
+testTypedArrayConversions(byteConversionValues,function(TA,value,expected,initial){if(TA!==Float64Array){var src=new Float64Array([value]),target=new TA([initial]);target.set(src),assert.sameValue(target[0],expected)}});␊



test262/test/built-ins/Set/set-iterable-throws-when-add-is-not-callable.js 13


Differences (-oxc|+esbuild):
-Set.prototype.add=null,assert.throws(TypeError,function(){new Set([1,2])});
+Set.prototype.add=null,assert.throws(TypeError,function(){});␊



test262/test/built-ins/decodeURIComponent/S15.1.3.2_A2.5_T1.js 2


Differences (-oxc|+esbuild):
-for(var errorCount=0,count=0,indexP,indexO=0,indexB1=240;indexB1<=244;indexB1++)for(var hexB1=decimalToPercentHexString(indexB1),indexB2=128;indexB2<=191;indexB2++){if(indexB1===240&&indexB2<=159||indexB1===244&&indexB2>=144)continue;for(var hexB1_B2=hexB1+decimalToPercentHexString(indexB2),indexB3=128;indexB3<=191;indexB3++)for(var hexB1_B2_B3=hexB1_B2+decimalToPercentHexString(indexB3),indexB4=128;indexB4<=191;indexB4++){var hexB1_B2_B3_B4=hexB1_B2_B3+decimalToPercentHexString(indexB4);count++;var index=(indexB1&7)*262144+(indexB2&63)*4096+(indexB3&63)*64+(indexB4&63),L=(index-65536&1023)+56320,H=(index-65536>>10&1023)+55296;if(decodeURIComponent(hexB1_B2_B3_B4)===String.fromCharCode(H,L))continue;if(indexO===0)indexO=index;else if(index-indexP!=1){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}
+for(var errorCount=0,count=0,indexP,indexO=0,indexB1=240;indexB1<=244;indexB1++)for(var hexB1=decimalToPercentHexString(indexB1),indexB2=128;indexB2<=191;indexB2++)if(!(indexB1===240&&indexB2<=159)&&!(indexB1===244&&indexB2>=144))for(var hexB1_B2=hexB1+decimalToPercentHexString(indexB2),indexB3=128;indexB3<=191;indexB3++)for(var hexB1_B2_B3=hexB1_B2+decimalToPercentHexString(indexB3),indexB4=128;indexB4<=191;indexB4++){var hexB1_B2_B3_B4=hexB1_B2_B3+decimalToPercentHexString(indexB4);count++;var index=(indexB1&7)*262144+(indexB2&63)*4096+(indexB3&63)*64+(indexB4&63),L=(index-65536&1023)+56320,H=(index-65536>>10&1023)+55296;if(decodeURIComponent(hexB1_B2_B3_B4)!==String.fromCharCode(H,L)){if(indexO===0)indexO=index;else if(index-indexP!==1){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}␊



test262/test/built-ins/decodeURIComponent/S15.1.3.2_A2.4_T1.js 2


Differences (-oxc|+esbuild):
-for(var errorCount=0,count=0,indexP,indexO=0,indexB1=224;indexB1<=239;indexB1++)for(var hexB1=decimalToPercentHexString(indexB1),indexB2=128;indexB2<=191;indexB2++){if(indexB1===224&&indexB2<=159||indexB1===237&&160<=indexB2)continue;for(var hexB1_B2=hexB1+decimalToPercentHexString(indexB2),indexB3=128;indexB3<=191;indexB3++){count++;var hexB1_B2_B3=hexB1_B2+decimalToPercentHexString(indexB3),index=(indexB1&15)*4096+(indexB2&63)*64+(indexB3&63);if(decodeURIComponent(hexB1_B2_B3)===String.fromCharCode(index))continue;if(indexO===0)indexO=index;else if(index-indexP!=1){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}
+for(var errorCount=0,count=0,indexP,indexO=0,indexB1=224;indexB1<=239;indexB1++)for(var hexB1=decimalToPercentHexString(indexB1),indexB2=128;indexB2<=191;indexB2++)if(!(indexB1===224&&indexB2<=159)&&!(indexB1===237&&160<=indexB2))for(var hexB1_B2=hexB1+decimalToPercentHexString(indexB2),indexB3=128;indexB3<=191;indexB3++){count++;var hexB1_B2_B3=hexB1_B2+decimalToPercentHexString(indexB3),index=(indexB1&15)*4096+(indexB2&63)*64+(indexB3&63);if(decodeURIComponent(hexB1_B2_B3)!==String.fromCharCode(index)){if(indexO===0)indexO=index;else if(index-indexP!==1){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}␊



test262/test/built-ins/Temporal/PlainMonthDay/prototype/equals/calendar-temporal-object.js 21


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let monthday=new Temporal.PlainMonthDay(5,2);monthday.equals({monthCode:"M06",day:2,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainMonthDay(5,2).equals({monthCode:"M06",day:2,calendar:temporalObject})});␊



test262/test/built-ins/Atomics/notify/notify-with-no-agents-waiting.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
     // THIS WILL NEVER WAIT.␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*2));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),assert.sameValue(Atomics.notify(i32a,0,1),0,"Atomics.notify(i32a, 0, 1) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*2));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),assert.sameValue(Atomics.notify(i32a,0,1),0,"Atomics.notify(i32a, 0, 1) returns 0");␊



test262/test/built-ins/Atomics/notify/notify-zero.js 86


Differences (-oxc|+esbuild):
-const WAIT_INDEX=0,RUNNING=1,NOTIFYCOUNT=0,NUMAGENT=3,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const WAIT_INDEX=0,RUNNING=1,NOTIFYCOUNT=0,NUMAGENT=3,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long;for(var i=0;i<3;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 1, 1);␊
 ␊
       // Waiters that are not woken will time out eventually.␊
-      $262.agent.report(Atomics.wait(i32a, ${WAIT_INDEX}, 0, ${TIMEOUT}));␊
+      $262.agent.report(Atomics.wait(i32a, 0, 0, ${TIMEOUT}));␊
       $262.agent.leaving();␊
     });␊
-  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,WAIT_INDEX,NOTIFYCOUNT),NOTIFYCOUNT,"Atomics.notify(i32a, WAIT_INDEX, NOTIFYCOUNT) returns the value of `NOTIFYCOUNT`"),$262.agent.trySleep(TIMEOUT);for(var i=0;i<NUMAGENT;i++)assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"');
+  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,3),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,0),0,"Atomics.notify(i32a, WAIT_INDEX, NOTIFYCOUNT) returns the value of `NOTIFYCOUNT`"),$262.agent.trySleep(TIMEOUT);for(var i=0;i<3;i++)assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"');␊



test262/test/built-ins/Atomics/notify/notify-all-on-loc.js 166


Differences (-oxc|+esbuild):
-const WAIT_INDEX=0,WAIT_FAKE=1,RUNNING=2,NOTIFY_INDEX=3,NUMAGENT=3,TIMEOUT_AGENT_MESSAGES=2,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const WAIT_INDEX=0,WAIT_FAKE=1,RUNNING=2,NOTIFY_INDEX=3,NUMAGENT=3,TIMEOUT_AGENT_MESSAGES=2,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long;for(var i=0;i<3;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 2, 1);␊
 ␊
-      $262.agent.report("A " + Atomics.wait(i32a, ${WAIT_INDEX}, 0));␊
+      $262.agent.report("A " + Atomics.wait(i32a, 0, 0));␊
       $262.agent.leaving();␊
     });␊
   `);$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 2, 1);␊
 ␊
     // This will always time out.␊
-    $262.agent.report("B " + Atomics.wait(i32a, ${WAIT_FAKE}, 0, ${TIMEOUT}));␊
+    $262.agent.report("B " + Atomics.wait(i32a, 1, 0, ${TIMEOUT}));␊
 ␊
     // If this value is not 1, then the agent timeout before the main agent␊
     // called Atomics.notify.␊
-    const result = Atomics.load(i32a, ${NOTIFY_INDEX}) === 1␊
+    const result = Atomics.load(i32a, 3) === 1␊
                    ? "timeout after Atomics.notify"␊
                    : "timeout before Atomics.notify";␊
     $262.agent.report("W " + result);␊
 ␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT+1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,WAIT_INDEX),NUMAGENT,"Atomics.notify(i32a, WAIT_INDEX) returns the value of `NUMAGENT`"),Atomics.store(i32a,NOTIFY_INDEX,1);const reports=[];for(var i=0;i<NUMAGENT+TIMEOUT_AGENT_MESSAGES;i++)reports.push($262.agent.getReport());reports.sort();for(var i=0;i<NUMAGENT;i++)assert.sameValue(reports[i],"A ok",'The value of reports[i] is "A ok"');assert.sameValue(reports[NUMAGENT],"B timed-out",'The value of reports[NUMAGENT] is "B timed-out"'),assert.sameValue(reports[NUMAGENT+1],"W timeout after Atomics.notify",'The value of reports[NUMAGENT + 1] is "W timeout after Atomics.notify"');
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,2,4),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0),3,"Atomics.notify(i32a, WAIT_INDEX) returns the value of `NUMAGENT`"),Atomics.store(i32a,3,1);const reports=[];for(var i=0;i<5;i++)reports.push($262.agent.getReport());reports.sort();for(var i=0;i<3;i++)assert.sameValue(reports[i],"A ok",'The value of reports[i] is "A ok"');assert.sameValue(reports[3],"B timed-out",'The value of reports[NUMAGENT] is "B timed-out"'),assert.sameValue(reports[4],"W timeout after Atomics.notify",'The value of reports[NUMAGENT + 1] is "W timeout after Atomics.notify"');␊



test262/test/built-ins/Atomics/notify/bigint/notify-all-on-loc.js 166


Differences (-oxc|+esbuild):
-const WAIT_INDEX=0,WAIT_FAKE=1,RUNNING=2,NOTIFY_INDEX=3,NUMAGENT=3,TIMEOUT_AGENT_MESSAGES=2,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*BUFFER_SIZE));for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const WAIT_INDEX=0,WAIT_FAKE=1,RUNNING=2,NOTIFY_INDEX=3,NUMAGENT=3,TIMEOUT_AGENT_MESSAGES=2,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));for(var i=0;i<3;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i64a = new BigInt64Array(sab);␊
-      Atomics.add(i64a, ${RUNNING}, 1n);␊
+      Atomics.add(i64a, 2, 1n);␊
 ␊
-      $262.agent.report("A " + Atomics.wait(i64a, ${WAIT_INDEX}, 0n));␊
+      $262.agent.report("A " + Atomics.wait(i64a, 0, 0n));␊
       $262.agent.leaving();␊
     });␊
   `);$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 2, 1n);␊
 ␊
     // This will always time out.␊
-    $262.agent.report("B " + Atomics.wait(i64a, ${WAIT_FAKE}, 0n, ${TIMEOUT}));␊
+    $262.agent.report("B " + Atomics.wait(i64a, 1, 0n, ${TIMEOUT}));␊
 ␊
     // If this value is not 1n, then the agent timeout before the main agent␊
     // called Atomics.notify.␊
-    const result = Atomics.load(i64a, ${NOTIFY_INDEX}) === 1n␊
+    const result = Atomics.load(i64a, 3) === 1n␊
                    ? "timeout after Atomics.notify"␊
                    : "timeout before Atomics.notify";␊
     $262.agent.report("W " + result);␊
 ␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,BigInt(NUMAGENT+1)),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i64a,WAIT_INDEX),NUMAGENT,"Atomics.notify(i64a, WAIT_INDEX) returns the value of `NUMAGENT`"),Atomics.store(i64a,NOTIFY_INDEX,1n);const reports=[];for(var i=0;i<NUMAGENT+TIMEOUT_AGENT_MESSAGES;i++)reports.push($262.agent.getReport());reports.sort();for(var i=0;i<NUMAGENT;i++)assert.sameValue(reports[i],"A ok",'The value of reports[i] is "A ok"');assert.sameValue(reports[NUMAGENT],"B timed-out",'The value of reports[NUMAGENT] is "B timed-out"'),assert.sameValue(reports[NUMAGENT+1],"W timeout after Atomics.notify",'The value of reports[NUMAGENT + 1] is "W timeout after Atomics.notify"');
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,2,BigInt(4)),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i64a,0),3,"Atomics.notify(i64a, WAIT_INDEX) returns the value of `NUMAGENT`"),Atomics.store(i64a,3,1n);const reports=[];for(var i=0;i<5;i++)reports.push($262.agent.getReport());reports.sort();for(var i=0;i<3;i++)assert.sameValue(reports[i],"A ok",'The value of reports[i] is "A ok"');assert.sameValue(reports[3],"B timed-out",'The value of reports[NUMAGENT] is "B timed-out"'),assert.sameValue(reports[4],"W timeout after Atomics.notify",'The value of reports[NUMAGENT + 1] is "W timeout after Atomics.notify"');␊



test262/test/built-ins/Atomics/notify/negative-count.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.long;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     $262.agent.report(Atomics.wait(i32a, 0, 0, ${TIMEOUT}));␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,-1),0,"Atomics.notify(i32a, 0, -1) returns 0"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"');
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,-1),0,"Atomics.notify(i32a, 0, -1) returns 0"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"');␊



test262/test/built-ins/Atomics/notify/notify-nan.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.long;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     $262.agent.report(Atomics.wait(i32a, 0, 0, ${TIMEOUT})); // We will timeout eventually␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,NaN),0,"Atomics.notify(i32a, 0, NaN) returns 0"),$262.agent.trySleep(TIMEOUT),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"');
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,NaN),0,"Atomics.notify(i32a, 0, NaN) returns 0"),$262.agent.trySleep(TIMEOUT),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"');␊



test262/test/built-ins/Atomics/notify/notify-with-no-matching-agents-waiting.js 14


Differences (-oxc|+esbuild):
 const RUNNING=0;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 0, 1);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*2));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),assert.sameValue(Atomics.notify(i32a,1,1),0,"Atomics.notify(i32a, 1, 1) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*2));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,0,1),assert.sameValue(Atomics.notify(i32a,1,1),0,"Atomics.notify(i32a, 1, 1) returns 0");␊



test262/test/built-ins/Atomics/notify/count-defaults-to-infinity-missing.js 73


Differences (-oxc|+esbuild):
-const RUNNING=0,WAIT_INDEX=1,BUFFER_SIZE=2,NUMAGENT=4;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const RUNNING=0,WAIT_INDEX=1,BUFFER_SIZE=2,NUMAGENT=4;for(var i=0;i<4;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 0, 1);␊
 ␊
       // Wait until restarted by main thread.␊
-      var status = Atomics.wait(i32a, ${WAIT_INDEX}, 0);␊
+      var status = Atomics.wait(i32a, 1, 0);␊
 ␊
       // Report wait status and then exit the agent.␊
       var name = String.fromCharCode(0x41 + ${i}); // "A", "B", "C", or "D"␊
       $262.agent.report(name + " " + status);␊
       $262.agent.leaving();␊
     });␊
-  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,WAIT_INDEX),NUMAGENT,"Atomics.notify(i32a, WAIT_INDEX /*, count missing */) returns the value of `NUMAGENT`");const reports=[];for(var i=0;i<NUMAGENT;i++)reports.push($262.agent.getReport());reports.sort(),assert.sameValue(reports[0],"A ok",'The value of reports[0] is "A ok"'),assert.sameValue(reports[1],"B ok",'The value of reports[1] is "B ok"'),assert.sameValue(reports[2],"C ok",'The value of reports[2] is "C ok"'),assert.sameValue(reports[3],"D ok",'The value of reports[3] is "D ok"');
+  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*2));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,0,4),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,1),4,"Atomics.notify(i32a, WAIT_INDEX /*, count missing */) returns the value of `NUMAGENT`");const reports=[];for(var i=0;i<4;i++)reports.push($262.agent.getReport());reports.sort(),assert.sameValue(reports[0],"A ok",'The value of reports[0] is "A ok"'),assert.sameValue(reports[1],"B ok",'The value of reports[1] is "B ok"'),assert.sameValue(reports[2],"C ok",'The value of reports[2] is "C ok"'),assert.sameValue(reports[3],"D ok",'The value of reports[3] is "D ok"');␊



test262/test/built-ins/Atomics/notify/notify-two.js 104


Differences (-oxc|+esbuild):
-const WAIT_INDEX=0,RUNNING=1,NOTIFYCOUNT=2,NUMAGENT=3,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const WAIT_INDEX=0,RUNNING=1,NOTIFYCOUNT=2,NUMAGENT=3,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long;for(var i=0;i<3;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 1, 1);␊
 ␊
       // Waiters that are not woken will time out eventually.␊
-      $262.agent.report(Atomics.wait(i32a, ${WAIT_INDEX}, 0, ${TIMEOUT}));␊
+      $262.agent.report(Atomics.wait(i32a, 0, 0, ${TIMEOUT}));␊
       $262.agent.leaving();␊
     })␊
-  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,NOTIFYCOUNT),NOTIFYCOUNT,"Atomics.notify(i32a, 0, NOTIFYCOUNT) returns the value of `NOTIFYCOUNT`"),$262.agent.trySleep(TIMEOUT);const reports=[];for(var i=0;i<NUMAGENT;i++)reports.push($262.agent.getReport());reports.sort();for(var i=0;i<NOTIFYCOUNT;i++)assert.sameValue(reports[i],"ok",'The value of reports[i] is "ok"');for(var i=NOTIFYCOUNT;i<NUMAGENT;i++)assert.sameValue(reports[i],"timed-out",'The value of reports[i] is "timed-out"');
+  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,3),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,2),2,"Atomics.notify(i32a, 0, NOTIFYCOUNT) returns the value of `NOTIFYCOUNT`"),$262.agent.trySleep(TIMEOUT);const reports=[];for(var i=0;i<3;i++)reports.push($262.agent.getReport());reports.sort();for(var i=0;i<2;i++)assert.sameValue(reports[i],"ok",'The value of reports[i] is "ok"');for(var i=2;i<3;i++)assert.sameValue(reports[i],"timed-out",'The value of reports[i] is "timed-out"');␊



test262/test/built-ins/Atomics/notify/notify-in-order.js 99


Differences (-oxc|+esbuild):
-const NUMAGENT=3,WAIT_INDEX=0,SPIN=1,RUNNING=SPIN+NUMAGENT,BUFFER_SIZE=RUNNING+1;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const NUMAGENT=3,WAIT_INDEX=0,SPIN=1,RUNNING=4,BUFFER_SIZE=5;for(var i=0;i<3;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 4, 1);␊
 ␊
-      while (Atomics.load(i32a, ${SPIN+i}) === 0) {␊
+      while (Atomics.load(i32a, ${1+i}) === 0) {␊
         /* nothing */␊
       }␊
 ␊
       $262.agent.report(${i});␊
-      Atomics.wait(i32a, ${WAIT_INDEX}, 0);␊
+      Atomics.wait(i32a, 0, 0);␊
       $262.agent.report(${i});␊
 ␊
       $262.agent.leaving();␊
     });␊
-  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT);for(var waiterlist=[],i=0;i<NUMAGENT;i++)assert.sameValue(Atomics.store(i32a,SPIN+i,1),1,`Atomics.store(i32a, SPIN + ${i}, 1) returns 1`),waiterlist.push($262.agent.getReport()),$262.agent.tryYield();for(var notified=[],i=0;i<NUMAGENT;i++)assert.sameValue(Atomics.notify(i32a,WAIT_INDEX,1),1,`Atomics.notify(i32a, WAIT_INDEX, 1) returns 1 (${i})`),notified.push($262.agent.getReport());assert.sameValue(notified.join(""),waiterlist.join(""),"notified.join('') returns waiterlist.join('')");
+  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*5));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,4,3);for(var waiterlist=[],i=0;i<3;i++)assert.sameValue(Atomics.store(i32a,1+i,1),1,`Atomics.store(i32a, SPIN + ${i}, 1) returns 1`),waiterlist.push($262.agent.getReport()),$262.agent.tryYield();for(var notified=[],i=0;i<3;i++)assert.sameValue(Atomics.notify(i32a,0,1),1,`Atomics.notify(i32a, WAIT_INDEX, 1) returns 1 (${i})`),notified.push($262.agent.getReport());assert.sameValue(notified.join(""),waiterlist.join(""),"notified.join('') returns waiterlist.join('')");␊



test262/test/built-ins/Atomics/notify/notify-all.js 73


Differences (-oxc|+esbuild):
-const WAIT_INDEX=0,RUNNING=1,NUMAGENT=3,BUFFER_SIZE=4;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const WAIT_INDEX=0,RUNNING=1,NUMAGENT=3,BUFFER_SIZE=4;for(var i=0;i<3;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 1, 1);␊
 ␊
-      $262.agent.report("A " + Atomics.wait(i32a, ${WAIT_INDEX}, 0));␊
+      $262.agent.report("A " + Atomics.wait(i32a, 0, 0));␊
       $262.agent.leaving();␊
     });␊
-  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,WAIT_INDEX),NUMAGENT,"Atomics.notify(i32a, WAIT_INDEX) returns the value of `NUMAGENT`");for(var i=0;i<NUMAGENT;i++)assert.sameValue($262.agent.getReport(),"A ok",'The value of reports[i] is "A ok"');
+  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,3),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0),3,"Atomics.notify(i32a, WAIT_INDEX) returns the value of `NUMAGENT`");for(var i=0;i<3;i++)assert.sameValue($262.agent.getReport(),"A ok",'The value of reports[i] is "A ok"');␊



test262/test/built-ins/Atomics/notify/notify-in-order-one-time.js 99


Differences (-oxc|+esbuild):
-const NUMAGENT=3,WAIT_INDEX=0,SPIN=1,RUNNING=SPIN+NUMAGENT,BUFFER_SIZE=RUNNING+1;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const NUMAGENT=3,WAIT_INDEX=0,SPIN=1,RUNNING=4,BUFFER_SIZE=5;for(var i=0;i<3;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 4, 1);␊
 ␊
-      while (Atomics.load(i32a, ${SPIN+i}) === 0) {␊
+      while (Atomics.load(i32a, ${1+i}) === 0) {␊
         /* nothing */␊
       }␊
 ␊
       $262.agent.report(${i});␊
-      Atomics.wait(i32a, ${WAIT_INDEX}, 0);␊
+      Atomics.wait(i32a, 0, 0);␊
       $262.agent.report(${i});␊
 ␊
       $262.agent.leaving();␊
     });␊
-  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT);for(var waiterlist=[],i=0;i<NUMAGENT;i++)assert.sameValue(Atomics.store(i32a,SPIN+i,1),1,`Atomics.store(i32a, SPIN + ${i}, 1) returns 1`),waiterlist.push($262.agent.getReport()),$262.agent.tryYield();for(var notified=[],i=0;i<NUMAGENT;i++)assert.sameValue(Atomics.notify(i32a,WAIT_INDEX,1),1,`Atomics.notify(i32a, WAIT_INDEX, 1) returns 1 (${i})`),notified.push($262.agent.getReport());assert.sameValue(notified.join(""),waiterlist.join(""),"notified.join('') returns waiterlist.join('')");
+  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*5));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,4,3);for(var waiterlist=[],i=0;i<3;i++)assert.sameValue(Atomics.store(i32a,1+i,1),1,`Atomics.store(i32a, SPIN + ${i}, 1) returns 1`),waiterlist.push($262.agent.getReport()),$262.agent.tryYield();for(var notified=[],i=0;i<3;i++)assert.sameValue(Atomics.notify(i32a,0,1),1,`Atomics.notify(i32a, WAIT_INDEX, 1) returns 1 (${i})`),notified.push($262.agent.getReport());assert.sameValue(notified.join(""),waiterlist.join(""),"notified.join('') returns waiterlist.join('')");␊



test262/test/built-ins/Atomics/notify/notify-one.js 104


Differences (-oxc|+esbuild):
-const WAIT_INDEX=0,RUNNING=1,NOTIFYCOUNT=1,NUMAGENT=3,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const WAIT_INDEX=0,RUNNING=1,NOTIFYCOUNT=1,NUMAGENT=3,BUFFER_SIZE=4,TIMEOUT=$262.agent.timeouts.long;for(var i=0;i<3;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 1, 1);␊
 ␊
       // Waiters that are not woken will time out eventually.␊
-      $262.agent.report(Atomics.wait(i32a, ${WAIT_INDEX}, 0, ${TIMEOUT}));␊
+      $262.agent.report(Atomics.wait(i32a, 0, 0, ${TIMEOUT}));␊
       $262.agent.leaving();␊
     });␊
-  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,NOTIFYCOUNT),NOTIFYCOUNT,"Atomics.notify(i32a, 0, NOTIFYCOUNT) returns the value of `NOTIFYCOUNT`"),$262.agent.trySleep(TIMEOUT);const reports=[];for(var i=0;i<NUMAGENT;i++)reports.push($262.agent.getReport());reports.sort();for(var i=0;i<NOTIFYCOUNT;i++)assert.sameValue(reports[i],"ok",'The value of reports[i] is "ok"');for(var i=NOTIFYCOUNT;i<NUMAGENT;i++)assert.sameValue(reports[i],"timed-out",'The value of reports[i] is "timed-out"');
+  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,3),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,1),1,"Atomics.notify(i32a, 0, NOTIFYCOUNT) returns the value of `NOTIFYCOUNT`"),$262.agent.trySleep(TIMEOUT);const reports=[];for(var i=0;i<3;i++)reports.push($262.agent.getReport());reports.sort();for(var i=0;i<1;i++)assert.sameValue(reports[i],"ok",'The value of reports[i] is "ok"');for(var i=1;i<3;i++)assert.sameValue(reports[i],"timed-out",'The value of reports[i] is "timed-out"');␊



test262/test/built-ins/Atomics/notify/count-defaults-to-infinity-undefined.js 73


Differences (-oxc|+esbuild):
-const RUNNING=0,WAIT_INDEX=1,BUFFER_SIZE=2,NUMAGENT=4;for(var i=0;i<NUMAGENT;i++)$262.agent.start(`␊
+const RUNNING=0,WAIT_INDEX=1,BUFFER_SIZE=2,NUMAGENT=4;for(var i=0;i<4;i++)$262.agent.start(`␊
     $262.agent.receiveBroadcast(function(sab) {␊
       const i32a = new Int32Array(sab);␊
-      Atomics.add(i32a, ${RUNNING}, 1);␊
+      Atomics.add(i32a, 0, 1);␊
 ␊
       // Wait until restarted by main thread.␊
-      var status = Atomics.wait(i32a, ${WAIT_INDEX}, 0);␊
+      var status = Atomics.wait(i32a, 1, 0);␊
 ␊
       // Report wait status and then exit the agent.␊
       var name = String.fromCharCode(0x41 + ${i}); // "A", "B", "C", or "D"␊
       $262.agent.report(name + " " + status);␊
       $262.agent.leaving();␊
     });␊
-  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*BUFFER_SIZE));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,WAIT_INDEX,void 0),NUMAGENT,"Atomics.notify(i32a, WAIT_INDEX, undefined) returns the value of `NUMAGENT`");const reports=[];for(var i=0;i<NUMAGENT;i++)reports.push($262.agent.getReport());reports.sort(),assert.sameValue(reports[0],"A ok",'The value of reports[0] is "A ok"'),assert.sameValue(reports[1],"B ok",'The value of reports[1] is "B ok"'),assert.sameValue(reports[2],"C ok",'The value of reports[2] is "C ok"'),assert.sameValue(reports[3],"D ok",'The value of reports[3] is "D ok"');
+  `);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*2));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,0,4),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,1,void 0),4,"Atomics.notify(i32a, WAIT_INDEX, undefined) returns the value of `NUMAGENT`");const reports=[];for(var i=0;i<4;i++)reports.push($262.agent.getReport());reports.sort(),assert.sameValue(reports[0],"A ok",'The value of reports[0] is "A ok"'),assert.sameValue(reports[1],"B ok",'The value of reports[1] is "B ok"'),assert.sameValue(reports[2],"C ok",'The value of reports[2] is "C ok"'),assert.sameValue(reports[3],"D ok",'The value of reports[3] is "D ok"');␊



test262/test/built-ins/Atomics/notify/notify-renotify-noop.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.long;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     $262.agent.report(Atomics.wait(i32a, 0, 0, ${TIMEOUT}));␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*2));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,1),1,"Atomics.notify(i32a, 0, 1) returns 1"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"'),assert.sameValue(Atomics.notify(i32a,0,1),0,"Atomics.notify(i32a, 0, 1) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*2));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,1),1,"Atomics.notify(i32a, 0, 1) returns 1"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"'),assert.sameValue(Atomics.notify(i32a,0,1),0,"Atomics.notify(i32a, 0, 1) returns 0");␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-on-xor.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),Atomics.xor(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),Atomics.xor(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-on-sub.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),Atomics.sub(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),Atomics.sub(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/false-for-timeout-agent.js 14


Differences (-oxc|+esbuild):
   };␊
 ␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const status1 = Atomics.wait(i32a, 0, 0, false);␊
     const status2 = Atomics.wait(i32a, 0, 0, valueOf);␊
     const status3 = Atomics.wait(i32a, 0, 0, toPrimitive);␊
@ ~~~
     $262.agent.report(status2);␊
     $262.agent.report(status3);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/null-for-timeout-agent.js 14


Differences (-oxc|+esbuild):
   };␊
 ␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const status1 = Atomics.wait(i32a, 0, 0, null);␊
     const status2 = Atomics.wait(i32a, 0, 0, valueOf);␊
     const status3 = Atomics.wait(i32a, 0, 0, toPrimitive);␊
@ ~~~
     $262.agent.report(status2);␊
     $262.agent.report(status3);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/was-woken-before-timeout.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.huge;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0),1,"Atomics.notify(i32a, 0) returns 1");const lapse=$262.agent.getReport();assert(lapse<TIMEOUT,"The result of `(lapse < TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"');
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0),1,"Atomics.notify(i32a, 0) returns 1");const lapse=$262.agent.getReport();assert(lapse<TIMEOUT,"The result of `(lapse < TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"');␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-on-xor.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),Atomics.xor(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),Atomics.xor(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-on-sub.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),Atomics.sub(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),Atomics.sub(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/bigint/was-woken-before-timeout.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.huge,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i64a,0),1,"Atomics.notify(i64a, 0) returns 1");const lapse=$262.agent.getReport();assert(lapse<TIMEOUT,"The result of `(lapse < TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"');
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i64a,0),1,"Atomics.notify(i64a, 0) returns 1");const lapse=$262.agent.getReport();assert(lapse<TIMEOUT,"The result of `(lapse < TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"');␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-on-and.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),Atomics.and(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),Atomics.and(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-on-compareExchange.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),Atomics.compareExchange(i64a,0,0n,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),Atomics.compareExchange(i64a,0,0n,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/bigint/value-not-equal.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,value="42n",i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     $262.agent.report(Atomics.store(i64a, 0, ${value}));␊
     $262.agent.report(Atomics.wait(i64a, 0, 0n));␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"42",'$262.agent.getReport() returns "42"'),assert.sameValue($262.agent.getReport(),"not-equal",'$262.agent.getReport() returns "not-equal"');
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"42",'$262.agent.getReport() returns "42"'),assert.sameValue($262.agent.getReport(),"not-equal",'$262.agent.getReport() returns "not-equal"');␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-on-add.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),Atomics.add(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),Atomics.add(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-no-operation.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield();const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield();const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-on-exchange.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),Atomics.exchange(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),Atomics.exchange(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-on-or.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),Atomics.or(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),Atomics.or(i64a,0,1n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/bigint/no-spurious-wakeup-on-store.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i64a=new BigInt64Array(new SharedArrayBuffer(BigInt64Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i64a = new BigInt64Array(sab);␊
-    Atomics.add(i64a, ${RUNNING}, 1n);␊
+    Atomics.add(i64a, 1, 1n);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i64a, 0, 0n, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,RUNNING,1n),$262.agent.tryYield(),Atomics.store(i64a,0,0x111111n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");
+`),$262.agent.safeBroadcast(i64a),$262.agent.waitUntil(i64a,1,1n),$262.agent.tryYield(),Atomics.store(i64a,0,0x111111n);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i64a,0),0,"Atomics.notify(i64a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/wait-index-value-not-equal.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     $262.agent.report(Atomics.wait(i32a, 0, 44, ${TIMEOUT}));␊
     $262.agent.report(Atomics.wait(i32a, 0, 251.4, ${TIMEOUT}));␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"not-equal",'$262.agent.getReport() returns "not-equal"'),assert.sameValue($262.agent.getReport(),"not-equal",'$262.agent.getReport() returns "not-equal"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"not-equal",'$262.agent.getReport() returns "not-equal"'),assert.sameValue($262.agent.getReport(),"not-equal",'$262.agent.getReport() returns "not-equal"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/symbol-for-value-throws-agent.js 14


Differences (-oxc|+esbuild):
   };␊
 ␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     let status1 = "";␊
     let status2 = "";␊
 ␊
@ ~~~
     $262.agent.report(status1);␊
     $262.agent.report(status2);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),'Symbol("1")','$262.agent.getReport() returns "Symbol("1")"'),assert.sameValue($262.agent.getReport(),'Symbol("2")','$262.agent.getReport() returns "Symbol("2")"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),'Symbol("1")','$262.agent.getReport() returns "Symbol("1")"'),assert.sameValue($262.agent.getReport(),'Symbol("2")','$262.agent.getReport() returns "Symbol("2")"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/symbol-for-index-throws-agent.js 14


Differences (-oxc|+esbuild):
   };␊
 ␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     let status1 = "";␊
     let status2 = "";␊
 ␊
@ ~~~
     $262.agent.report(status1);␊
     $262.agent.report(status2);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),'Symbol("1")','$262.agent.getReport() returns "Symbol("1")"'),assert.sameValue($262.agent.getReport(),'Symbol("2")','$262.agent.getReport() returns "Symbol("2")"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),'Symbol("1")','$262.agent.getReport() returns "Symbol("1")"'),assert.sameValue($262.agent.getReport(),'Symbol("2")','$262.agent.getReport() returns "Symbol("2")"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/object-for-timeout-agent.js 14


Differences (-oxc|+esbuild):
   };␊
 ␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const status1 = Atomics.wait(i32a, 0, 0, valueOf);␊
     const status2 = Atomics.wait(i32a, 0, 0, toString);␊
     const status3 = Atomics.wait(i32a, 0, 0, toPrimitive);␊
@ ~~~
     $262.agent.report(status2);␊
     $262.agent.report(status3);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-on-and.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),Atomics.and(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),Atomics.and(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-on-compareExchange.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),Atomics.compareExchange(i32a,0,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),Atomics.compareExchange(i32a,0,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/poisoned-object-for-timeout-throws-agent.js 14


Differences (-oxc|+esbuild):
   };␊
 ␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     let status1 = "";␊
     let status2 = "";␊
 ␊
@ ~~~
     $262.agent.report(status1);␊
     $262.agent.report(status2);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"poisonedValueOf",'$262.agent.getReport() returns "poisonedValueOf"'),assert.sameValue($262.agent.getReport(),"poisonedToPrimitive",'$262.agent.getReport() returns "poisonedToPrimitive"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"poisonedValueOf",'$262.agent.getReport() returns "poisonedValueOf"'),assert.sameValue($262.agent.getReport(),"poisonedToPrimitive",'$262.agent.getReport() returns "poisonedToPrimitive"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/negative-timeout-agent.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     var i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     $262.agent.report(Atomics.wait(i32a, 0, 0, -5)); // -5 => 0␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/value-not-equal.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1;var value=42;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     $262.agent.report(Atomics.store(i32a, 0, ${value}));␊
     $262.agent.report(Atomics.wait(i32a, 0, 0));␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),value.toString(),"$262.agent.getReport() returns value.toString()"),assert.sameValue($262.agent.getReport(),"not-equal",'$262.agent.getReport() returns "not-equal"');
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),value.toString(),"$262.agent.getReport() returns value.toString()"),assert.sameValue($262.agent.getReport(),"not-equal",'$262.agent.getReport() returns "not-equal"');␊



test262/test/language/import/import-attributes/json-named-bindings.js 9


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import{name}from"./json-named-bindings_FIXTURE.json"with{type:"json"};
+$DONOTEVALUATE();import"./json-named-bindings_FIXTURE.json"with{type:"json"};␊



test262/test/built-ins/Atomics/wait/nan-for-timeout.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     $262.agent.report(Atomics.wait(i32a, 0, 0, NaN));  // NaN => +Infinity␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0),1,"Atomics.notify(i32a, 0) returns 1"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"');
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0),1,"Atomics.notify(i32a, 0) returns 1"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"');␊



test262/test/language/import/import-attributes/json-invalid.js 10


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import value from"./json-invalid_FIXTURE.json"with{type:"json"};
+$DONOTEVALUATE();import"./json-invalid_FIXTURE.json"with{type:"json"};␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-on-add.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),Atomics.add(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),Atomics.add(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/language/comments/multi-line-asi-carriage-return.js 2


Differences (-oxc|+esbuild):
-"";"";
+"";␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-no-operation.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield();const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield();const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/language/comments/multi-line-asi-line-separator.js 2


Differences (-oxc|+esbuild):
-"";"";
+"";␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-on-exchange.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),Atomics.exchange(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),Atomics.exchange(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-on-or.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),Atomics.or(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),Atomics.or(i32a,0,1);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/true-for-timeout-agent.js 14


Differences (-oxc|+esbuild):
   };␊
 ␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const status1 = Atomics.wait(i32a, 0, 0, true);␊
     const status2 = Atomics.wait(i32a, 0, 0, valueOf);␊
     const status3 = Atomics.wait(i32a, 0, 0, toPrimitive);␊
@ ~~~
     $262.agent.report(status2);␊
     $262.agent.report(status3);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/language/comments/multi-line-asi-line-feed.js 2


Differences (-oxc|+esbuild):
-"";"";
+"";␊



test262/test/built-ins/Atomics/wait/symbol-for-timeout-throws-agent.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     let status1 = "";␊
     let status2 = "";␊
 ␊
@ ~~~
     $262.agent.report(status1);␊
     $262.agent.report(status2);␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),'Symbol("1")','$262.agent.getReport() returns "Symbol("1")"'),assert.sameValue($262.agent.getReport(),'Symbol("2")','$262.agent.getReport() returns "Symbol("2")"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue($262.agent.getReport(),'Symbol("1")','$262.agent.getReport() returns "Symbol("1")"'),assert.sameValue($262.agent.getReport(),'Symbol("2")','$262.agent.getReport() returns "Symbol("2")"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/undefined-for-timeout.js 66


Differences (-oxc|+esbuild):
 const WAIT_INDEX=0,RUNNING=1,NUMAGENT=2,NOTIFYCOUNT=2;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     var i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     // undefined => NaN => +Infinity␊
     $262.agent.report("A " + Atomics.wait(i32a, 0, 0, undefined));␊
     $262.agent.leaving();␊
   });␊
 `),$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     var i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     // undefined timeout arg => NaN => +Infinity␊
     $262.agent.report("B " + Atomics.wait(i32a, 0, 0));␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,NUMAGENT),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,WAIT_INDEX,NOTIFYCOUNT),NOTIFYCOUNT,"Atomics.notify(i32a, WAIT_INDEX, NOTIFYCOUNT) returns the value of `NOTIFYCOUNT` (2)");const reports=[];for(var i=0;i<NUMAGENT;i++)reports.push($262.agent.getReport());reports.sort(),assert.sameValue(reports[0],"A ok",'The value of reports[0] is "A ok"'),assert.sameValue(reports[1],"B ok",'The value of reports[1] is "B ok"');
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,2),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0,2),2,"Atomics.notify(i32a, WAIT_INDEX, NOTIFYCOUNT) returns the value of `NOTIFYCOUNT` (2)");const reports=[];for(var i=0;i<2;i++)reports.push($262.agent.getReport());reports.sort(),assert.sameValue(reports[0],"A ok",'The value of reports[0] is "A ok"'),assert.sameValue(reports[1],"B ok",'The value of reports[1] is "B ok"');␊



test262/test/built-ins/Atomics/wait/no-spurious-wakeup-on-store.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.small,i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     const before = $262.agent.monotonicNow();␊
     const unpark = Atomics.wait(i32a, 0, 0, ${TIMEOUT});␊
     const duration = $262.agent.monotonicNow() - before;␊
@ ~~~
     $262.agent.report(duration);␊
     $262.agent.report(unpark);␊
     $262.agent.leaving();␊
   });␊
-`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),Atomics.store(i32a,0,1118481);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");
+`),$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),Atomics.store(i32a,0,1118481);const lapse=$262.agent.getReport();assert(lapse>=TIMEOUT,"The result of `(lapse >= TIMEOUT)` is true"),assert.sameValue($262.agent.getReport(),"timed-out",'$262.agent.getReport() returns "timed-out"'),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0");␊



test262/test/built-ins/Atomics/wait/undefined-index-defaults-to-zero.js 14


Differences (-oxc|+esbuild):
 const RUNNING=1,TIMEOUT=$262.agent.timeouts.long;$262.agent.start(`␊
   $262.agent.receiveBroadcast(function(sab) {␊
     const i32a = new Int32Array(sab);␊
-    Atomics.add(i32a, ${RUNNING}, 1);␊
+    Atomics.add(i32a, 1, 1);␊
 ␊
     $262.agent.report(Atomics.wait(i32a, undefined, 0, ${TIMEOUT})); // undefined index => 0␊
     $262.agent.leaving();␊
   });␊
-`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,RUNNING,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0),1,"Atomics.notify(i32a, 0) returns 1"),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"');
+`);const i32a=new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*4));$262.agent.safeBroadcast(i32a),$262.agent.waitUntil(i32a,1,1),$262.agent.tryYield(),assert.sameValue(Atomics.notify(i32a,0),1,"Atomics.notify(i32a, 0) returns 1"),assert.sameValue(Atomics.notify(i32a,0),0,"Atomics.notify(i32a, 0) returns 0"),assert.sameValue($262.agent.getReport(),"ok",'$262.agent.getReport() returns "ok"');␊



test262/test/built-ins/Array/prototype/pop/clamps-to-integer-limit.js 8


Differences (-oxc|+esbuild):
-var arrayLike={};arrayLike.length=2**53-1,Array.prototype.pop.call(arrayLike),assert.sameValue(arrayLike.length,2**53-2,"Length is 2**53 - 1"),arrayLike.length=2**53,Array.prototype.pop.call(arrayLike),assert.sameValue(arrayLike.length,2**53-2,"Length is 2**53"),arrayLike.length=9007199254740994,Array.prototype.pop.call(arrayLike),assert.sameValue(arrayLike.length,2**53-2,"Length is 2**53 + 2"),arrayLike.length=1/0,Array.prototype.pop.call(arrayLike),assert.sameValue(arrayLike.length,2**53-2,"Length is Infinity");
+var arrayLike={};arrayLike.length=2**53-1,Array.prototype.pop.call(arrayLike),assert.sameValue(arrayLike.length,2**53-2,"Length is 2**53 - 1"),arrayLike.length=2**53,Array.prototype.pop.call(arrayLike),assert.sameValue(arrayLike.length,2**53-2,"Length is 2**53"),arrayLike.length=2**53+2,Array.prototype.pop.call(arrayLike),assert.sameValue(arrayLike.length,2**53-2,"Length is 2**53 + 2"),arrayLike.length=1/0,Array.prototype.pop.call(arrayLike),assert.sameValue(arrayLike.length,2**53-2,"Length is Infinity");␊



test262/test/language/comments/multi-line-asi-paragraph-separator.js 2


Differences (-oxc|+esbuild):
-"";"";
+"";␊



test262/test/built-ins/Temporal/PlainDateTime/prototype/since/argument-plaindate.js 15


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalPlainDateTimeFastPath((date,calendar)=>{let datetime=new Temporal.PlainDateTime(2e3,5,2,0,0,0,987,654,321,calendar),result=datetime.since(date);assert.sameValue(result.total({unit:"nanoseconds"}),987654321,"PlainDate is converted to midnight")});
+TemporalHelpers.checkToTemporalPlainDateTimeFastPath((date,calendar)=>{const result=new Temporal.PlainDateTime(2e3,5,2,0,0,0,987,654,321,calendar).since(date);assert.sameValue(result.total({unit:"nanoseconds"}),987654321,"PlainDate is converted to midnight")});␊



test262/test/built-ins/Temporal/PlainDateTime/prototype/since/roundingincrement-non-integer.js 5


Differences (-oxc|+esbuild):
-const earlier=new Temporal.PlainDateTime(2e3,5,2,12,34,56,0,0,0),later=new Temporal.PlainDateTime(2e3,5,2,12,34,56,0,0,5),result=later.since(earlier,{roundingIncrement:2.5,roundingMode:"trunc"});TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,0,0,4,"roundingIncrement 2.5 truncates to 2");const result2=later.since(earlier,{smallestUnit:"days",roundingIncrement:1000000000.5,roundingMode:"expand"});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");
+const earlier=new Temporal.PlainDateTime(2e3,5,2,12,34,56,0,0,0),later=new Temporal.PlainDateTime(2e3,5,2,12,34,56,0,0,5),result=later.since(earlier,{roundingIncrement:2.5,roundingMode:"trunc"});TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,0,0,4,"roundingIncrement 2.5 truncates to 2");const result2=later.since(earlier,{smallestUnit:"days",roundingIncrement:1e9+.5,roundingMode:"expand"});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");␊



test262/test/language/expressions/template-literal/middle-list-many-expr-abrupt.js 7


Differences (-oxc|+esbuild):
-assert.throws(Test262Error,function(){`${0}${1}${function(){throw new Test262Error}()}`});
+assert.throws(Test262Error,function(){`${function(){throw new Test262Error}()}`});␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-null.js 9


Differences (-oxc|+esbuild):
-export var name1=await null;export var{x=await null}={};
+export var name1=await null,{x=await null}={};␊



test262/test/language/expressions/template-literal/middle-list-many-expr-member-expr.js 23


Differences (-oxc|+esbuild):
-var object={number:5,string:"stringValue"};assert.sameValue(`${0} ${1} ${object.number} bar`,"0 1 5 bar","number value property"),assert.sameValue(`${0} ${1} ${object.string} bar`,"0 1 stringValue bar","string value property"),assert.sameValue(`${0} ${1} ${object.string} bar`,"0 1 stringValue bar","string value property (single-quote string dereference)"),assert.sameValue(`${0} ${1} ${object.string} bar`,"0 1 stringValue bar","string value property (double-quote string dereference)");
+var object={number:5,string:"stringValue"};assert.sameValue(`0 1 ${object.number} bar`,"0 1 5 bar","number value property"),assert.sameValue(`0 1 ${object.string} bar`,"0 1 stringValue bar","string value property"),assert.sameValue(`0 1 ${object.string} bar`,"0 1 stringValue bar","string value property (single-quote string dereference)"),assert.sameValue(`0 1 ${object.string} bar`,"0 1 stringValue bar","string value property (double-quote string dereference)");␊



test262/test/language/expressions/template-literal/middle-list-one-expr-abrupt.js 3


Differences (-oxc|+esbuild):
-assert.throws(Test262Error,function(){`${0}${function(){throw new Test262Error}()}`});
+assert.throws(Test262Error,function(){`${function(){throw new Test262Error}()}`});␊



test262/test/language/expressions/template-literal/middle-list-one-expr-member-expr.js 11


Differences (-oxc|+esbuild):
-var object={number:5,string:"stringValue"};assert.sameValue(`${0} ${object.number} bar`,"0 5 bar","number value property"),assert.sameValue(`${0} ${object.string} bar`,"0 stringValue bar","string value property"),assert.sameValue(`${0} ${object.string} bar`,"0 stringValue bar","string value property (single-quote string dereference)"),assert.sameValue(`${0} ${object.string} bar`,"0 stringValue bar","string value property (double-quote string dereference)");
+var object={number:5,string:"stringValue"};assert.sameValue(`0 ${object.number} bar`,"0 5 bar","number value property"),assert.sameValue(`0 ${object.string} bar`,"0 stringValue bar","string value property"),assert.sameValue(`0 ${object.string} bar`,"0 stringValue bar","string value property (single-quote string dereference)"),assert.sameValue(`0 ${object.string} bar`,"0 stringValue bar","string value property (double-quote string dereference)");␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-literal-number.js 9


Differences (-oxc|+esbuild):
-export var name1=await 1;export var{x=await 1}={};
+export var name1=await 1,{x=await 1}={};␊



test262/test/built-ins/Temporal/PlainDateTime/prototype/since/calendar-temporal-object.js 21


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let datetime=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321);datetime.since({year:2005,month:6,day:2,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321).since({year:2005,month:6,day:2,calendar:temporalObject})});␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-template-literal.js 9


Differences (-oxc|+esbuild):
-export var name1=await"";export var{x=await""}={};
+export var name1=await"",{x=await""}={};␊



test262/test/built-ins/Temporal/PlainDateTime/prototype/withCalendar/calendar-temporal-object.js 13


Differences (-oxc|+esbuild):
-const plainDate=new Temporal.PlainDate(2e3,5,2),plainDateTime=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321),plainMonthDay=new Temporal.PlainMonthDay(5,2),plainYearMonth=new Temporal.PlainYearMonth(2e3,5),zonedDateTime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");[plainDate,plainDateTime,plainMonthDay,plainYearMonth,zonedDateTime].forEach(arg=>{let actual=[],expected=[];Object.defineProperty(arg,"calendar",{get(){return actual.push("get calendar"),calendar}});let instance=new Temporal.PlainDateTime(1976,11,18,15,23,30,123,456,789,"iso8601"),result=instance.withCalendar(arg);assert.sameValue(result.calendarId,"iso8601","Temporal object coerced to calendar"),assert.compareArray(actual,expected,"calendar getter not called")});
+const plainDate=new Temporal.PlainDate(2e3,5,2),plainDateTime=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321),plainMonthDay=new Temporal.PlainMonthDay(5,2),plainYearMonth=new Temporal.PlainYearMonth(2e3,5),zonedDateTime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");[plainDate,plainDateTime,plainMonthDay,plainYearMonth,zonedDateTime].forEach(arg=>{const actual=[],expected=[];Object.defineProperty(arg,"calendar",{get(){return actual.push("get calendar"),calendar}});const result=new Temporal.PlainDateTime(1976,11,18,15,23,30,123,456,789,"iso8601").withCalendar(arg);assert.sameValue(result.calendarId,"iso8601","Temporal object coerced to calendar"),assert.compareArray(actual,expected,"calendar getter not called")});␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-new-expr.js 9


Differences (-oxc|+esbuild):
-export var name1=await new Promise(function(res,rej){res(1)});export var{x=await new Promise(function(res,rej){res(1)})}={};
+export var name1=await new Promise(function(res,rej){res(1)}),{x=await new Promise(function(res,rej){res(1)})}={};␊



test262/test/built-ins/Temporal/PlainDateTime/prototype/until/argument-plaindate.js 15


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalPlainDateTimeFastPath(date=>{let datetime=new Temporal.PlainDateTime(2e3,5,2,0,0,0,987,654,321,"iso8601"),result=datetime.until(date);assert.sameValue(result.total({unit:"nanoseconds"}),-987654321,"PlainDate is converted to midnight")});
+TemporalHelpers.checkToTemporalPlainDateTimeFastPath(date=>{const result=new Temporal.PlainDateTime(2e3,5,2,0,0,0,987,654,321,"iso8601").until(date);assert.sameValue(result.total({unit:"nanoseconds"}),-987654321,"PlainDate is converted to midnight")});␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-regexp.js 9


Differences (-oxc|+esbuild):
-export var name1=await/1/;export var{x=await/1/}={};
+export var name1=await/1/,{x=await/1/}={};␊



test262/test/built-ins/Temporal/PlainDateTime/prototype/until/roundingincrement-non-integer.js 5


Differences (-oxc|+esbuild):
-const earlier=new Temporal.PlainDateTime(2e3,5,2,12,34,56,0,0,0),later=new Temporal.PlainDateTime(2e3,5,2,12,34,56,0,0,5),result=earlier.until(later,{roundingIncrement:2.5,roundingMode:"trunc"});TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,0,0,4,"roundingIncrement 2.5 truncates to 2");const result2=earlier.until(later,{smallestUnit:"days",roundingIncrement:1000000000.5,roundingMode:"expand"});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");
+const earlier=new Temporal.PlainDateTime(2e3,5,2,12,34,56,0,0,0),later=new Temporal.PlainDateTime(2e3,5,2,12,34,56,0,0,5),result=earlier.until(later,{roundingIncrement:2.5,roundingMode:"trunc"});TemporalHelpers.assertDuration(result,0,0,0,0,0,0,0,0,0,4,"roundingIncrement 2.5 truncates to 2");const result2=earlier.until(later,{smallestUnit:"days",roundingIncrement:1e9+.5,roundingMode:"expand"});TemporalHelpers.assertDuration(result2,0,0,0,1e9,0,0,0,0,0,0,"roundingIncrement 1e9 + 0.5 truncates to 1e9");␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-array-literal.js 9


Differences (-oxc|+esbuild):
-export var name1=await[];export var{x=await[]}={};
+export var name1=await[],{x=await[]}={};␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-nested.js 9


Differences (-oxc|+esbuild):
-export var name1=await await await await await await await await await await await await await await await"await";export var{x=await await await await await await await await await await await await await await await"await"}={};
+export var name1=await await await await await await await await await await await await await await await"await",{x=await await await await await await await await await await await await await await await"await"}={};␊



test262/test/built-ins/Array/prototype/with/index-bigger-or-eq-than-length.js 8


Differences (-oxc|+esbuild):
-assert.throws(RangeError,function(){[0,1,2].with(3,7)}),assert.throws(RangeError,function(){[0,1,2].with(10,7)}),assert.throws(RangeError,function(){[0,1,2].with(9007199254740994,7)}),assert.throws(RangeError,function(){[0,1,2].with(1/0,7)});
+assert.throws(RangeError,function(){[0,1,2].with(3,7)}),assert.throws(RangeError,function(){[0,1,2].with(10,7)}),assert.throws(RangeError,function(){[0,1,2].with(2**53+2,7)}),assert.throws(RangeError,function(){[0,1,2].with(1/0,7)});␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-func-expression.js 9


Differences (-oxc|+esbuild):
-export var name1=await function(){};export var{x=await function(){}}={};
+export var name1=await function(){},{x=await function(){}}={};␊



test262/test/built-ins/Temporal/PlainDateTime/prototype/until/calendar-temporal-object.js 13


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let date=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321);date.until({year:2005,month:6,day:2,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321).until({year:2005,month:6,day:2,calendar:temporalObject})});␊



test262/test/language/module-code/import-attributes/import-attribute-trlng-comma.js 7


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import x from"./import-attribute-1_FIXTURE.js"with{test262:""};import"./import-attribute-2_FIXTURE.js"with{test262:""};export*from"./import-attribute-3_FIXTURE.js" with{test262:""};
+$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import"./import-attribute-1_FIXTURE.js"with{test262:""};import"./import-attribute-2_FIXTURE.js"with{test262:""};export*from"./import-attribute-3_FIXTURE.js"with{test262:""};␊



test262/test/language/module-code/import-attributes/import-attribute-value-string-double.js 7


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import x from"./import-attribute-1_FIXTURE.js"with{test262:"x"};import"./import-attribute-2_FIXTURE.js"with{test262:"x"};export*from"./import-attribute-3_FIXTURE.js" with{test262:"x"};
+$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import"./import-attribute-1_FIXTURE.js"with{test262:"x"};import"./import-attribute-2_FIXTURE.js"with{test262:"x"};export*from"./import-attribute-3_FIXTURE.js"with{test262:"x"};␊



test262/test/language/module-code/import-attributes/import-attribute-key-string-single.js 6


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import x from"./import-attribute-1_FIXTURE.js"with{"test262x":""};import"./import-attribute-2_FIXTURE.js"with{"test262x":""};export*from"./import-attribute-3_FIXTURE.js" with{"test262x":""};assert.sameValue(x,262.1);
+$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import x from"./import-attribute-1_FIXTURE.js"with{test262x:""};import"./import-attribute-2_FIXTURE.js"with{test262x:""};export*from"./import-attribute-3_FIXTURE.js"with{test262x:""};assert.sameValue(x,262.1);␊



test262/test/language/module-code/import-attributes/allow-nlt-before-with.js 9


Differences (-oxc|+esbuild):
-throw"Test262: This statement should not be evaluated.";import"../resources/ensure-linking-error_FIXTURE.js";import*as x from"./import-attribute-1_FIXTURE.js"with{};
+throw"Test262: This statement should not be evaluated.";import"../resources/ensure-linking-error_FIXTURE.js";import"./import-attribute-1_FIXTURE.js"with{};␊



test262/test/language/module-code/import-attributes/import-attribute-value-string-single.js 7


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import x from"./import-attribute-1_FIXTURE.js"with{test262:"x"};import"./import-attribute-2_FIXTURE.js"with{test262:"x"};export*from"./import-attribute-3_FIXTURE.js" with{test262:"x"};
+$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import"./import-attribute-1_FIXTURE.js"with{test262:"x"};import"./import-attribute-2_FIXTURE.js"with{test262:"x"};export*from"./import-attribute-3_FIXTURE.js"with{test262:"x"};␊



test262/test/built-ins/Temporal/PlainDateTime/prototype/equals/calendar-temporal-object.js 21


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let datetime=new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321);datetime.equals({year:2005,month:6,day:2,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainDateTime(2e3,5,2,12,34,56,987,654,321).equals({year:2005,month:6,day:2,calendar:temporalObject})});␊



test262/test/language/module-code/import-attributes/import-attribute-many.js 7


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import x from"./import-attribute-1_FIXTURE.js"with{test262_1:"",test262_2:"",test262_3:"",test262_4:""};import"./import-attribute-2_FIXTURE.js"with{test262_1:"",test262_2:"",test262_3:"",test262_4:""};export*from"./import-attribute-3_FIXTURE.js" with{test262_1:"",test262_2:"",test262_3:"",test262_4:""};
+$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import"./import-attribute-1_FIXTURE.js"with{test262_1:"",test262_2:"",test262_3:"",test262_4:""};import"./import-attribute-2_FIXTURE.js"with{test262_1:"",test262_2:"",test262_3:"",test262_4:""};export*from"./import-attribute-3_FIXTURE.js"with{test262_1:"",test262_2:"",test262_3:"",test262_4:""};␊



test262/test/language/module-code/import-attributes/import-attribute-key-string-double.js 6


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import x from"./import-attribute-1_FIXTURE.js"with{"test262x":""};import"./import-attribute-2_FIXTURE.js"with{"test262x":""};export*from"./import-attribute-3_FIXTURE.js" with{"test262x":""};assert.sameValue(x,262.1);
+$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import x from"./import-attribute-1_FIXTURE.js"with{test262x:""};import"./import-attribute-2_FIXTURE.js"with{test262x:""};export*from"./import-attribute-3_FIXTURE.js"with{test262x:""};assert.sameValue(x,262.1);␊



test262/test/language/module-code/instn-named-err-ambiguous-as.js 11


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import{x as y}from"./instn-named-err-ambiguous_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-named-err-ambiguous_FIXTURE.js";␊



test262/test/built-ins/Array/prototype/sort/stability-513-elements.js 27


Differences (-oxc|+esbuild):
-const array=[{name:"A00",rating:2},{name:"A01",rating:2},{name:"A02",rating:2},{name:"A03",rating:2},{name:"A04",rating:2},{name:"A05",rating:2},{name:"A06",rating:2},{name:"A07",rating:2},{name:"A08",rating:2},{name:"A09",rating:2},{name:"A10",rating:2},{name:"A11",rating:2},{name:"A12",rating:2},{name:"A13",rating:2},{name:"A14",rating:2},{name:"A15",rating:2},{name:"A16",rating:2},{name:"A17",rating:2},{name:"A18",rating:2},{name:"A19",rating:2},{name:"A20",rating:2},{name:"A21",rating:2},{name:"A22",rating:2},{name:"A23",rating:2},{name:"A24",rating:2},{name:"A25",rating:2},{name:"A26",rating:2},{name:"A27",rating:2},{name:"A28",rating:2},{name:"A29",rating:2},{name:"A30",rating:2},{name:"A31",rating:2},{name:"A32",rating:2},{name:"A33",rating:2},{name:"A34",rating:2},{name:"A35",rating:2},{name:"A36",rating:2},{name:"A37",rating:2},{name:"A38",rating:2},{name:"A39",rating:2},{name:"A40",rating:2},{name:"A41",rating:2},{name:"A42",rating:2},{name:"A43",rating:2},{name:"A44",rating:2},{name:"A45",rating:2},{name:"A46",rating:2},{name:"B00",rating:3},{name:"B01",rating:3},{name:"B02",rating:3},{name:"B03",rating:3},{name:"B04",rating:3},{name:"B05",rating:3},{name:"B06",rating:3},{name:"B07",rating:3},{name:"B08",rating:3},{name:"B09",rating:3},{name:"B10",rating:3},{name:"B11",rating:3},{name:"B12",rating:3},{name:"B13",rating:3},{name:"B14",rating:3},{name:"B15",rating:3},{name:"B16",rating:3},{name:"B17",rating:3},{name:"B18",rating:3},{name:"B19",rating:3},{name:"B20",rating:3},{name:"B21",rating:3},{name:"B22",rating:3},{name:"B23",rating:3},{name:"B24",rating:3},{name:"B25",rating:3},{name:"B26",rating:3},{name:"B27",rating:3},{name:"B28",rating:3},{name:"B29",rating:3},{name:"B30",rating:3},{name:"B31",rating:3},{name:"B32",rating:3},{name:"B33",rating:3},{name:"B34",rating:3},{name:"B35",rating:3},{name:"B36",rating:3},{name:"B37",rating:3},{name:"B38",rating:3},{name:"B39",rating:3},{name:"B40",rating:3},{name:"B41",rating:3},{name:"B42",rating:3},{name:"B43",rating:3},{name:"B44",rating:3},{name:"B45",rating:3},{name:"B46",rating:3},{name:"C00",rating:2},{name:"C01",rating:2},{name:"C02",rating:2},{name:"C03",rating:2},{name:"C04",rating:2},{name:"C05",rating:2},{name:"C06",rating:2},{name:"C07",rating:2},{name:"C08",rating:2},{name:"C09",rating:2},{name:"C10",rating:2},{name:"C11",rating:2},{name:"C12",rating:2},{name:"C13",rating:2},{name:"C14",rating:2},{name:"C15",rating:2},{name:"C16",rating:2},{name:"C17",rating:2},{name:"C18",rating:2},{name:"C19",rating:2},{name:"C20",rating:2},{name:"C21",rating:2},{name:"C22",rating:2},{name:"C23",rating:2},{name:"C24",rating:2},{name:"C25",rating:2},{name:"C26",rating:2},{name:"C27",rating:2},{name:"C28",rating:2},{name:"C29",rating:2},{name:"C30",rating:2},{name:"C31",rating:2},{name:"C32",rating:2},{name:"C33",rating:2},{name:"C34",rating:2},{name:"C35",rating:2},{name:"C36",rating:2},{name:"C37",rating:2},{name:"C38",rating:2},{name:"C39",rating:2},{name:"C40",rating:2},{name:"C41",rating:2},{name:"C42",rating:2},{name:"C43",rating:2},{name:"C44",rating:2},{name:"C45",rating:2},{name:"C46",rating:2},{name:"D00",rating:4},{name:"D01",rating:4},{name:"D02",rating:4},{name:"D03",rating:4},{name:"D04",rating:4},{name:"D05",rating:4},{name:"D06",rating:4},{name:"D07",rating:4},{name:"D08",rating:4},{name:"D09",rating:4},{name:"D10",rating:4},{name:"D11",rating:4},{name:"D12",rating:4},{name:"D13",rating:4},{name:"D14",rating:4},{name:"D15",rating:4},{name:"D16",rating:4},{name:"D17",rating:4},{name:"D18",rating:4},{name:"D19",rating:4},{name:"D20",rating:4},{name:"D21",rating:4},{name:"D22",rating:4},{name:"D23",rating:4},{name:"D24",rating:4},{name:"D25",rating:4},{name:"D26",rating:4},{name:"D27",rating:4},{name:"D28",rating:4},{name:"D29",rating:4},{name:"D30",rating:4},{name:"D31",rating:4},{name:"D32",rating:4},{name:"D33",rating:4},{name:"D34",rating:4},{name:"D35",rating:4},{name:"D36",rating:4},{name:"D37",rating:4},{name:"D38",rating:4},{name:"D39",rating:4},{name:"D40",rating:4},{name:"D41",rating:4},{name:"D42",rating:4},{name:"D43",rating:4},{name:"D44",rating:4},{name:"D45",rating:4},{name:"D46",rating:4},{name:"E00",rating:3},{name:"E01",rating:3},{name:"E02",rating:3},{name:"E03",rating:3},{name:"E04",rating:3},{name:"E05",rating:3},{name:"E06",rating:3},{name:"E07",rating:3},{name:"E08",rating:3},{name:"E09",rating:3},{name:"E10",rating:3},{name:"E11",rating:3},{name:"E12",rating:3},{name:"E13",rating:3},{name:"E14",rating:3},{name:"E15",rating:3},{name:"E16",rating:3},{name:"E17",rating:3},{name:"E18",rating:3},{name:"E19",rating:3},{name:"E20",rating:3},{name:"E21",rating:3},{name:"E22",rating:3},{name:"E23",rating:3},{name:"E24",rating:3},{name:"E25",rating:3},{name:"E26",rating:3},{name:"E27",rating:3},{name:"E28",rating:3},{name:"E29",rating:3},{name:"E30",rating:3},{name:"E31",rating:3},{name:"E32",rating:3},{name:"E33",rating:3},{name:"E34",rating:3},{name:"E35",rating:3},{name:"E36",rating:3},{name:"E37",rating:3},{name:"E38",rating:3},{name:"E39",rating:3},{name:"E40",rating:3},{name:"E41",rating:3},{name:"E42",rating:3},{name:"E43",rating:3},{name:"E44",rating:3},{name:"E45",rating:3},{name:"E46",rating:3},{name:"F00",rating:3},{name:"F01",rating:3},{name:"F02",rating:3},{name:"F03",rating:3},{name:"F04",rating:3},{name:"F05",rating:3},{name:"F06",rating:3},{name:"F07",rating:3},{name:"F08",rating:3},{name:"F09",rating:3},{name:"F10",rating:3},{name:"F11",rating:3},{name:"F12",rating:3},{name:"F13",rating:3},{name:"F14",rating:3},{name:"F15",rating:3},{name:"F16",rating:3},{name:"F17",rating:3},{name:"F18",rating:3},{name:"F19",rating:3},{name:"F20",rating:3},{name:"F21",rating:3},{name:"F22",rating:3},{name:"F23",rating:3},{name:"F24",rating:3},{name:"F25",rating:3},{name:"F26",rating:3},{name:"F27",rating:3},{name:"F28",rating:3},{name:"F29",rating:3},{name:"F30",rating:3},{name:"F31",rating:3},{name:"F32",rating:3},{name:"F33",rating:3},{name:"F34",rating:3},{name:"F35",rating:3},{name:"F36",rating:3},{name:"F37",rating:3},{name:"F38",rating:3},{name:"F39",rating:3},{name:"F40",rating:3},{name:"F41",rating:3},{name:"F42",rating:3},{name:"F43",rating:3},{name:"F44",rating:3},{name:"F45",rating:3},{name:"F46",rating:3},{name:"G00",rating:4},{name:"G01",rating:4},{name:"G02",rating:4},{name:"G03",rating:4},{name:"G04",rating:4},{name:"G05",rating:4},{name:"G06",rating:4},{name:"G07",rating:4},{name:"G08",rating:4},{name:"G09",rating:4},{name:"G10",rating:4},{name:"G11",rating:4},{name:"G12",rating:4},{name:"G13",rating:4},{name:"G14",rating:4},{name:"G15",rating:4},{name:"G16",rating:4},{name:"G17",rating:4},{name:"G18",rating:4},{name:"G19",rating:4},{name:"G20",rating:4},{name:"G21",rating:4},{name:"G22",rating:4},{name:"G23",rating:4},{name:"G24",rating:4},{name:"G25",rating:4},{name:"G26",rating:4},{name:"G27",rating:4},{name:"G28",rating:4},{name:"G29",rating:4},{name:"G30",rating:4},{name:"G31",rating:4},{name:"G32",rating:4},{name:"G33",rating:4},{name:"G34",rating:4},{name:"G35",rating:4},{name:"G36",rating:4},{name:"G37",rating:4},{name:"G38",rating:4},{name:"G39",rating:4},{name:"G40",rating:4},{name:"G41",rating:4},{name:"G42",rating:4},{name:"G43",rating:4},{name:"G44",rating:4},{name:"G45",rating:4},{name:"G46",rating:4},{name:"H00",rating:3},{name:"H01",rating:3},{name:"H02",rating:3},{name:"H03",rating:3},{name:"H04",rating:3},{name:"H05",rating:3},{name:"H06",rating:3},{name:"H07",rating:3},{name:"H08",rating:3},{name:"H09",rating:3},{name:"H10",rating:3},{name:"H11",rating:3},{name:"H12",rating:3},{name:"H13",rating:3},{name:"H14",rating:3},{name:"H15",rating:3},{name:"H16",rating:3},{name:"H17",rating:3},{name:"H18",rating:3},{name:"H19",rating:3},{name:"H20",rating:3},{name:"H21",rating:3},{name:"H22",rating:3},{name:"H23",rating:3},{name:"H24",rating:3},{name:"H25",rating:3},{name:"H26",rating:3},{name:"H27",rating:3},{name:"H28",rating:3},{name:"H29",rating:3},{name:"H30",rating:3},{name:"H31",rating:3},{name:"H32",rating:3},{name:"H33",rating:3},{name:"H34",rating:3},{name:"H35",rating:3},{name:"H36",rating:3},{name:"H37",rating:3},{name:"H38",rating:3},{name:"H39",rating:3},{name:"H40",rating:3},{name:"H41",rating:3},{name:"H42",rating:3},{name:"H43",rating:3},{name:"H44",rating:3},{name:"H45",rating:3},{name:"H46",rating:3},{name:"I00",rating:2},{name:"I01",rating:2},{name:"I02",rating:2},{name:"I03",rating:2},{name:"I04",rating:2},{name:"I05",rating:2},{name:"I06",rating:2},{name:"I07",rating:2},{name:"I08",rating:2},{name:"I09",rating:2},{name:"I10",rating:2},{name:"I11",rating:2},{name:"I12",rating:2},{name:"I13",rating:2},{name:"I14",rating:2},{name:"I15",rating:2},{name:"I16",rating:2},{name:"I17",rating:2},{name:"I18",rating:2},{name:"I19",rating:2},{name:"I20",rating:2},{name:"I21",rating:2},{name:"I22",rating:2},{name:"I23",rating:2},{name:"I24",rating:2},{name:"I25",rating:2},{name:"I26",rating:2},{name:"I27",rating:2},{name:"I28",rating:2},{name:"I29",rating:2},{name:"I30",rating:2},{name:"I31",rating:2},{name:"I32",rating:2},{name:"I33",rating:2},{name:"I34",rating:2},{name:"I35",rating:2},{name:"I36",rating:2},{name:"I37",rating:2},{name:"I38",rating:2},{name:"I39",rating:2},{name:"I40",rating:2},{name:"I41",rating:2},{name:"I42",rating:2},{name:"I43",rating:2},{name:"I44",rating:2},{name:"I45",rating:2},{name:"I46",rating:2},{name:"J00",rating:2},{name:"J01",rating:2},{name:"J02",rating:2},{name:"J03",rating:2},{name:"J04",rating:2},{name:"J05",rating:2},{name:"J06",rating:2},{name:"J07",rating:2},{name:"J08",rating:2},{name:"J09",rating:2},{name:"J10",rating:2},{name:"J11",rating:2},{name:"J12",rating:2},{name:"J13",rating:2},{name:"J14",rating:2},{name:"J15",rating:2},{name:"J16",rating:2},{name:"J17",rating:2},{name:"J18",rating:2},{name:"J19",rating:2},{name:"J20",rating:2},{name:"J21",rating:2},{name:"J22",rating:2},{name:"J23",rating:2},{name:"J24",rating:2},{name:"J25",rating:2},{name:"J26",rating:2},{name:"J27",rating:2},{name:"J28",rating:2},{name:"J29",rating:2},{name:"J30",rating:2},{name:"J31",rating:2},{name:"J32",rating:2},{name:"J33",rating:2},{name:"J34",rating:2},{name:"J35",rating:2},{name:"J36",rating:2},{name:"J37",rating:2},{name:"J38",rating:2},{name:"J39",rating:2},{name:"J40",rating:2},{name:"J41",rating:2},{name:"J42",rating:2},{name:"J43",rating:2},{name:"J44",rating:2},{name:"J45",rating:2},{name:"J46",rating:2},{name:"K00",rating:2},{name:"K01",rating:2},{name:"K02",rating:2},{name:"K03",rating:2},{name:"K04",rating:2},{name:"K05",rating:2},{name:"K06",rating:2},{name:"K07",rating:2},{name:"K08",rating:2},{name:"K09",rating:2},{name:"K10",rating:2},{name:"K11",rating:2},{name:"K12",rating:2},{name:"K13",rating:2},{name:"K14",rating:2},{name:"K15",rating:2},{name:"K16",rating:2},{name:"K17",rating:2},{name:"K18",rating:2},{name:"K19",rating:2},{name:"K20",rating:2},{name:"K21",rating:2},{name:"K22",rating:2},{name:"K23",rating:2},{name:"K24",rating:2},{name:"K25",rating:2},{name:"K26",rating:2},{name:"K27",rating:2},{name:"K28",rating:2},{name:"K29",rating:2},{name:"K30",rating:2},{name:"K31",rating:2},{name:"K32",rating:2},{name:"K33",rating:2},{name:"K34",rating:2},{name:"K35",rating:2},{name:"K36",rating:2},{name:"K37",rating:2},{name:"K38",rating:2},{name:"K39",rating:2},{name:"K40",rating:2},{name:"K41",rating:2},{name:"K42",rating:2}];assert.sameValue(array.length,513),array.sort((a,b)=>b.rating-a.rating);const reduced=array.reduce((acc,element)=>{let letter=element.name.slice(0,1),previousLetter=acc.slice(-1);return previousLetter===letter?acc:acc+letter},"");assert.sameValue(reduced,"DGBEFHACIJK");
+const array=[{name:"A00",rating:2},{name:"A01",rating:2},{name:"A02",rating:2},{name:"A03",rating:2},{name:"A04",rating:2},{name:"A05",rating:2},{name:"A06",rating:2},{name:"A07",rating:2},{name:"A08",rating:2},{name:"A09",rating:2},{name:"A10",rating:2},{name:"A11",rating:2},{name:"A12",rating:2},{name:"A13",rating:2},{name:"A14",rating:2},{name:"A15",rating:2},{name:"A16",rating:2},{name:"A17",rating:2},{name:"A18",rating:2},{name:"A19",rating:2},{name:"A20",rating:2},{name:"A21",rating:2},{name:"A22",rating:2},{name:"A23",rating:2},{name:"A24",rating:2},{name:"A25",rating:2},{name:"A26",rating:2},{name:"A27",rating:2},{name:"A28",rating:2},{name:"A29",rating:2},{name:"A30",rating:2},{name:"A31",rating:2},{name:"A32",rating:2},{name:"A33",rating:2},{name:"A34",rating:2},{name:"A35",rating:2},{name:"A36",rating:2},{name:"A37",rating:2},{name:"A38",rating:2},{name:"A39",rating:2},{name:"A40",rating:2},{name:"A41",rating:2},{name:"A42",rating:2},{name:"A43",rating:2},{name:"A44",rating:2},{name:"A45",rating:2},{name:"A46",rating:2},{name:"B00",rating:3},{name:"B01",rating:3},{name:"B02",rating:3},{name:"B03",rating:3},{name:"B04",rating:3},{name:"B05",rating:3},{name:"B06",rating:3},{name:"B07",rating:3},{name:"B08",rating:3},{name:"B09",rating:3},{name:"B10",rating:3},{name:"B11",rating:3},{name:"B12",rating:3},{name:"B13",rating:3},{name:"B14",rating:3},{name:"B15",rating:3},{name:"B16",rating:3},{name:"B17",rating:3},{name:"B18",rating:3},{name:"B19",rating:3},{name:"B20",rating:3},{name:"B21",rating:3},{name:"B22",rating:3},{name:"B23",rating:3},{name:"B24",rating:3},{name:"B25",rating:3},{name:"B26",rating:3},{name:"B27",rating:3},{name:"B28",rating:3},{name:"B29",rating:3},{name:"B30",rating:3},{name:"B31",rating:3},{name:"B32",rating:3},{name:"B33",rating:3},{name:"B34",rating:3},{name:"B35",rating:3},{name:"B36",rating:3},{name:"B37",rating:3},{name:"B38",rating:3},{name:"B39",rating:3},{name:"B40",rating:3},{name:"B41",rating:3},{name:"B42",rating:3},{name:"B43",rating:3},{name:"B44",rating:3},{name:"B45",rating:3},{name:"B46",rating:3},{name:"C00",rating:2},{name:"C01",rating:2},{name:"C02",rating:2},{name:"C03",rating:2},{name:"C04",rating:2},{name:"C05",rating:2},{name:"C06",rating:2},{name:"C07",rating:2},{name:"C08",rating:2},{name:"C09",rating:2},{name:"C10",rating:2},{name:"C11",rating:2},{name:"C12",rating:2},{name:"C13",rating:2},{name:"C14",rating:2},{name:"C15",rating:2},{name:"C16",rating:2},{name:"C17",rating:2},{name:"C18",rating:2},{name:"C19",rating:2},{name:"C20",rating:2},{name:"C21",rating:2},{name:"C22",rating:2},{name:"C23",rating:2},{name:"C24",rating:2},{name:"C25",rating:2},{name:"C26",rating:2},{name:"C27",rating:2},{name:"C28",rating:2},{name:"C29",rating:2},{name:"C30",rating:2},{name:"C31",rating:2},{name:"C32",rating:2},{name:"C33",rating:2},{name:"C34",rating:2},{name:"C35",rating:2},{name:"C36",rating:2},{name:"C37",rating:2},{name:"C38",rating:2},{name:"C39",rating:2},{name:"C40",rating:2},{name:"C41",rating:2},{name:"C42",rating:2},{name:"C43",rating:2},{name:"C44",rating:2},{name:"C45",rating:2},{name:"C46",rating:2},{name:"D00",rating:4},{name:"D01",rating:4},{name:"D02",rating:4},{name:"D03",rating:4},{name:"D04",rating:4},{name:"D05",rating:4},{name:"D06",rating:4},{name:"D07",rating:4},{name:"D08",rating:4},{name:"D09",rating:4},{name:"D10",rating:4},{name:"D11",rating:4},{name:"D12",rating:4},{name:"D13",rating:4},{name:"D14",rating:4},{name:"D15",rating:4},{name:"D16",rating:4},{name:"D17",rating:4},{name:"D18",rating:4},{name:"D19",rating:4},{name:"D20",rating:4},{name:"D21",rating:4},{name:"D22",rating:4},{name:"D23",rating:4},{name:"D24",rating:4},{name:"D25",rating:4},{name:"D26",rating:4},{name:"D27",rating:4},{name:"D28",rating:4},{name:"D29",rating:4},{name:"D30",rating:4},{name:"D31",rating:4},{name:"D32",rating:4},{name:"D33",rating:4},{name:"D34",rating:4},{name:"D35",rating:4},{name:"D36",rating:4},{name:"D37",rating:4},{name:"D38",rating:4},{name:"D39",rating:4},{name:"D40",rating:4},{name:"D41",rating:4},{name:"D42",rating:4},{name:"D43",rating:4},{name:"D44",rating:4},{name:"D45",rating:4},{name:"D46",rating:4},{name:"E00",rating:3},{name:"E01",rating:3},{name:"E02",rating:3},{name:"E03",rating:3},{name:"E04",rating:3},{name:"E05",rating:3},{name:"E06",rating:3},{name:"E07",rating:3},{name:"E08",rating:3},{name:"E09",rating:3},{name:"E10",rating:3},{name:"E11",rating:3},{name:"E12",rating:3},{name:"E13",rating:3},{name:"E14",rating:3},{name:"E15",rating:3},{name:"E16",rating:3},{name:"E17",rating:3},{name:"E18",rating:3},{name:"E19",rating:3},{name:"E20",rating:3},{name:"E21",rating:3},{name:"E22",rating:3},{name:"E23",rating:3},{name:"E24",rating:3},{name:"E25",rating:3},{name:"E26",rating:3},{name:"E27",rating:3},{name:"E28",rating:3},{name:"E29",rating:3},{name:"E30",rating:3},{name:"E31",rating:3},{name:"E32",rating:3},{name:"E33",rating:3},{name:"E34",rating:3},{name:"E35",rating:3},{name:"E36",rating:3},{name:"E37",rating:3},{name:"E38",rating:3},{name:"E39",rating:3},{name:"E40",rating:3},{name:"E41",rating:3},{name:"E42",rating:3},{name:"E43",rating:3},{name:"E44",rating:3},{name:"E45",rating:3},{name:"E46",rating:3},{name:"F00",rating:3},{name:"F01",rating:3},{name:"F02",rating:3},{name:"F03",rating:3},{name:"F04",rating:3},{name:"F05",rating:3},{name:"F06",rating:3},{name:"F07",rating:3},{name:"F08",rating:3},{name:"F09",rating:3},{name:"F10",rating:3},{name:"F11",rating:3},{name:"F12",rating:3},{name:"F13",rating:3},{name:"F14",rating:3},{name:"F15",rating:3},{name:"F16",rating:3},{name:"F17",rating:3},{name:"F18",rating:3},{name:"F19",rating:3},{name:"F20",rating:3},{name:"F21",rating:3},{name:"F22",rating:3},{name:"F23",rating:3},{name:"F24",rating:3},{name:"F25",rating:3},{name:"F26",rating:3},{name:"F27",rating:3},{name:"F28",rating:3},{name:"F29",rating:3},{name:"F30",rating:3},{name:"F31",rating:3},{name:"F32",rating:3},{name:"F33",rating:3},{name:"F34",rating:3},{name:"F35",rating:3},{name:"F36",rating:3},{name:"F37",rating:3},{name:"F38",rating:3},{name:"F39",rating:3},{name:"F40",rating:3},{name:"F41",rating:3},{name:"F42",rating:3},{name:"F43",rating:3},{name:"F44",rating:3},{name:"F45",rating:3},{name:"F46",rating:3},{name:"G00",rating:4},{name:"G01",rating:4},{name:"G02",rating:4},{name:"G03",rating:4},{name:"G04",rating:4},{name:"G05",rating:4},{name:"G06",rating:4},{name:"G07",rating:4},{name:"G08",rating:4},{name:"G09",rating:4},{name:"G10",rating:4},{name:"G11",rating:4},{name:"G12",rating:4},{name:"G13",rating:4},{name:"G14",rating:4},{name:"G15",rating:4},{name:"G16",rating:4},{name:"G17",rating:4},{name:"G18",rating:4},{name:"G19",rating:4},{name:"G20",rating:4},{name:"G21",rating:4},{name:"G22",rating:4},{name:"G23",rating:4},{name:"G24",rating:4},{name:"G25",rating:4},{name:"G26",rating:4},{name:"G27",rating:4},{name:"G28",rating:4},{name:"G29",rating:4},{name:"G30",rating:4},{name:"G31",rating:4},{name:"G32",rating:4},{name:"G33",rating:4},{name:"G34",rating:4},{name:"G35",rating:4},{name:"G36",rating:4},{name:"G37",rating:4},{name:"G38",rating:4},{name:"G39",rating:4},{name:"G40",rating:4},{name:"G41",rating:4},{name:"G42",rating:4},{name:"G43",rating:4},{name:"G44",rating:4},{name:"G45",rating:4},{name:"G46",rating:4},{name:"H00",rating:3},{name:"H01",rating:3},{name:"H02",rating:3},{name:"H03",rating:3},{name:"H04",rating:3},{name:"H05",rating:3},{name:"H06",rating:3},{name:"H07",rating:3},{name:"H08",rating:3},{name:"H09",rating:3},{name:"H10",rating:3},{name:"H11",rating:3},{name:"H12",rating:3},{name:"H13",rating:3},{name:"H14",rating:3},{name:"H15",rating:3},{name:"H16",rating:3},{name:"H17",rating:3},{name:"H18",rating:3},{name:"H19",rating:3},{name:"H20",rating:3},{name:"H21",rating:3},{name:"H22",rating:3},{name:"H23",rating:3},{name:"H24",rating:3},{name:"H25",rating:3},{name:"H26",rating:3},{name:"H27",rating:3},{name:"H28",rating:3},{name:"H29",rating:3},{name:"H30",rating:3},{name:"H31",rating:3},{name:"H32",rating:3},{name:"H33",rating:3},{name:"H34",rating:3},{name:"H35",rating:3},{name:"H36",rating:3},{name:"H37",rating:3},{name:"H38",rating:3},{name:"H39",rating:3},{name:"H40",rating:3},{name:"H41",rating:3},{name:"H42",rating:3},{name:"H43",rating:3},{name:"H44",rating:3},{name:"H45",rating:3},{name:"H46",rating:3},{name:"I00",rating:2},{name:"I01",rating:2},{name:"I02",rating:2},{name:"I03",rating:2},{name:"I04",rating:2},{name:"I05",rating:2},{name:"I06",rating:2},{name:"I07",rating:2},{name:"I08",rating:2},{name:"I09",rating:2},{name:"I10",rating:2},{name:"I11",rating:2},{name:"I12",rating:2},{name:"I13",rating:2},{name:"I14",rating:2},{name:"I15",rating:2},{name:"I16",rating:2},{name:"I17",rating:2},{name:"I18",rating:2},{name:"I19",rating:2},{name:"I20",rating:2},{name:"I21",rating:2},{name:"I22",rating:2},{name:"I23",rating:2},{name:"I24",rating:2},{name:"I25",rating:2},{name:"I26",rating:2},{name:"I27",rating:2},{name:"I28",rating:2},{name:"I29",rating:2},{name:"I30",rating:2},{name:"I31",rating:2},{name:"I32",rating:2},{name:"I33",rating:2},{name:"I34",rating:2},{name:"I35",rating:2},{name:"I36",rating:2},{name:"I37",rating:2},{name:"I38",rating:2},{name:"I39",rating:2},{name:"I40",rating:2},{name:"I41",rating:2},{name:"I42",rating:2},{name:"I43",rating:2},{name:"I44",rating:2},{name:"I45",rating:2},{name:"I46",rating:2},{name:"J00",rating:2},{name:"J01",rating:2},{name:"J02",rating:2},{name:"J03",rating:2},{name:"J04",rating:2},{name:"J05",rating:2},{name:"J06",rating:2},{name:"J07",rating:2},{name:"J08",rating:2},{name:"J09",rating:2},{name:"J10",rating:2},{name:"J11",rating:2},{name:"J12",rating:2},{name:"J13",rating:2},{name:"J14",rating:2},{name:"J15",rating:2},{name:"J16",rating:2},{name:"J17",rating:2},{name:"J18",rating:2},{name:"J19",rating:2},{name:"J20",rating:2},{name:"J21",rating:2},{name:"J22",rating:2},{name:"J23",rating:2},{name:"J24",rating:2},{name:"J25",rating:2},{name:"J26",rating:2},{name:"J27",rating:2},{name:"J28",rating:2},{name:"J29",rating:2},{name:"J30",rating:2},{name:"J31",rating:2},{name:"J32",rating:2},{name:"J33",rating:2},{name:"J34",rating:2},{name:"J35",rating:2},{name:"J36",rating:2},{name:"J37",rating:2},{name:"J38",rating:2},{name:"J39",rating:2},{name:"J40",rating:2},{name:"J41",rating:2},{name:"J42",rating:2},{name:"J43",rating:2},{name:"J44",rating:2},{name:"J45",rating:2},{name:"J46",rating:2},{name:"K00",rating:2},{name:"K01",rating:2},{name:"K02",rating:2},{name:"K03",rating:2},{name:"K04",rating:2},{name:"K05",rating:2},{name:"K06",rating:2},{name:"K07",rating:2},{name:"K08",rating:2},{name:"K09",rating:2},{name:"K10",rating:2},{name:"K11",rating:2},{name:"K12",rating:2},{name:"K13",rating:2},{name:"K14",rating:2},{name:"K15",rating:2},{name:"K16",rating:2},{name:"K17",rating:2},{name:"K18",rating:2},{name:"K19",rating:2},{name:"K20",rating:2},{name:"K21",rating:2},{name:"K22",rating:2},{name:"K23",rating:2},{name:"K24",rating:2},{name:"K25",rating:2},{name:"K26",rating:2},{name:"K27",rating:2},{name:"K28",rating:2},{name:"K29",rating:2},{name:"K30",rating:2},{name:"K31",rating:2},{name:"K32",rating:2},{name:"K33",rating:2},{name:"K34",rating:2},{name:"K35",rating:2},{name:"K36",rating:2},{name:"K37",rating:2},{name:"K38",rating:2},{name:"K39",rating:2},{name:"K40",rating:2},{name:"K41",rating:2},{name:"K42",rating:2}];assert.sameValue(array.length,513),array.sort((a,b)=>b.rating-a.rating);const reduced=array.reduce((acc,element)=>{const letter=element.name.slice(0,1);return acc.slice(-1)===letter?acc:acc+letter},"");assert.sameValue(reduced,"DGBEFHACIJK");␊



test262/test/language/module-code/instn-named-err-dflt-thru-star-dflt.js 6


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import x from"./instn-named-err-dflt-thru-star-int_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-named-err-dflt-thru-star-int_FIXTURE.js";␊



test262/test/language/module-code/instn-named-err-dflt-thru-star-as.js 17


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import{default as x}from"./instn-named-err-dflt-thru-star-int_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-named-err-dflt-thru-star-int_FIXTURE.js";␊



test262/test/language/module-code/instn-named-err-not-found.js 6


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import{x}from"./instn-named-err-not-found-empty_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-named-err-not-found-empty_FIXTURE.js";␊



test262/test/language/module-code/source-phase-import/import-source-binding-name.js 21


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import source from"<do not resolve>";import from from"<do not resolve>";
+$DONOTEVALUATE();import"../resources/ensure-linking-error_FIXTURE.js";import"<do not resolve>";import"<do not resolve>";␊



test262/test/built-ins/Array/prototype/sort/stability-2048-elements.js 27


Differences (-oxc|+esbuild):
-const array=[{name:"A000",rating:2},{name:"A001",rating:2},{name:"A002",rating:2},{name:"A003",rating:2},{name:"A004",rating:2},{name:"A005",rating:2},{name:"A006",rating:2},{name:"A007",rating:2},{name:"A008",rating:2},{name:"A009",rating:2},{name:"A010",rating:2},{name:"A011",rating:2},{name:"A012",rating:2},{name:"A013",rating:2},{name:"A014",rating:2},{name:"A015",rating:2},{name:"A016",rating:2},{name:"A017",rating:2},{name:"A018",rating:2},{name:"A019",rating:2},{name:"A020",rating:2},{name:"A021",rating:2},{name:"A022",rating:2},{name:"A023",rating:2},{name:"A024",rating:2},{name:"A025",rating:2},{name:"A026",rating:2},{name:"A027",rating:2},{name:"A028",rating:2},{name:"A029",rating:2},{name:"A030",rating:2},{name:"A031",rating:2},{name:"A032",rating:2},{name:"A033",rating:2},{name:"A034",rating:2},{name:"A035",rating:2},{name:"A036",rating:2},{name:"A037",rating:2},{name:"A038",rating:2},{name:"A039",rating:2},{name:"A040",rating:2},{name:"A041",rating:2},{name:"A042",rating:2},{name:"A043",rating:2},{name:"A044",rating:2},{name:"A045",rating:2},{name:"A046",rating:2},{name:"A047",rating:2},{name:"A048",rating:2},{name:"A049",rating:2},{name:"A050",rating:2},{name:"A051",rating:2},{name:"A052",rating:2},{name:"A053",rating:2},{name:"A054",rating:2},{name:"A055",rating:2},{name:"A056",rating:2},{name:"A057",rating:2},{name:"A058",rating:2},{name:"A059",rating:2},{name:"A060",rating:2},{name:"A061",rating:2},{name:"A062",rating:2},{name:"A063",rating:2},{name:"A064",rating:2},{name:"A065",rating:2},{name:"A066",rating:2},{name:"A067",rating:2},{name:"A068",rating:2},{name:"A069",rating:2},{name:"A070",rating:2},{name:"A071",rating:2},{name:"A072",rating:2},{name:"A073",rating:2},{name:"A074",rating:2},{name:"A075",rating:2},{name:"A076",rating:2},{name:"A077",rating:2},{name:"A078",rating:2},{name:"A079",rating:2},{name:"A080",rating:2},{name:"A081",rating:2},{name:"A082",rating:2},{name:"A083",rating:2},{name:"A084",rating:2},{name:"A085",rating:2},{name:"A086",rating:2},{name:"A087",rating:2},{name:"A088",rating:2},{name:"A089",rating:2},{name:"A090",rating:2},{name:"A091",rating:2},{name:"A092",rating:2},{name:"A093",rating:2},{name:"A094",rating:2},{name:"A095",rating:2},{name:"A096",rating:2},{name:"A097",rating:2},{name:"A098",rating:2},{name:"A099",rating:2},{name:"A100",rating:2},{name:"A101",rating:2},{name:"A102",rating:2},{name:"A103",rating:2},{name:"A104",rating:2},{name:"A105",rating:2},{name:"A106",rating:2},{name:"A107",rating:2},{name:"A108",rating:2},{name:"A109",rating:2},{name:"A110",rating:2},{name:"A111",rating:2},{name:"A112",rating:2},{name:"A113",rating:2},{name:"A114",rating:2},{name:"A115",rating:2},{name:"A116",rating:2},{name:"A117",rating:2},{name:"A118",rating:2},{name:"A119",rating:2},{name:"A120",rating:2},{name:"A121",rating:2},{name:"A122",rating:2},{name:"A123",rating:2},{name:"A124",rating:2},{name:"A125",rating:2},{name:"A126",rating:2},{name:"A127",rating:2},{name:"A128",rating:2},{name:"A129",rating:2},{name:"A130",rating:2},{name:"A131",rating:2},{name:"A132",rating:2},{name:"A133",rating:2},{name:"A134",rating:2},{name:"A135",rating:2},{name:"A136",rating:2},{name:"A137",rating:2},{name:"A138",rating:2},{name:"A139",rating:2},{name:"A140",rating:2},{name:"A141",rating:2},{name:"A142",rating:2},{name:"A143",rating:2},{name:"A144",rating:2},{name:"A145",rating:2},{name:"A146",rating:2},{name:"A147",rating:2},{name:"A148",rating:2},{name:"A149",rating:2},{name:"A150",rating:2},{name:"A151",rating:2},{name:"A152",rating:2},{name:"A153",rating:2},{name:"A154",rating:2},{name:"A155",rating:2},{name:"A156",rating:2},{name:"A157",rating:2},{name:"A158",rating:2},{name:"A159",rating:2},{name:"A160",rating:2},{name:"A161",rating:2},{name:"A162",rating:2},{name:"A163",rating:2},{name:"A164",rating:2},{name:"A165",rating:2},{name:"A166",rating:2},{name:"A167",rating:2},{name:"A168",rating:2},{name:"A169",rating:2},{name:"A170",rating:2},{name:"A171",rating:2},{name:"A172",rating:2},{name:"A173",rating:2},{name:"A174",rating:2},{name:"A175",rating:2},{name:"A176",rating:2},{name:"A177",rating:2},{name:"A178",rating:2},{name:"A179",rating:2},{name:"A180",rating:2},{name:"A181",rating:2},{name:"A182",rating:2},{name:"A183",rating:2},{name:"A184",rating:2},{name:"A185",rating:2},{name:"A186",rating:2},{name:"B000",rating:3},{name:"B001",rating:3},{name:"B002",rating:3},{name:"B003",rating:3},{name:"B004",rating:3},{name:"B005",rating:3},{name:"B006",rating:3},{name:"B007",rating:3},{name:"B008",rating:3},{name:"B009",rating:3},{name:"B010",rating:3},{name:"B011",rating:3},{name:"B012",rating:3},{name:"B013",rating:3},{name:"B014",rating:3},{name:"B015",rating:3},{name:"B016",rating:3},{name:"B017",rating:3},{name:"B018",rating:3},{name:"B019",rating:3},{name:"B020",rating:3},{name:"B021",rating:3},{name:"B022",rating:3},{name:"B023",rating:3},{name:"B024",rating:3},{name:"B025",rating:3},{name:"B026",rating:3},{name:"B027",rating:3},{name:"B028",rating:3},{name:"B029",rating:3},{name:"B030",rating:3},{name:"B031",rating:3},{name:"B032",rating:3},{name:"B033",rating:3},{name:"B034",rating:3},{name:"B035",rating:3},{name:"B036",rating:3},{name:"B037",rating:3},{name:"B038",rating:3},{name:"B039",rating:3},{name:"B040",rating:3},{name:"B041",rating:3},{name:"B042",rating:3},{name:"B043",rating:3},{name:"B044",rating:3},{name:"B045",rating:3},{name:"B046",rating:3},{name:"B047",rating:3},{name:"B048",rating:3},{name:"B049",rating:3},{name:"B050",rating:3},{name:"B051",rating:3},{name:"B052",rating:3},{name:"B053",rating:3},{name:"B054",rating:3},{name:"B055",rating:3},{name:"B056",rating:3},{name:"B057",rating:3},{name:"B058",rating:3},{name:"B059",rating:3},{name:"B060",rating:3},{name:"B061",rating:3},{name:"B062",rating:3},{name:"B063",rating:3},{name:"B064",rating:3},{name:"B065",rating:3},{name:"B066",rating:3},{name:"B067",rating:3},{name:"B068",rating:3},{name:"B069",rating:3},{name:"B070",rating:3},{name:"B071",rating:3},{name:"B072",rating:3},{name:"B073",rating:3},{name:"B074",rating:3},{name:"B075",rating:3},{name:"B076",rating:3},{name:"B077",rating:3},{name:"B078",rating:3},{name:"B079",rating:3},{name:"B080",rating:3},{name:"B081",rating:3},{name:"B082",rating:3},{name:"B083",rating:3},{name:"B084",rating:3},{name:"B085",rating:3},{name:"B086",rating:3},{name:"B087",rating:3},{name:"B088",rating:3},{name:"B089",rating:3},{name:"B090",rating:3},{name:"B091",rating:3},{name:"B092",rating:3},{name:"B093",rating:3},{name:"B094",rating:3},{name:"B095",rating:3},{name:"B096",rating:3},{name:"B097",rating:3},{name:"B098",rating:3},{name:"B099",rating:3},{name:"B100",rating:3},{name:"B101",rating:3},{name:"B102",rating:3},{name:"B103",rating:3},{name:"B104",rating:3},{name:"B105",rating:3},{name:"B106",rating:3},{name:"B107",rating:3},{name:"B108",rating:3},{name:"B109",rating:3},{name:"B110",rating:3},{name:"B111",rating:3},{name:"B112",rating:3},{name:"B113",rating:3},{name:"B114",rating:3},{name:"B115",rating:3},{name:"B116",rating:3},{name:"B117",rating:3},{name:"B118",rating:3},{name:"B119",rating:3},{name:"B120",rating:3},{name:"B121",rating:3},{name:"B122",rating:3},{name:"B123",rating:3},{name:"B124",rating:3},{name:"B125",rating:3},{name:"B126",rating:3},{name:"B127",rating:3},{name:"B128",rating:3},{name:"B129",rating:3},{name:"B130",rating:3},{name:"B131",rating:3},{name:"B132",rating:3},{name:"B133",rating:3},{name:"B134",rating:3},{name:"B135",rating:3},{name:"B136",rating:3},{name:"B137",rating:3},{name:"B138",rating:3},{name:"B139",rating:3},{name:"B140",rating:3},{name:"B141",rating:3},{name:"B142",rating:3},{name:"B143",rating:3},{name:"B144",rating:3},{name:"B145",rating:3},{name:"B146",rating:3},{name:"B147",rating:3},{name:"B148",rating:3},{name:"B149",rating:3},{name:"B150",rating:3},{name:"B151",rating:3},{name:"B152",rating:3},{name:"B153",rating:3},{name:"B154",rating:3},{name:"B155",rating:3},{name:"B156",rating:3},{name:"B157",rating:3},{name:"B158",rating:3},{name:"B159",rating:3},{name:"B160",rating:3},{name:"B161",rating:3},{name:"B162",rating:3},{name:"B163",rating:3},{name:"B164",rating:3},{name:"B165",rating:3},{name:"B166",rating:3},{name:"B167",rating:3},{name:"B168",rating:3},{name:"B169",rating:3},{name:"B170",rating:3},{name:"B171",rating:3},{name:"B172",rating:3},{name:"B173",rating:3},{name:"B174",rating:3},{name:"B175",rating:3},{name:"B176",rating:3},{name:"B177",rating:3},{name:"B178",rating:3},{name:"B179",rating:3},{name:"B180",rating:3},{name:"B181",rating:3},{name:"B182",rating:3},{name:"B183",rating:3},{name:"B184",rating:3},{name:"B185",rating:3},{name:"B186",rating:3},{name:"C000",rating:2},{name:"C001",rating:2},{name:"C002",rating:2},{name:"C003",rating:2},{name:"C004",rating:2},{name:"C005",rating:2},{name:"C006",rating:2},{name:"C007",rating:2},{name:"C008",rating:2},{name:"C009",rating:2},{name:"C010",rating:2},{name:"C011",rating:2},{name:"C012",rating:2},{name:"C013",rating:2},{name:"C014",rating:2},{name:"C015",rating:2},{name:"C016",rating:2},{name:"C017",rating:2},{name:"C018",rating:2},{name:"C019",rating:2},{name:"C020",rating:2},{name:"C021",rating:2},{name:"C022",rating:2},{name:"C023",rating:2},{name:"C024",rating:2},{name:"C025",rating:2},{name:"C026",rating:2},{name:"C027",rating:2},{name:"C028",rating:2},{name:"C029",rating:2},{name:"C030",rating:2},{name:"C031",rating:2},{name:"C032",rating:2},{name:"C033",rating:2},{name:"C034",rating:2},{name:"C035",rating:2},{name:"C036",rating:2},{name:"C037",rating:2},{name:"C038",rating:2},{name:"C039",rating:2},{name:"C040",rating:2},{name:"C041",rating:2},{name:"C042",rating:2},{name:"C043",rating:2},{name:"C044",rating:2},{name:"C045",rating:2},{name:"C046",rating:2},{name:"C047",rating:2},{name:"C048",rating:2},{name:"C049",rating:2},{name:"C050",rating:2},{name:"C051",rating:2},{name:"C052",rating:2},{name:"C053",rating:2},{name:"C054",rating:2},{name:"C055",rating:2},{name:"C056",rating:2},{name:"C057",rating:2},{name:"C058",rating:2},{name:"C059",rating:2},{name:"C060",rating:2},{name:"C061",rating:2},{name:"C062",rating:2},{name:"C063",rating:2},{name:"C064",rating:2},{name:"C065",rating:2},{name:"C066",rating:2},{name:"C067",rating:2},{name:"C068",rating:2},{name:"C069",rating:2},{name:"C070",rating:2},{name:"C071",rating:2},{name:"C072",rating:2},{name:"C073",rating:2},{name:"C074",rating:2},{name:"C075",rating:2},{name:"C076",rating:2},{name:"C077",rating:2},{name:"C078",rating:2},{name:"C079",rating:2},{name:"C080",rating:2},{name:"C081",rating:2},{name:"C082",rating:2},{name:"C083",rating:2},{name:"C084",rating:2},{name:"C085",rating:2},{name:"C086",rating:2},{name:"C087",rating:2},{name:"C088",rating:2},{name:"C089",rating:2},{name:"C090",rating:2},{name:"C091",rating:2},{name:"C092",rating:2},{name:"C093",rating:2},{name:"C094",rating:2},{name:"C095",rating:2},{name:"C096",rating:2},{name:"C097",rating:2},{name:"C098",rating:2},{name:"C099",rating:2},{name:"C100",rating:2},{name:"C101",rating:2},{name:"C102",rating:2},{name:"C103",rating:2},{name:"C104",rating:2},{name:"C105",rating:2},{name:"C106",rating:2},{name:"C107",rating:2},{name:"C108",rating:2},{name:"C109",rating:2},{name:"C110",rating:2},{name:"C111",rating:2},{name:"C112",rating:2},{name:"C113",rating:2},{name:"C114",rating:2},{name:"C115",rating:2},{name:"C116",rating:2},{name:"C117",rating:2},{name:"C118",rating:2},{name:"C119",rating:2},{name:"C120",rating:2},{name:"C121",rating:2},{name:"C122",rating:2},{name:"C123",rating:2},{name:"C124",rating:2},{name:"C125",rating:2},{name:"C126",rating:2},{name:"C127",rating:2},{name:"C128",rating:2},{name:"C129",rating:2},{name:"C130",rating:2},{name:"C131",rating:2},{name:"C132",rating:2},{name:"C133",rating:2},{name:"C134",rating:2},{name:"C135",rating:2},{name:"C136",rating:2},{name:"C137",rating:2},{name:"C138",rating:2},{name:"C139",rating:2},{name:"C140",rating:2},{name:"C141",rating:2},{name:"C142",rating:2},{name:"C143",rating:2},{name:"C144",rating:2},{name:"C145",rating:2},{name:"C146",rating:2},{name:"C147",rating:2},{name:"C148",rating:2},{name:"C149",rating:2},{name:"C150",rating:2},{name:"C151",rating:2},{name:"C152",rating:2},{name:"C153",rating:2},{name:"C154",rating:2},{name:"C155",rating:2},{name:"C156",rating:2},{name:"C157",rating:2},{name:"C158",rating:2},{name:"C159",rating:2},{name:"C160",rating:2},{name:"C161",rating:2},{name:"C162",rating:2},{name:"C163",rating:2},{name:"C164",rating:2},{name:"C165",rating:2},{name:"C166",rating:2},{name:"C167",rating:2},{name:"C168",rating:2},{name:"C169",rating:2},{name:"C170",rating:2},{name:"C171",rating:2},{name:"C172",rating:2},{name:"C173",rating:2},{name:"C174",rating:2},{name:"C175",rating:2},{name:"C176",rating:2},{name:"C177",rating:2},{name:"C178",rating:2},{name:"C179",rating:2},{name:"C180",rating:2},{name:"C181",rating:2},{name:"C182",rating:2},{name:"C183",rating:2},{name:"C184",rating:2},{name:"C185",rating:2},{name:"C186",rating:2},{name:"D000",rating:4},{name:"D001",rating:4},{name:"D002",rating:4},{name:"D003",rating:4},{name:"D004",rating:4},{name:"D005",rating:4},{name:"D006",rating:4},{name:"D007",rating:4},{name:"D008",rating:4},{name:"D009",rating:4},{name:"D010",rating:4},{name:"D011",rating:4},{name:"D012",rating:4},{name:"D013",rating:4},{name:"D014",rating:4},{name:"D015",rating:4},{name:"D016",rating:4},{name:"D017",rating:4},{name:"D018",rating:4},{name:"D019",rating:4},{name:"D020",rating:4},{name:"D021",rating:4},{name:"D022",rating:4},{name:"D023",rating:4},{name:"D024",rating:4},{name:"D025",rating:4},{name:"D026",rating:4},{name:"D027",rating:4},{name:"D028",rating:4},{name:"D029",rating:4},{name:"D030",rating:4},{name:"D031",rating:4},{name:"D032",rating:4},{name:"D033",rating:4},{name:"D034",rating:4},{name:"D035",rating:4},{name:"D036",rating:4},{name:"D037",rating:4},{name:"D038",rating:4},{name:"D039",rating:4},{name:"D040",rating:4},{name:"D041",rating:4},{name:"D042",rating:4},{name:"D043",rating:4},{name:"D044",rating:4},{name:"D045",rating:4},{name:"D046",rating:4},{name:"D047",rating:4},{name:"D048",rating:4},{name:"D049",rating:4},{name:"D050",rating:4},{name:"D051",rating:4},{name:"D052",rating:4},{name:"D053",rating:4},{name:"D054",rating:4},{name:"D055",rating:4},{name:"D056",rating:4},{name:"D057",rating:4},{name:"D058",rating:4},{name:"D059",rating:4},{name:"D060",rating:4},{name:"D061",rating:4},{name:"D062",rating:4},{name:"D063",rating:4},{name:"D064",rating:4},{name:"D065",rating:4},{name:"D066",rating:4},{name:"D067",rating:4},{name:"D068",rating:4},{name:"D069",rating:4},{name:"D070",rating:4},{name:"D071",rating:4},{name:"D072",rating:4},{name:"D073",rating:4},{name:"D074",rating:4},{name:"D075",rating:4},{name:"D076",rating:4},{name:"D077",rating:4},{name:"D078",rating:4},{name:"D079",rating:4},{name:"D080",rating:4},{name:"D081",rating:4},{name:"D082",rating:4},{name:"D083",rating:4},{name:"D084",rating:4},{name:"D085",rating:4},{name:"D086",rating:4},{name:"D087",rating:4},{name:"D088",rating:4},{name:"D089",rating:4},{name:"D090",rating:4},{name:"D091",rating:4},{name:"D092",rating:4},{name:"D093",rating:4},{name:"D094",rating:4},{name:"D095",rating:4},{name:"D096",rating:4},{name:"D097",rating:4},{name:"D098",rating:4},{name:"D099",rating:4},{name:"D100",rating:4},{name:"D101",rating:4},{name:"D102",rating:4},{name:"D103",rating:4},{name:"D104",rating:4},{name:"D105",rating:4},{name:"D106",rating:4},{name:"D107",rating:4},{name:"D108",rating:4},{name:"D109",rating:4},{name:"D110",rating:4},{name:"D111",rating:4},{name:"D112",rating:4},{name:"D113",rating:4},{name:"D114",rating:4},{name:"D115",rating:4},{name:"D116",rating:4},{name:"D117",rating:4},{name:"D118",rating:4},{name:"D119",rating:4},{name:"D120",rating:4},{name:"D121",rating:4},{name:"D122",rating:4},{name:"D123",rating:4},{name:"D124",rating:4},{name:"D125",rating:4},{name:"D126",rating:4},{name:"D127",rating:4},{name:"D128",rating:4},{name:"D129",rating:4},{name:"D130",rating:4},{name:"D131",rating:4},{name:"D132",rating:4},{name:"D133",rating:4},{name:"D134",rating:4},{name:"D135",rating:4},{name:"D136",rating:4},{name:"D137",rating:4},{name:"D138",rating:4},{name:"D139",rating:4},{name:"D140",rating:4},{name:"D141",rating:4},{name:"D142",rating:4},{name:"D143",rating:4},{name:"D144",rating:4},{name:"D145",rating:4},{name:"D146",rating:4},{name:"D147",rating:4},{name:"D148",rating:4},{name:"D149",rating:4},{name:"D150",rating:4},{name:"D151",rating:4},{name:"D152",rating:4},{name:"D153",rating:4},{name:"D154",rating:4},{name:"D155",rating:4},{name:"D156",rating:4},{name:"D157",rating:4},{name:"D158",rating:4},{name:"D159",rating:4},{name:"D160",rating:4},{name:"D161",rating:4},{name:"D162",rating:4},{name:"D163",rating:4},{name:"D164",rating:4},{name:"D165",rating:4},{name:"D166",rating:4},{name:"D167",rating:4},{name:"D168",rating:4},{name:"D169",rating:4},{name:"D170",rating:4},{name:"D171",rating:4},{name:"D172",rating:4},{name:"D173",rating:4},{name:"D174",rating:4},{name:"D175",rating:4},{name:"D176",rating:4},{name:"D177",rating:4},{name:"D178",rating:4},{name:"D179",rating:4},{name:"D180",rating:4},{name:"D181",rating:4},{name:"D182",rating:4},{name:"D183",rating:4},{name:"D184",rating:4},{name:"D185",rating:4},{name:"D186",rating:4},{name:"E000",rating:3},{name:"E001",rating:3},{name:"E002",rating:3},{name:"E003",rating:3},{name:"E004",rating:3},{name:"E005",rating:3},{name:"E006",rating:3},{name:"E007",rating:3},{name:"E008",rating:3},{name:"E009",rating:3},{name:"E010",rating:3},{name:"E011",rating:3},{name:"E012",rating:3},{name:"E013",rating:3},{name:"E014",rating:3},{name:"E015",rating:3},{name:"E016",rating:3},{name:"E017",rating:3},{name:"E018",rating:3},{name:"E019",rating:3},{name:"E020",rating:3},{name:"E021",rating:3},{name:"E022",rating:3},{name:"E023",rating:3},{name:"E024",rating:3},{name:"E025",rating:3},{name:"E026",rating:3},{name:"E027",rating:3},{name:"E028",rating:3},{name:"E029",rating:3},{name:"E030",rating:3},{name:"E031",rating:3},{name:"E032",rating:3},{name:"E033",rating:3},{name:"E034",rating:3},{name:"E035",rating:3},{name:"E036",rating:3},{name:"E037",rating:3},{name:"E038",rating:3},{name:"E039",rating:3},{name:"E040",rating:3},{name:"E041",rating:3},{name:"E042",rating:3},{name:"E043",rating:3},{name:"E044",rating:3},{name:"E045",rating:3},{name:"E046",rating:3},{name:"E047",rating:3},{name:"E048",rating:3},{name:"E049",rating:3},{name:"E050",rating:3},{name:"E051",rating:3},{name:"E052",rating:3},{name:"E053",rating:3},{name:"E054",rating:3},{name:"E055",rating:3},{name:"E056",rating:3},{name:"E057",rating:3},{name:"E058",rating:3},{name:"E059",rating:3},{name:"E060",rating:3},{name:"E061",rating:3},{name:"E062",rating:3},{name:"E063",rating:3},{name:"E064",rating:3},{name:"E065",rating:3},{name:"E066",rating:3},{name:"E067",rating:3},{name:"E068",rating:3},{name:"E069",rating:3},{name:"E070",rating:3},{name:"E071",rating:3},{name:"E072",rating:3},{name:"E073",rating:3},{name:"E074",rating:3},{name:"E075",rating:3},{name:"E076",rating:3},{name:"E077",rating:3},{name:"E078",rating:3},{name:"E079",rating:3},{name:"E080",rating:3},{name:"E081",rating:3},{name:"E082",rating:3},{name:"E083",rating:3},{name:"E084",rating:3},{name:"E085",rating:3},{name:"E086",rating:3},{name:"E087",rating:3},{name:"E088",rating:3},{name:"E089",rating:3},{name:"E090",rating:3},{name:"E091",rating:3},{name:"E092",rating:3},{name:"E093",rating:3},{name:"E094",rating:3},{name:"E095",rating:3},{name:"E096",rating:3},{name:"E097",rating:3},{name:"E098",rating:3},{name:"E099",rating:3},{name:"E100",rating:3},{name:"E101",rating:3},{name:"E102",rating:3},{name:"E103",rating:3},{name:"E104",rating:3},{name:"E105",rating:3},{name:"E106",rating:3},{name:"E107",rating:3},{name:"E108",rating:3},{name:"E109",rating:3},{name:"E110",rating:3},{name:"E111",rating:3},{name:"E112",rating:3},{name:"E113",rating:3},{name:"E114",rating:3},{name:"E115",rating:3},{name:"E116",rating:3},{name:"E117",rating:3},{name:"E118",rating:3},{name:"E119",rating:3},{name:"E120",rating:3},{name:"E121",rating:3},{name:"E122",rating:3},{name:"E123",rating:3},{name:"E124",rating:3},{name:"E125",rating:3},{name:"E126",rating:3},{name:"E127",rating:3},{name:"E128",rating:3},{name:"E129",rating:3},{name:"E130",rating:3},{name:"E131",rating:3},{name:"E132",rating:3},{name:"E133",rating:3},{name:"E134",rating:3},{name:"E135",rating:3},{name:"E136",rating:3},{name:"E137",rating:3},{name:"E138",rating:3},{name:"E139",rating:3},{name:"E140",rating:3},{name:"E141",rating:3},{name:"E142",rating:3},{name:"E143",rating:3},{name:"E144",rating:3},{name:"E145",rating:3},{name:"E146",rating:3},{name:"E147",rating:3},{name:"E148",rating:3},{name:"E149",rating:3},{name:"E150",rating:3},{name:"E151",rating:3},{name:"E152",rating:3},{name:"E153",rating:3},{name:"E154",rating:3},{name:"E155",rating:3},{name:"E156",rating:3},{name:"E157",rating:3},{name:"E158",rating:3},{name:"E159",rating:3},{name:"E160",rating:3},{name:"E161",rating:3},{name:"E162",rating:3},{name:"E163",rating:3},{name:"E164",rating:3},{name:"E165",rating:3},{name:"E166",rating:3},{name:"E167",rating:3},{name:"E168",rating:3},{name:"E169",rating:3},{name:"E170",rating:3},{name:"E171",rating:3},{name:"E172",rating:3},{name:"E173",rating:3},{name:"E174",rating:3},{name:"E175",rating:3},{name:"E176",rating:3},{name:"E177",rating:3},{name:"E178",rating:3},{name:"E179",rating:3},{name:"E180",rating:3},{name:"E181",rating:3},{name:"E182",rating:3},{name:"E183",rating:3},{name:"E184",rating:3},{name:"E185",rating:3},{name:"E186",rating:3},{name:"F000",rating:3},{name:"F001",rating:3},{name:"F002",rating:3},{name:"F003",rating:3},{name:"F004",rating:3},{name:"F005",rating:3},{name:"F006",rating:3},{name:"F007",rating:3},{name:"F008",rating:3},{name:"F009",rating:3},{name:"F010",rating:3},{name:"F011",rating:3},{name:"F012",rating:3},{name:"F013",rating:3},{name:"F014",rating:3},{name:"F015",rating:3},{name:"F016",rating:3},{name:"F017",rating:3},{name:"F018",rating:3},{name:"F019",rating:3},{name:"F020",rating:3},{name:"F021",rating:3},{name:"F022",rating:3},{name:"F023",rating:3},{name:"F024",rating:3},{name:"F025",rating:3},{name:"F026",rating:3},{name:"F027",rating:3},{name:"F028",rating:3},{name:"F029",rating:3},{name:"F030",rating:3},{name:"F031",rating:3},{name:"F032",rating:3},{name:"F033",rating:3},{name:"F034",rating:3},{name:"F035",rating:3},{name:"F036",rating:3},{name:"F037",rating:3},{name:"F038",rating:3},{name:"F039",rating:3},{name:"F040",rating:3},{name:"F041",rating:3},{name:"F042",rating:3},{name:"F043",rating:3},{name:"F044",rating:3},{name:"F045",rating:3},{name:"F046",rating:3},{name:"F047",rating:3},{name:"F048",rating:3},{name:"F049",rating:3},{name:"F050",rating:3},{name:"F051",rating:3},{name:"F052",rating:3},{name:"F053",rating:3},{name:"F054",rating:3},{name:"F055",rating:3},{name:"F056",rating:3},{name:"F057",rating:3},{name:"F058",rating:3},{name:"F059",rating:3},{name:"F060",rating:3},{name:"F061",rating:3},{name:"F062",rating:3},{name:"F063",rating:3},{name:"F064",rating:3},{name:"F065",rating:3},{name:"F066",rating:3},{name:"F067",rating:3},{name:"F068",rating:3},{name:"F069",rating:3},{name:"F070",rating:3},{name:"F071",rating:3},{name:"F072",rating:3},{name:"F073",rating:3},{name:"F074",rating:3},{name:"F075",rating:3},{name:"F076",rating:3},{name:"F077",rating:3},{name:"F078",rating:3},{name:"F079",rating:3},{name:"F080",rating:3},{name:"F081",rating:3},{name:"F082",rating:3},{name:"F083",rating:3},{name:"F084",rating:3},{name:"F085",rating:3},{name:"F086",rating:3},{name:"F087",rating:3},{name:"F088",rating:3},{name:"F089",rating:3},{name:"F090",rating:3},{name:"F091",rating:3},{name:"F092",rating:3},{name:"F093",rating:3},{name:"F094",rating:3},{name:"F095",rating:3},{name:"F096",rating:3},{name:"F097",rating:3},{name:"F098",rating:3},{name:"F099",rating:3},{name:"F100",rating:3},{name:"F101",rating:3},{name:"F102",rating:3},{name:"F103",rating:3},{name:"F104",rating:3},{name:"F105",rating:3},{name:"F106",rating:3},{name:"F107",rating:3},{name:"F108",rating:3},{name:"F109",rating:3},{name:"F110",rating:3},{name:"F111",rating:3},{name:"F112",rating:3},{name:"F113",rating:3},{name:"F114",rating:3},{name:"F115",rating:3},{name:"F116",rating:3},{name:"F117",rating:3},{name:"F118",rating:3},{name:"F119",rating:3},{name:"F120",rating:3},{name:"F121",rating:3},{name:"F122",rating:3},{name:"F123",rating:3},{name:"F124",rating:3},{name:"F125",rating:3},{name:"F126",rating:3},{name:"F127",rating:3},{name:"F128",rating:3},{name:"F129",rating:3},{name:"F130",rating:3},{name:"F131",rating:3},{name:"F132",rating:3},{name:"F133",rating:3},{name:"F134",rating:3},{name:"F135",rating:3},{name:"F136",rating:3},{name:"F137",rating:3},{name:"F138",rating:3},{name:"F139",rating:3},{name:"F140",rating:3},{name:"F141",rating:3},{name:"F142",rating:3},{name:"F143",rating:3},{name:"F144",rating:3},{name:"F145",rating:3},{name:"F146",rating:3},{name:"F147",rating:3},{name:"F148",rating:3},{name:"F149",rating:3},{name:"F150",rating:3},{name:"F151",rating:3},{name:"F152",rating:3},{name:"F153",rating:3},{name:"F154",rating:3},{name:"F155",rating:3},{name:"F156",rating:3},{name:"F157",rating:3},{name:"F158",rating:3},{name:"F159",rating:3},{name:"F160",rating:3},{name:"F161",rating:3},{name:"F162",rating:3},{name:"F163",rating:3},{name:"F164",rating:3},{name:"F165",rating:3},{name:"F166",rating:3},{name:"F167",rating:3},{name:"F168",rating:3},{name:"F169",rating:3},{name:"F170",rating:3},{name:"F171",rating:3},{name:"F172",rating:3},{name:"F173",rating:3},{name:"F174",rating:3},{name:"F175",rating:3},{name:"F176",rating:3},{name:"F177",rating:3},{name:"F178",rating:3},{name:"F179",rating:3},{name:"F180",rating:3},{name:"F181",rating:3},{name:"F182",rating:3},{name:"F183",rating:3},{name:"F184",rating:3},{name:"F185",rating:3},{name:"F186",rating:3},{name:"G000",rating:4},{name:"G001",rating:4},{name:"G002",rating:4},{name:"G003",rating:4},{name:"G004",rating:4},{name:"G005",rating:4},{name:"G006",rating:4},{name:"G007",rating:4},{name:"G008",rating:4},{name:"G009",rating:4},{name:"G010",rating:4},{name:"G011",rating:4},{name:"G012",rating:4},{name:"G013",rating:4},{name:"G014",rating:4},{name:"G015",rating:4},{name:"G016",rating:4},{name:"G017",rating:4},{name:"G018",rating:4},{name:"G019",rating:4},{name:"G020",rating:4},{name:"G021",rating:4},{name:"G022",rating:4},{name:"G023",rating:4},{name:"G024",rating:4},{name:"G025",rating:4},{name:"G026",rating:4},{name:"G027",rating:4},{name:"G028",rating:4},{name:"G029",rating:4},{name:"G030",rating:4},{name:"G031",rating:4},{name:"G032",rating:4},{name:"G033",rating:4},{name:"G034",rating:4},{name:"G035",rating:4},{name:"G036",rating:4},{name:"G037",rating:4},{name:"G038",rating:4},{name:"G039",rating:4},{name:"G040",rating:4},{name:"G041",rating:4},{name:"G042",rating:4},{name:"G043",rating:4},{name:"G044",rating:4},{name:"G045",rating:4},{name:"G046",rating:4},{name:"G047",rating:4},{name:"G048",rating:4},{name:"G049",rating:4},{name:"G050",rating:4},{name:"G051",rating:4},{name:"G052",rating:4},{name:"G053",rating:4},{name:"G054",rating:4},{name:"G055",rating:4},{name:"G056",rating:4},{name:"G057",rating:4},{name:"G058",rating:4},{name:"G059",rating:4},{name:"G060",rating:4},{name:"G061",rating:4},{name:"G062",rating:4},{name:"G063",rating:4},{name:"G064",rating:4},{name:"G065",rating:4},{name:"G066",rating:4},{name:"G067",rating:4},{name:"G068",rating:4},{name:"G069",rating:4},{name:"G070",rating:4},{name:"G071",rating:4},{name:"G072",rating:4},{name:"G073",rating:4},{name:"G074",rating:4},{name:"G075",rating:4},{name:"G076",rating:4},{name:"G077",rating:4},{name:"G078",rating:4},{name:"G079",rating:4},{name:"G080",rating:4},{name:"G081",rating:4},{name:"G082",rating:4},{name:"G083",rating:4},{name:"G084",rating:4},{name:"G085",rating:4},{name:"G086",rating:4},{name:"G087",rating:4},{name:"G088",rating:4},{name:"G089",rating:4},{name:"G090",rating:4},{name:"G091",rating:4},{name:"G092",rating:4},{name:"G093",rating:4},{name:"G094",rating:4},{name:"G095",rating:4},{name:"G096",rating:4},{name:"G097",rating:4},{name:"G098",rating:4},{name:"G099",rating:4},{name:"G100",rating:4},{name:"G101",rating:4},{name:"G102",rating:4},{name:"G103",rating:4},{name:"G104",rating:4},{name:"G105",rating:4},{name:"G106",rating:4},{name:"G107",rating:4},{name:"G108",rating:4},{name:"G109",rating:4},{name:"G110",rating:4},{name:"G111",rating:4},{name:"G112",rating:4},{name:"G113",rating:4},{name:"G114",rating:4},{name:"G115",rating:4},{name:"G116",rating:4},{name:"G117",rating:4},{name:"G118",rating:4},{name:"G119",rating:4},{name:"G120",rating:4},{name:"G121",rating:4},{name:"G122",rating:4},{name:"G123",rating:4},{name:"G124",rating:4},{name:"G125",rating:4},{name:"G126",rating:4},{name:"G127",rating:4},{name:"G128",rating:4},{name:"G129",rating:4},{name:"G130",rating:4},{name:"G131",rating:4},{name:"G132",rating:4},{name:"G133",rating:4},{name:"G134",rating:4},{name:"G135",rating:4},{name:"G136",rating:4},{name:"G137",rating:4},{name:"G138",rating:4},{name:"G139",rating:4},{name:"G140",rating:4},{name:"G141",rating:4},{name:"G142",rating:4},{name:"G143",rating:4},{name:"G144",rating:4},{name:"G145",rating:4},{name:"G146",rating:4},{name:"G147",rating:4},{name:"G148",rating:4},{name:"G149",rating:4},{name:"G150",rating:4},{name:"G151",rating:4},{name:"G152",rating:4},{name:"G153",rating:4},{name:"G154",rating:4},{name:"G155",rating:4},{name:"G156",rating:4},{name:"G157",rating:4},{name:"G158",rating:4},{name:"G159",rating:4},{name:"G160",rating:4},{name:"G161",rating:4},{name:"G162",rating:4},{name:"G163",rating:4},{name:"G164",rating:4},{name:"G165",rating:4},{name:"G166",rating:4},{name:"G167",rating:4},{name:"G168",rating:4},{name:"G169",rating:4},{name:"G170",rating:4},{name:"G171",rating:4},{name:"G172",rating:4},{name:"G173",rating:4},{name:"G174",rating:4},{name:"G175",rating:4},{name:"G176",rating:4},{name:"G177",rating:4},{name:"G178",rating:4},{name:"G179",rating:4},{name:"G180",rating:4},{name:"G181",rating:4},{name:"G182",rating:4},{name:"G183",rating:4},{name:"G184",rating:4},{name:"G185",rating:4},{name:"G186",rating:4},{name:"H000",rating:3},{name:"H001",rating:3},{name:"H002",rating:3},{name:"H003",rating:3},{name:"H004",rating:3},{name:"H005",rating:3},{name:"H006",rating:3},{name:"H007",rating:3},{name:"H008",rating:3},{name:"H009",rating:3},{name:"H010",rating:3},{name:"H011",rating:3},{name:"H012",rating:3},{name:"H013",rating:3},{name:"H014",rating:3},{name:"H015",rating:3},{name:"H016",rating:3},{name:"H017",rating:3},{name:"H018",rating:3},{name:"H019",rating:3},{name:"H020",rating:3},{name:"H021",rating:3},{name:"H022",rating:3},{name:"H023",rating:3},{name:"H024",rating:3},{name:"H025",rating:3},{name:"H026",rating:3},{name:"H027",rating:3},{name:"H028",rating:3},{name:"H029",rating:3},{name:"H030",rating:3},{name:"H031",rating:3},{name:"H032",rating:3},{name:"H033",rating:3},{name:"H034",rating:3},{name:"H035",rating:3},{name:"H036",rating:3},{name:"H037",rating:3},{name:"H038",rating:3},{name:"H039",rating:3},{name:"H040",rating:3},{name:"H041",rating:3},{name:"H042",rating:3},{name:"H043",rating:3},{name:"H044",rating:3},{name:"H045",rating:3},{name:"H046",rating:3},{name:"H047",rating:3},{name:"H048",rating:3},{name:"H049",rating:3},{name:"H050",rating:3},{name:"H051",rating:3},{name:"H052",rating:3},{name:"H053",rating:3},{name:"H054",rating:3},{name:"H055",rating:3},{name:"H056",rating:3},{name:"H057",rating:3},{name:"H058",rating:3},{name:"H059",rating:3},{name:"H060",rating:3},{name:"H061",rating:3},{name:"H062",rating:3},{name:"H063",rating:3},{name:"H064",rating:3},{name:"H065",rating:3},{name:"H066",rating:3},{name:"H067",rating:3},{name:"H068",rating:3},{name:"H069",rating:3},{name:"H070",rating:3},{name:"H071",rating:3},{name:"H072",rating:3},{name:"H073",rating:3},{name:"H074",rating:3},{name:"H075",rating:3},{name:"H076",rating:3},{name:"H077",rating:3},{name:"H078",rating:3},{name:"H079",rating:3},{name:"H080",rating:3},{name:"H081",rating:3},{name:"H082",rating:3},{name:"H083",rating:3},{name:"H084",rating:3},{name:"H085",rating:3},{name:"H086",rating:3},{name:"H087",rating:3},{name:"H088",rating:3},{name:"H089",rating:3},{name:"H090",rating:3},{name:"H091",rating:3},{name:"H092",rating:3},{name:"H093",rating:3},{name:"H094",rating:3},{name:"H095",rating:3},{name:"H096",rating:3},{name:"H097",rating:3},{name:"H098",rating:3},{name:"H099",rating:3},{name:"H100",rating:3},{name:"H101",rating:3},{name:"H102",rating:3},{name:"H103",rating:3},{name:"H104",rating:3},{name:"H105",rating:3},{name:"H106",rating:3},{name:"H107",rating:3},{name:"H108",rating:3},{name:"H109",rating:3},{name:"H110",rating:3},{name:"H111",rating:3},{name:"H112",rating:3},{name:"H113",rating:3},{name:"H114",rating:3},{name:"H115",rating:3},{name:"H116",rating:3},{name:"H117",rating:3},{name:"H118",rating:3},{name:"H119",rating:3},{name:"H120",rating:3},{name:"H121",rating:3},{name:"H122",rating:3},{name:"H123",rating:3},{name:"H124",rating:3},{name:"H125",rating:3},{name:"H126",rating:3},{name:"H127",rating:3},{name:"H128",rating:3},{name:"H129",rating:3},{name:"H130",rating:3},{name:"H131",rating:3},{name:"H132",rating:3},{name:"H133",rating:3},{name:"H134",rating:3},{name:"H135",rating:3},{name:"H136",rating:3},{name:"H137",rating:3},{name:"H138",rating:3},{name:"H139",rating:3},{name:"H140",rating:3},{name:"H141",rating:3},{name:"H142",rating:3},{name:"H143",rating:3},{name:"H144",rating:3},{name:"H145",rating:3},{name:"H146",rating:3},{name:"H147",rating:3},{name:"H148",rating:3},{name:"H149",rating:3},{name:"H150",rating:3},{name:"H151",rating:3},{name:"H152",rating:3},{name:"H153",rating:3},{name:"H154",rating:3},{name:"H155",rating:3},{name:"H156",rating:3},{name:"H157",rating:3},{name:"H158",rating:3},{name:"H159",rating:3},{name:"H160",rating:3},{name:"H161",rating:3},{name:"H162",rating:3},{name:"H163",rating:3},{name:"H164",rating:3},{name:"H165",rating:3},{name:"H166",rating:3},{name:"H167",rating:3},{name:"H168",rating:3},{name:"H169",rating:3},{name:"H170",rating:3},{name:"H171",rating:3},{name:"H172",rating:3},{name:"H173",rating:3},{name:"H174",rating:3},{name:"H175",rating:3},{name:"H176",rating:3},{name:"H177",rating:3},{name:"H178",rating:3},{name:"H179",rating:3},{name:"H180",rating:3},{name:"H181",rating:3},{name:"H182",rating:3},{name:"H183",rating:3},{name:"H184",rating:3},{name:"H185",rating:3},{name:"H186",rating:3},{name:"I000",rating:2},{name:"I001",rating:2},{name:"I002",rating:2},{name:"I003",rating:2},{name:"I004",rating:2},{name:"I005",rating:2},{name:"I006",rating:2},{name:"I007",rating:2},{name:"I008",rating:2},{name:"I009",rating:2},{name:"I010",rating:2},{name:"I011",rating:2},{name:"I012",rating:2},{name:"I013",rating:2},{name:"I014",rating:2},{name:"I015",rating:2},{name:"I016",rating:2},{name:"I017",rating:2},{name:"I018",rating:2},{name:"I019",rating:2},{name:"I020",rating:2},{name:"I021",rating:2},{name:"I022",rating:2},{name:"I023",rating:2},{name:"I024",rating:2},{name:"I025",rating:2},{name:"I026",rating:2},{name:"I027",rating:2},{name:"I028",rating:2},{name:"I029",rating:2},{name:"I030",rating:2},{name:"I031",rating:2},{name:"I032",rating:2},{name:"I033",rating:2},{name:"I034",rating:2},{name:"I035",rating:2},{name:"I036",rating:2},{name:"I037",rating:2},{name:"I038",rating:2},{name:"I039",rating:2},{name:"I040",rating:2},{name:"I041",rating:2},{name:"I042",rating:2},{name:"I043",rating:2},{name:"I044",rating:2},{name:"I045",rating:2},{name:"I046",rating:2},{name:"I047",rating:2},{name:"I048",rating:2},{name:"I049",rating:2},{name:"I050",rating:2},{name:"I051",rating:2},{name:"I052",rating:2},{name:"I053",rating:2},{name:"I054",rating:2},{name:"I055",rating:2},{name:"I056",rating:2},{name:"I057",rating:2},{name:"I058",rating:2},{name:"I059",rating:2},{name:"I060",rating:2},{name:"I061",rating:2},{name:"I062",rating:2},{name:"I063",rating:2},{name:"I064",rating:2},{name:"I065",rating:2},{name:"I066",rating:2},{name:"I067",rating:2},{name:"I068",rating:2},{name:"I069",rating:2},{name:"I070",rating:2},{name:"I071",rating:2},{name:"I072",rating:2},{name:"I073",rating:2},{name:"I074",rating:2},{name:"I075",rating:2},{name:"I076",rating:2},{name:"I077",rating:2},{name:"I078",rating:2},{name:"I079",rating:2},{name:"I080",rating:2},{name:"I081",rating:2},{name:"I082",rating:2},{name:"I083",rating:2},{name:"I084",rating:2},{name:"I085",rating:2},{name:"I086",rating:2},{name:"I087",rating:2},{name:"I088",rating:2},{name:"I089",rating:2},{name:"I090",rating:2},{name:"I091",rating:2},{name:"I092",rating:2},{name:"I093",rating:2},{name:"I094",rating:2},{name:"I095",rating:2},{name:"I096",rating:2},{name:"I097",rating:2},{name:"I098",rating:2},{name:"I099",rating:2},{name:"I100",rating:2},{name:"I101",rating:2},{name:"I102",rating:2},{name:"I103",rating:2},{name:"I104",rating:2},{name:"I105",rating:2},{name:"I106",rating:2},{name:"I107",rating:2},{name:"I108",rating:2},{name:"I109",rating:2},{name:"I110",rating:2},{name:"I111",rating:2},{name:"I112",rating:2},{name:"I113",rating:2},{name:"I114",rating:2},{name:"I115",rating:2},{name:"I116",rating:2},{name:"I117",rating:2},{name:"I118",rating:2},{name:"I119",rating:2},{name:"I120",rating:2},{name:"I121",rating:2},{name:"I122",rating:2},{name:"I123",rating:2},{name:"I124",rating:2},{name:"I125",rating:2},{name:"I126",rating:2},{name:"I127",rating:2},{name:"I128",rating:2},{name:"I129",rating:2},{name:"I130",rating:2},{name:"I131",rating:2},{name:"I132",rating:2},{name:"I133",rating:2},{name:"I134",rating:2},{name:"I135",rating:2},{name:"I136",rating:2},{name:"I137",rating:2},{name:"I138",rating:2},{name:"I139",rating:2},{name:"I140",rating:2},{name:"I141",rating:2},{name:"I142",rating:2},{name:"I143",rating:2},{name:"I144",rating:2},{name:"I145",rating:2},{name:"I146",rating:2},{name:"I147",rating:2},{name:"I148",rating:2},{name:"I149",rating:2},{name:"I150",rating:2},{name:"I151",rating:2},{name:"I152",rating:2},{name:"I153",rating:2},{name:"I154",rating:2},{name:"I155",rating:2},{name:"I156",rating:2},{name:"I157",rating:2},{name:"I158",rating:2},{name:"I159",rating:2},{name:"I160",rating:2},{name:"I161",rating:2},{name:"I162",rating:2},{name:"I163",rating:2},{name:"I164",rating:2},{name:"I165",rating:2},{name:"I166",rating:2},{name:"I167",rating:2},{name:"I168",rating:2},{name:"I169",rating:2},{name:"I170",rating:2},{name:"I171",rating:2},{name:"I172",rating:2},{name:"I173",rating:2},{name:"I174",rating:2},{name:"I175",rating:2},{name:"I176",rating:2},{name:"I177",rating:2},{name:"I178",rating:2},{name:"I179",rating:2},{name:"I180",rating:2},{name:"I181",rating:2},{name:"I182",rating:2},{name:"I183",rating:2},{name:"I184",rating:2},{name:"I185",rating:2},{name:"I186",rating:2},{name:"J000",rating:2},{name:"J001",rating:2},{name:"J002",rating:2},{name:"J003",rating:2},{name:"J004",rating:2},{name:"J005",rating:2},{name:"J006",rating:2},{name:"J007",rating:2},{name:"J008",rating:2},{name:"J009",rating:2},{name:"J010",rating:2},{name:"J011",rating:2},{name:"J012",rating:2},{name:"J013",rating:2},{name:"J014",rating:2},{name:"J015",rating:2},{name:"J016",rating:2},{name:"J017",rating:2},{name:"J018",rating:2},{name:"J019",rating:2},{name:"J020",rating:2},{name:"J021",rating:2},{name:"J022",rating:2},{name:"J023",rating:2},{name:"J024",rating:2},{name:"J025",rating:2},{name:"J026",rating:2},{name:"J027",rating:2},{name:"J028",rating:2},{name:"J029",rating:2},{name:"J030",rating:2},{name:"J031",rating:2},{name:"J032",rating:2},{name:"J033",rating:2},{name:"J034",rating:2},{name:"J035",rating:2},{name:"J036",rating:2},{name:"J037",rating:2},{name:"J038",rating:2},{name:"J039",rating:2},{name:"J040",rating:2},{name:"J041",rating:2},{name:"J042",rating:2},{name:"J043",rating:2},{name:"J044",rating:2},{name:"J045",rating:2},{name:"J046",rating:2},{name:"J047",rating:2},{name:"J048",rating:2},{name:"J049",rating:2},{name:"J050",rating:2},{name:"J051",rating:2},{name:"J052",rating:2},{name:"J053",rating:2},{name:"J054",rating:2},{name:"J055",rating:2},{name:"J056",rating:2},{name:"J057",rating:2},{name:"J058",rating:2},{name:"J059",rating:2},{name:"J060",rating:2},{name:"J061",rating:2},{name:"J062",rating:2},{name:"J063",rating:2},{name:"J064",rating:2},{name:"J065",rating:2},{name:"J066",rating:2},{name:"J067",rating:2},{name:"J068",rating:2},{name:"J069",rating:2},{name:"J070",rating:2},{name:"J071",rating:2},{name:"J072",rating:2},{name:"J073",rating:2},{name:"J074",rating:2},{name:"J075",rating:2},{name:"J076",rating:2},{name:"J077",rating:2},{name:"J078",rating:2},{name:"J079",rating:2},{name:"J080",rating:2},{name:"J081",rating:2},{name:"J082",rating:2},{name:"J083",rating:2},{name:"J084",rating:2},{name:"J085",rating:2},{name:"J086",rating:2},{name:"J087",rating:2},{name:"J088",rating:2},{name:"J089",rating:2},{name:"J090",rating:2},{name:"J091",rating:2},{name:"J092",rating:2},{name:"J093",rating:2},{name:"J094",rating:2},{name:"J095",rating:2},{name:"J096",rating:2},{name:"J097",rating:2},{name:"J098",rating:2},{name:"J099",rating:2},{name:"J100",rating:2},{name:"J101",rating:2},{name:"J102",rating:2},{name:"J103",rating:2},{name:"J104",rating:2},{name:"J105",rating:2},{name:"J106",rating:2},{name:"J107",rating:2},{name:"J108",rating:2},{name:"J109",rating:2},{name:"J110",rating:2},{name:"J111",rating:2},{name:"J112",rating:2},{name:"J113",rating:2},{name:"J114",rating:2},{name:"J115",rating:2},{name:"J116",rating:2},{name:"J117",rating:2},{name:"J118",rating:2},{name:"J119",rating:2},{name:"J120",rating:2},{name:"J121",rating:2},{name:"J122",rating:2},{name:"J123",rating:2},{name:"J124",rating:2},{name:"J125",rating:2},{name:"J126",rating:2},{name:"J127",rating:2},{name:"J128",rating:2},{name:"J129",rating:2},{name:"J130",rating:2},{name:"J131",rating:2},{name:"J132",rating:2},{name:"J133",rating:2},{name:"J134",rating:2},{name:"J135",rating:2},{name:"J136",rating:2},{name:"J137",rating:2},{name:"J138",rating:2},{name:"J139",rating:2},{name:"J140",rating:2},{name:"J141",rating:2},{name:"J142",rating:2},{name:"J143",rating:2},{name:"J144",rating:2},{name:"J145",rating:2},{name:"J146",rating:2},{name:"J147",rating:2},{name:"J148",rating:2},{name:"J149",rating:2},{name:"J150",rating:2},{name:"J151",rating:2},{name:"J152",rating:2},{name:"J153",rating:2},{name:"J154",rating:2},{name:"J155",rating:2},{name:"J156",rating:2},{name:"J157",rating:2},{name:"J158",rating:2},{name:"J159",rating:2},{name:"J160",rating:2},{name:"J161",rating:2},{name:"J162",rating:2},{name:"J163",rating:2},{name:"J164",rating:2},{name:"J165",rating:2},{name:"J166",rating:2},{name:"J167",rating:2},{name:"J168",rating:2},{name:"J169",rating:2},{name:"J170",rating:2},{name:"J171",rating:2},{name:"J172",rating:2},{name:"J173",rating:2},{name:"J174",rating:2},{name:"J175",rating:2},{name:"J176",rating:2},{name:"J177",rating:2},{name:"J178",rating:2},{name:"J179",rating:2},{name:"J180",rating:2},{name:"J181",rating:2},{name:"J182",rating:2},{name:"J183",rating:2},{name:"J184",rating:2},{name:"J185",rating:2},{name:"J186",rating:2},{name:"K000",rating:2},{name:"K001",rating:2},{name:"K002",rating:2},{name:"K003",rating:2},{name:"K004",rating:2},{name:"K005",rating:2},{name:"K006",rating:2},{name:"K007",rating:2},{name:"K008",rating:2},{name:"K009",rating:2},{name:"K010",rating:2},{name:"K011",rating:2},{name:"K012",rating:2},{name:"K013",rating:2},{name:"K014",rating:2},{name:"K015",rating:2},{name:"K016",rating:2},{name:"K017",rating:2},{name:"K018",rating:2},{name:"K019",rating:2},{name:"K020",rating:2},{name:"K021",rating:2},{name:"K022",rating:2},{name:"K023",rating:2},{name:"K024",rating:2},{name:"K025",rating:2},{name:"K026",rating:2},{name:"K027",rating:2},{name:"K028",rating:2},{name:"K029",rating:2},{name:"K030",rating:2},{name:"K031",rating:2},{name:"K032",rating:2},{name:"K033",rating:2},{name:"K034",rating:2},{name:"K035",rating:2},{name:"K036",rating:2},{name:"K037",rating:2},{name:"K038",rating:2},{name:"K039",rating:2},{name:"K040",rating:2},{name:"K041",rating:2},{name:"K042",rating:2},{name:"K043",rating:2},{name:"K044",rating:2},{name:"K045",rating:2},{name:"K046",rating:2},{name:"K047",rating:2},{name:"K048",rating:2},{name:"K049",rating:2},{name:"K050",rating:2},{name:"K051",rating:2},{name:"K052",rating:2},{name:"K053",rating:2},{name:"K054",rating:2},{name:"K055",rating:2},{name:"K056",rating:2},{name:"K057",rating:2},{name:"K058",rating:2},{name:"K059",rating:2},{name:"K060",rating:2},{name:"K061",rating:2},{name:"K062",rating:2},{name:"K063",rating:2},{name:"K064",rating:2},{name:"K065",rating:2},{name:"K066",rating:2},{name:"K067",rating:2},{name:"K068",rating:2},{name:"K069",rating:2},{name:"K070",rating:2},{name:"K071",rating:2},{name:"K072",rating:2},{name:"K073",rating:2},{name:"K074",rating:2},{name:"K075",rating:2},{name:"K076",rating:2},{name:"K077",rating:2},{name:"K078",rating:2},{name:"K079",rating:2},{name:"K080",rating:2},{name:"K081",rating:2},{name:"K082",rating:2},{name:"K083",rating:2},{name:"K084",rating:2},{name:"K085",rating:2},{name:"K086",rating:2},{name:"K087",rating:2},{name:"K088",rating:2},{name:"K089",rating:2},{name:"K090",rating:2},{name:"K091",rating:2},{name:"K092",rating:2},{name:"K093",rating:2},{name:"K094",rating:2},{name:"K095",rating:2},{name:"K096",rating:2},{name:"K097",rating:2},{name:"K098",rating:2},{name:"K099",rating:2},{name:"K100",rating:2},{name:"K101",rating:2},{name:"K102",rating:2},{name:"K103",rating:2},{name:"K104",rating:2},{name:"K105",rating:2},{name:"K106",rating:2},{name:"K107",rating:2},{name:"K108",rating:2},{name:"K109",rating:2},{name:"K110",rating:2},{name:"K111",rating:2},{name:"K112",rating:2},{name:"K113",rating:2},{name:"K114",rating:2},{name:"K115",rating:2},{name:"K116",rating:2},{name:"K117",rating:2},{name:"K118",rating:2},{name:"K119",rating:2},{name:"K120",rating:2},{name:"K121",rating:2},{name:"K122",rating:2},{name:"K123",rating:2},{name:"K124",rating:2},{name:"K125",rating:2},{name:"K126",rating:2},{name:"K127",rating:2},{name:"K128",rating:2},{name:"K129",rating:2},{name:"K130",rating:2},{name:"K131",rating:2},{name:"K132",rating:2},{name:"K133",rating:2},{name:"K134",rating:2},{name:"K135",rating:2},{name:"K136",rating:2},{name:"K137",rating:2},{name:"K138",rating:2},{name:"K139",rating:2},{name:"K140",rating:2},{name:"K141",rating:2},{name:"K142",rating:2},{name:"K143",rating:2},{name:"K144",rating:2},{name:"K145",rating:2},{name:"K146",rating:2},{name:"K147",rating:2},{name:"K148",rating:2},{name:"K149",rating:2},{name:"K150",rating:2},{name:"K151",rating:2},{name:"K152",rating:2},{name:"K153",rating:2},{name:"K154",rating:2},{name:"K155",rating:2},{name:"K156",rating:2},{name:"K157",rating:2},{name:"K158",rating:2},{name:"K159",rating:2},{name:"K160",rating:2},{name:"K161",rating:2},{name:"K162",rating:2},{name:"K163",rating:2},{name:"K164",rating:2},{name:"K165",rating:2},{name:"K166",rating:2},{name:"K167",rating:2},{name:"K168",rating:2},{name:"K169",rating:2},{name:"K170",rating:2},{name:"K171",rating:2},{name:"K172",rating:2},{name:"K173",rating:2},{name:"K174",rating:2},{name:"K175",rating:2},{name:"K176",rating:2},{name:"K177",rating:2}];assert.sameValue(array.length,2048),array.sort((a,b)=>b.rating-a.rating);const reduced=array.reduce((acc,element)=>{let letter=element.name.slice(0,1),previousLetter=acc.slice(-1);return previousLetter===letter?acc:acc+letter},"");assert.sameValue(reduced,"DGBEFHACIJK");
+const array=[{name:"A000",rating:2},{name:"A001",rating:2},{name:"A002",rating:2},{name:"A003",rating:2},{name:"A004",rating:2},{name:"A005",rating:2},{name:"A006",rating:2},{name:"A007",rating:2},{name:"A008",rating:2},{name:"A009",rating:2},{name:"A010",rating:2},{name:"A011",rating:2},{name:"A012",rating:2},{name:"A013",rating:2},{name:"A014",rating:2},{name:"A015",rating:2},{name:"A016",rating:2},{name:"A017",rating:2},{name:"A018",rating:2},{name:"A019",rating:2},{name:"A020",rating:2},{name:"A021",rating:2},{name:"A022",rating:2},{name:"A023",rating:2},{name:"A024",rating:2},{name:"A025",rating:2},{name:"A026",rating:2},{name:"A027",rating:2},{name:"A028",rating:2},{name:"A029",rating:2},{name:"A030",rating:2},{name:"A031",rating:2},{name:"A032",rating:2},{name:"A033",rating:2},{name:"A034",rating:2},{name:"A035",rating:2},{name:"A036",rating:2},{name:"A037",rating:2},{name:"A038",rating:2},{name:"A039",rating:2},{name:"A040",rating:2},{name:"A041",rating:2},{name:"A042",rating:2},{name:"A043",rating:2},{name:"A044",rating:2},{name:"A045",rating:2},{name:"A046",rating:2},{name:"A047",rating:2},{name:"A048",rating:2},{name:"A049",rating:2},{name:"A050",rating:2},{name:"A051",rating:2},{name:"A052",rating:2},{name:"A053",rating:2},{name:"A054",rating:2},{name:"A055",rating:2},{name:"A056",rating:2},{name:"A057",rating:2},{name:"A058",rating:2},{name:"A059",rating:2},{name:"A060",rating:2},{name:"A061",rating:2},{name:"A062",rating:2},{name:"A063",rating:2},{name:"A064",rating:2},{name:"A065",rating:2},{name:"A066",rating:2},{name:"A067",rating:2},{name:"A068",rating:2},{name:"A069",rating:2},{name:"A070",rating:2},{name:"A071",rating:2},{name:"A072",rating:2},{name:"A073",rating:2},{name:"A074",rating:2},{name:"A075",rating:2},{name:"A076",rating:2},{name:"A077",rating:2},{name:"A078",rating:2},{name:"A079",rating:2},{name:"A080",rating:2},{name:"A081",rating:2},{name:"A082",rating:2},{name:"A083",rating:2},{name:"A084",rating:2},{name:"A085",rating:2},{name:"A086",rating:2},{name:"A087",rating:2},{name:"A088",rating:2},{name:"A089",rating:2},{name:"A090",rating:2},{name:"A091",rating:2},{name:"A092",rating:2},{name:"A093",rating:2},{name:"A094",rating:2},{name:"A095",rating:2},{name:"A096",rating:2},{name:"A097",rating:2},{name:"A098",rating:2},{name:"A099",rating:2},{name:"A100",rating:2},{name:"A101",rating:2},{name:"A102",rating:2},{name:"A103",rating:2},{name:"A104",rating:2},{name:"A105",rating:2},{name:"A106",rating:2},{name:"A107",rating:2},{name:"A108",rating:2},{name:"A109",rating:2},{name:"A110",rating:2},{name:"A111",rating:2},{name:"A112",rating:2},{name:"A113",rating:2},{name:"A114",rating:2},{name:"A115",rating:2},{name:"A116",rating:2},{name:"A117",rating:2},{name:"A118",rating:2},{name:"A119",rating:2},{name:"A120",rating:2},{name:"A121",rating:2},{name:"A122",rating:2},{name:"A123",rating:2},{name:"A124",rating:2},{name:"A125",rating:2},{name:"A126",rating:2},{name:"A127",rating:2},{name:"A128",rating:2},{name:"A129",rating:2},{name:"A130",rating:2},{name:"A131",rating:2},{name:"A132",rating:2},{name:"A133",rating:2},{name:"A134",rating:2},{name:"A135",rating:2},{name:"A136",rating:2},{name:"A137",rating:2},{name:"A138",rating:2},{name:"A139",rating:2},{name:"A140",rating:2},{name:"A141",rating:2},{name:"A142",rating:2},{name:"A143",rating:2},{name:"A144",rating:2},{name:"A145",rating:2},{name:"A146",rating:2},{name:"A147",rating:2},{name:"A148",rating:2},{name:"A149",rating:2},{name:"A150",rating:2},{name:"A151",rating:2},{name:"A152",rating:2},{name:"A153",rating:2},{name:"A154",rating:2},{name:"A155",rating:2},{name:"A156",rating:2},{name:"A157",rating:2},{name:"A158",rating:2},{name:"A159",rating:2},{name:"A160",rating:2},{name:"A161",rating:2},{name:"A162",rating:2},{name:"A163",rating:2},{name:"A164",rating:2},{name:"A165",rating:2},{name:"A166",rating:2},{name:"A167",rating:2},{name:"A168",rating:2},{name:"A169",rating:2},{name:"A170",rating:2},{name:"A171",rating:2},{name:"A172",rating:2},{name:"A173",rating:2},{name:"A174",rating:2},{name:"A175",rating:2},{name:"A176",rating:2},{name:"A177",rating:2},{name:"A178",rating:2},{name:"A179",rating:2},{name:"A180",rating:2},{name:"A181",rating:2},{name:"A182",rating:2},{name:"A183",rating:2},{name:"A184",rating:2},{name:"A185",rating:2},{name:"A186",rating:2},{name:"B000",rating:3},{name:"B001",rating:3},{name:"B002",rating:3},{name:"B003",rating:3},{name:"B004",rating:3},{name:"B005",rating:3},{name:"B006",rating:3},{name:"B007",rating:3},{name:"B008",rating:3},{name:"B009",rating:3},{name:"B010",rating:3},{name:"B011",rating:3},{name:"B012",rating:3},{name:"B013",rating:3},{name:"B014",rating:3},{name:"B015",rating:3},{name:"B016",rating:3},{name:"B017",rating:3},{name:"B018",rating:3},{name:"B019",rating:3},{name:"B020",rating:3},{name:"B021",rating:3},{name:"B022",rating:3},{name:"B023",rating:3},{name:"B024",rating:3},{name:"B025",rating:3},{name:"B026",rating:3},{name:"B027",rating:3},{name:"B028",rating:3},{name:"B029",rating:3},{name:"B030",rating:3},{name:"B031",rating:3},{name:"B032",rating:3},{name:"B033",rating:3},{name:"B034",rating:3},{name:"B035",rating:3},{name:"B036",rating:3},{name:"B037",rating:3},{name:"B038",rating:3},{name:"B039",rating:3},{name:"B040",rating:3},{name:"B041",rating:3},{name:"B042",rating:3},{name:"B043",rating:3},{name:"B044",rating:3},{name:"B045",rating:3},{name:"B046",rating:3},{name:"B047",rating:3},{name:"B048",rating:3},{name:"B049",rating:3},{name:"B050",rating:3},{name:"B051",rating:3},{name:"B052",rating:3},{name:"B053",rating:3},{name:"B054",rating:3},{name:"B055",rating:3},{name:"B056",rating:3},{name:"B057",rating:3},{name:"B058",rating:3},{name:"B059",rating:3},{name:"B060",rating:3},{name:"B061",rating:3},{name:"B062",rating:3},{name:"B063",rating:3},{name:"B064",rating:3},{name:"B065",rating:3},{name:"B066",rating:3},{name:"B067",rating:3},{name:"B068",rating:3},{name:"B069",rating:3},{name:"B070",rating:3},{name:"B071",rating:3},{name:"B072",rating:3},{name:"B073",rating:3},{name:"B074",rating:3},{name:"B075",rating:3},{name:"B076",rating:3},{name:"B077",rating:3},{name:"B078",rating:3},{name:"B079",rating:3},{name:"B080",rating:3},{name:"B081",rating:3},{name:"B082",rating:3},{name:"B083",rating:3},{name:"B084",rating:3},{name:"B085",rating:3},{name:"B086",rating:3},{name:"B087",rating:3},{name:"B088",rating:3},{name:"B089",rating:3},{name:"B090",rating:3},{name:"B091",rating:3},{name:"B092",rating:3},{name:"B093",rating:3},{name:"B094",rating:3},{name:"B095",rating:3},{name:"B096",rating:3},{name:"B097",rating:3},{name:"B098",rating:3},{name:"B099",rating:3},{name:"B100",rating:3},{name:"B101",rating:3},{name:"B102",rating:3},{name:"B103",rating:3},{name:"B104",rating:3},{name:"B105",rating:3},{name:"B106",rating:3},{name:"B107",rating:3},{name:"B108",rating:3},{name:"B109",rating:3},{name:"B110",rating:3},{name:"B111",rating:3},{name:"B112",rating:3},{name:"B113",rating:3},{name:"B114",rating:3},{name:"B115",rating:3},{name:"B116",rating:3},{name:"B117",rating:3},{name:"B118",rating:3},{name:"B119",rating:3},{name:"B120",rating:3},{name:"B121",rating:3},{name:"B122",rating:3},{name:"B123",rating:3},{name:"B124",rating:3},{name:"B125",rating:3},{name:"B126",rating:3},{name:"B127",rating:3},{name:"B128",rating:3},{name:"B129",rating:3},{name:"B130",rating:3},{name:"B131",rating:3},{name:"B132",rating:3},{name:"B133",rating:3},{name:"B134",rating:3},{name:"B135",rating:3},{name:"B136",rating:3},{name:"B137",rating:3},{name:"B138",rating:3},{name:"B139",rating:3},{name:"B140",rating:3},{name:"B141",rating:3},{name:"B142",rating:3},{name:"B143",rating:3},{name:"B144",rating:3},{name:"B145",rating:3},{name:"B146",rating:3},{name:"B147",rating:3},{name:"B148",rating:3},{name:"B149",rating:3},{name:"B150",rating:3},{name:"B151",rating:3},{name:"B152",rating:3},{name:"B153",rating:3},{name:"B154",rating:3},{name:"B155",rating:3},{name:"B156",rating:3},{name:"B157",rating:3},{name:"B158",rating:3},{name:"B159",rating:3},{name:"B160",rating:3},{name:"B161",rating:3},{name:"B162",rating:3},{name:"B163",rating:3},{name:"B164",rating:3},{name:"B165",rating:3},{name:"B166",rating:3},{name:"B167",rating:3},{name:"B168",rating:3},{name:"B169",rating:3},{name:"B170",rating:3},{name:"B171",rating:3},{name:"B172",rating:3},{name:"B173",rating:3},{name:"B174",rating:3},{name:"B175",rating:3},{name:"B176",rating:3},{name:"B177",rating:3},{name:"B178",rating:3},{name:"B179",rating:3},{name:"B180",rating:3},{name:"B181",rating:3},{name:"B182",rating:3},{name:"B183",rating:3},{name:"B184",rating:3},{name:"B185",rating:3},{name:"B186",rating:3},{name:"C000",rating:2},{name:"C001",rating:2},{name:"C002",rating:2},{name:"C003",rating:2},{name:"C004",rating:2},{name:"C005",rating:2},{name:"C006",rating:2},{name:"C007",rating:2},{name:"C008",rating:2},{name:"C009",rating:2},{name:"C010",rating:2},{name:"C011",rating:2},{name:"C012",rating:2},{name:"C013",rating:2},{name:"C014",rating:2},{name:"C015",rating:2},{name:"C016",rating:2},{name:"C017",rating:2},{name:"C018",rating:2},{name:"C019",rating:2},{name:"C020",rating:2},{name:"C021",rating:2},{name:"C022",rating:2},{name:"C023",rating:2},{name:"C024",rating:2},{name:"C025",rating:2},{name:"C026",rating:2},{name:"C027",rating:2},{name:"C028",rating:2},{name:"C029",rating:2},{name:"C030",rating:2},{name:"C031",rating:2},{name:"C032",rating:2},{name:"C033",rating:2},{name:"C034",rating:2},{name:"C035",rating:2},{name:"C036",rating:2},{name:"C037",rating:2},{name:"C038",rating:2},{name:"C039",rating:2},{name:"C040",rating:2},{name:"C041",rating:2},{name:"C042",rating:2},{name:"C043",rating:2},{name:"C044",rating:2},{name:"C045",rating:2},{name:"C046",rating:2},{name:"C047",rating:2},{name:"C048",rating:2},{name:"C049",rating:2},{name:"C050",rating:2},{name:"C051",rating:2},{name:"C052",rating:2},{name:"C053",rating:2},{name:"C054",rating:2},{name:"C055",rating:2},{name:"C056",rating:2},{name:"C057",rating:2},{name:"C058",rating:2},{name:"C059",rating:2},{name:"C060",rating:2},{name:"C061",rating:2},{name:"C062",rating:2},{name:"C063",rating:2},{name:"C064",rating:2},{name:"C065",rating:2},{name:"C066",rating:2},{name:"C067",rating:2},{name:"C068",rating:2},{name:"C069",rating:2},{name:"C070",rating:2},{name:"C071",rating:2},{name:"C072",rating:2},{name:"C073",rating:2},{name:"C074",rating:2},{name:"C075",rating:2},{name:"C076",rating:2},{name:"C077",rating:2},{name:"C078",rating:2},{name:"C079",rating:2},{name:"C080",rating:2},{name:"C081",rating:2},{name:"C082",rating:2},{name:"C083",rating:2},{name:"C084",rating:2},{name:"C085",rating:2},{name:"C086",rating:2},{name:"C087",rating:2},{name:"C088",rating:2},{name:"C089",rating:2},{name:"C090",rating:2},{name:"C091",rating:2},{name:"C092",rating:2},{name:"C093",rating:2},{name:"C094",rating:2},{name:"C095",rating:2},{name:"C096",rating:2},{name:"C097",rating:2},{name:"C098",rating:2},{name:"C099",rating:2},{name:"C100",rating:2},{name:"C101",rating:2},{name:"C102",rating:2},{name:"C103",rating:2},{name:"C104",rating:2},{name:"C105",rating:2},{name:"C106",rating:2},{name:"C107",rating:2},{name:"C108",rating:2},{name:"C109",rating:2},{name:"C110",rating:2},{name:"C111",rating:2},{name:"C112",rating:2},{name:"C113",rating:2},{name:"C114",rating:2},{name:"C115",rating:2},{name:"C116",rating:2},{name:"C117",rating:2},{name:"C118",rating:2},{name:"C119",rating:2},{name:"C120",rating:2},{name:"C121",rating:2},{name:"C122",rating:2},{name:"C123",rating:2},{name:"C124",rating:2},{name:"C125",rating:2},{name:"C126",rating:2},{name:"C127",rating:2},{name:"C128",rating:2},{name:"C129",rating:2},{name:"C130",rating:2},{name:"C131",rating:2},{name:"C132",rating:2},{name:"C133",rating:2},{name:"C134",rating:2},{name:"C135",rating:2},{name:"C136",rating:2},{name:"C137",rating:2},{name:"C138",rating:2},{name:"C139",rating:2},{name:"C140",rating:2},{name:"C141",rating:2},{name:"C142",rating:2},{name:"C143",rating:2},{name:"C144",rating:2},{name:"C145",rating:2},{name:"C146",rating:2},{name:"C147",rating:2},{name:"C148",rating:2},{name:"C149",rating:2},{name:"C150",rating:2},{name:"C151",rating:2},{name:"C152",rating:2},{name:"C153",rating:2},{name:"C154",rating:2},{name:"C155",rating:2},{name:"C156",rating:2},{name:"C157",rating:2},{name:"C158",rating:2},{name:"C159",rating:2},{name:"C160",rating:2},{name:"C161",rating:2},{name:"C162",rating:2},{name:"C163",rating:2},{name:"C164",rating:2},{name:"C165",rating:2},{name:"C166",rating:2},{name:"C167",rating:2},{name:"C168",rating:2},{name:"C169",rating:2},{name:"C170",rating:2},{name:"C171",rating:2},{name:"C172",rating:2},{name:"C173",rating:2},{name:"C174",rating:2},{name:"C175",rating:2},{name:"C176",rating:2},{name:"C177",rating:2},{name:"C178",rating:2},{name:"C179",rating:2},{name:"C180",rating:2},{name:"C181",rating:2},{name:"C182",rating:2},{name:"C183",rating:2},{name:"C184",rating:2},{name:"C185",rating:2},{name:"C186",rating:2},{name:"D000",rating:4},{name:"D001",rating:4},{name:"D002",rating:4},{name:"D003",rating:4},{name:"D004",rating:4},{name:"D005",rating:4},{name:"D006",rating:4},{name:"D007",rating:4},{name:"D008",rating:4},{name:"D009",rating:4},{name:"D010",rating:4},{name:"D011",rating:4},{name:"D012",rating:4},{name:"D013",rating:4},{name:"D014",rating:4},{name:"D015",rating:4},{name:"D016",rating:4},{name:"D017",rating:4},{name:"D018",rating:4},{name:"D019",rating:4},{name:"D020",rating:4},{name:"D021",rating:4},{name:"D022",rating:4},{name:"D023",rating:4},{name:"D024",rating:4},{name:"D025",rating:4},{name:"D026",rating:4},{name:"D027",rating:4},{name:"D028",rating:4},{name:"D029",rating:4},{name:"D030",rating:4},{name:"D031",rating:4},{name:"D032",rating:4},{name:"D033",rating:4},{name:"D034",rating:4},{name:"D035",rating:4},{name:"D036",rating:4},{name:"D037",rating:4},{name:"D038",rating:4},{name:"D039",rating:4},{name:"D040",rating:4},{name:"D041",rating:4},{name:"D042",rating:4},{name:"D043",rating:4},{name:"D044",rating:4},{name:"D045",rating:4},{name:"D046",rating:4},{name:"D047",rating:4},{name:"D048",rating:4},{name:"D049",rating:4},{name:"D050",rating:4},{name:"D051",rating:4},{name:"D052",rating:4},{name:"D053",rating:4},{name:"D054",rating:4},{name:"D055",rating:4},{name:"D056",rating:4},{name:"D057",rating:4},{name:"D058",rating:4},{name:"D059",rating:4},{name:"D060",rating:4},{name:"D061",rating:4},{name:"D062",rating:4},{name:"D063",rating:4},{name:"D064",rating:4},{name:"D065",rating:4},{name:"D066",rating:4},{name:"D067",rating:4},{name:"D068",rating:4},{name:"D069",rating:4},{name:"D070",rating:4},{name:"D071",rating:4},{name:"D072",rating:4},{name:"D073",rating:4},{name:"D074",rating:4},{name:"D075",rating:4},{name:"D076",rating:4},{name:"D077",rating:4},{name:"D078",rating:4},{name:"D079",rating:4},{name:"D080",rating:4},{name:"D081",rating:4},{name:"D082",rating:4},{name:"D083",rating:4},{name:"D084",rating:4},{name:"D085",rating:4},{name:"D086",rating:4},{name:"D087",rating:4},{name:"D088",rating:4},{name:"D089",rating:4},{name:"D090",rating:4},{name:"D091",rating:4},{name:"D092",rating:4},{name:"D093",rating:4},{name:"D094",rating:4},{name:"D095",rating:4},{name:"D096",rating:4},{name:"D097",rating:4},{name:"D098",rating:4},{name:"D099",rating:4},{name:"D100",rating:4},{name:"D101",rating:4},{name:"D102",rating:4},{name:"D103",rating:4},{name:"D104",rating:4},{name:"D105",rating:4},{name:"D106",rating:4},{name:"D107",rating:4},{name:"D108",rating:4},{name:"D109",rating:4},{name:"D110",rating:4},{name:"D111",rating:4},{name:"D112",rating:4},{name:"D113",rating:4},{name:"D114",rating:4},{name:"D115",rating:4},{name:"D116",rating:4},{name:"D117",rating:4},{name:"D118",rating:4},{name:"D119",rating:4},{name:"D120",rating:4},{name:"D121",rating:4},{name:"D122",rating:4},{name:"D123",rating:4},{name:"D124",rating:4},{name:"D125",rating:4},{name:"D126",rating:4},{name:"D127",rating:4},{name:"D128",rating:4},{name:"D129",rating:4},{name:"D130",rating:4},{name:"D131",rating:4},{name:"D132",rating:4},{name:"D133",rating:4},{name:"D134",rating:4},{name:"D135",rating:4},{name:"D136",rating:4},{name:"D137",rating:4},{name:"D138",rating:4},{name:"D139",rating:4},{name:"D140",rating:4},{name:"D141",rating:4},{name:"D142",rating:4},{name:"D143",rating:4},{name:"D144",rating:4},{name:"D145",rating:4},{name:"D146",rating:4},{name:"D147",rating:4},{name:"D148",rating:4},{name:"D149",rating:4},{name:"D150",rating:4},{name:"D151",rating:4},{name:"D152",rating:4},{name:"D153",rating:4},{name:"D154",rating:4},{name:"D155",rating:4},{name:"D156",rating:4},{name:"D157",rating:4},{name:"D158",rating:4},{name:"D159",rating:4},{name:"D160",rating:4},{name:"D161",rating:4},{name:"D162",rating:4},{name:"D163",rating:4},{name:"D164",rating:4},{name:"D165",rating:4},{name:"D166",rating:4},{name:"D167",rating:4},{name:"D168",rating:4},{name:"D169",rating:4},{name:"D170",rating:4},{name:"D171",rating:4},{name:"D172",rating:4},{name:"D173",rating:4},{name:"D174",rating:4},{name:"D175",rating:4},{name:"D176",rating:4},{name:"D177",rating:4},{name:"D178",rating:4},{name:"D179",rating:4},{name:"D180",rating:4},{name:"D181",rating:4},{name:"D182",rating:4},{name:"D183",rating:4},{name:"D184",rating:4},{name:"D185",rating:4},{name:"D186",rating:4},{name:"E000",rating:3},{name:"E001",rating:3},{name:"E002",rating:3},{name:"E003",rating:3},{name:"E004",rating:3},{name:"E005",rating:3},{name:"E006",rating:3},{name:"E007",rating:3},{name:"E008",rating:3},{name:"E009",rating:3},{name:"E010",rating:3},{name:"E011",rating:3},{name:"E012",rating:3},{name:"E013",rating:3},{name:"E014",rating:3},{name:"E015",rating:3},{name:"E016",rating:3},{name:"E017",rating:3},{name:"E018",rating:3},{name:"E019",rating:3},{name:"E020",rating:3},{name:"E021",rating:3},{name:"E022",rating:3},{name:"E023",rating:3},{name:"E024",rating:3},{name:"E025",rating:3},{name:"E026",rating:3},{name:"E027",rating:3},{name:"E028",rating:3},{name:"E029",rating:3},{name:"E030",rating:3},{name:"E031",rating:3},{name:"E032",rating:3},{name:"E033",rating:3},{name:"E034",rating:3},{name:"E035",rating:3},{name:"E036",rating:3},{name:"E037",rating:3},{name:"E038",rating:3},{name:"E039",rating:3},{name:"E040",rating:3},{name:"E041",rating:3},{name:"E042",rating:3},{name:"E043",rating:3},{name:"E044",rating:3},{name:"E045",rating:3},{name:"E046",rating:3},{name:"E047",rating:3},{name:"E048",rating:3},{name:"E049",rating:3},{name:"E050",rating:3},{name:"E051",rating:3},{name:"E052",rating:3},{name:"E053",rating:3},{name:"E054",rating:3},{name:"E055",rating:3},{name:"E056",rating:3},{name:"E057",rating:3},{name:"E058",rating:3},{name:"E059",rating:3},{name:"E060",rating:3},{name:"E061",rating:3},{name:"E062",rating:3},{name:"E063",rating:3},{name:"E064",rating:3},{name:"E065",rating:3},{name:"E066",rating:3},{name:"E067",rating:3},{name:"E068",rating:3},{name:"E069",rating:3},{name:"E070",rating:3},{name:"E071",rating:3},{name:"E072",rating:3},{name:"E073",rating:3},{name:"E074",rating:3},{name:"E075",rating:3},{name:"E076",rating:3},{name:"E077",rating:3},{name:"E078",rating:3},{name:"E079",rating:3},{name:"E080",rating:3},{name:"E081",rating:3},{name:"E082",rating:3},{name:"E083",rating:3},{name:"E084",rating:3},{name:"E085",rating:3},{name:"E086",rating:3},{name:"E087",rating:3},{name:"E088",rating:3},{name:"E089",rating:3},{name:"E090",rating:3},{name:"E091",rating:3},{name:"E092",rating:3},{name:"E093",rating:3},{name:"E094",rating:3},{name:"E095",rating:3},{name:"E096",rating:3},{name:"E097",rating:3},{name:"E098",rating:3},{name:"E099",rating:3},{name:"E100",rating:3},{name:"E101",rating:3},{name:"E102",rating:3},{name:"E103",rating:3},{name:"E104",rating:3},{name:"E105",rating:3},{name:"E106",rating:3},{name:"E107",rating:3},{name:"E108",rating:3},{name:"E109",rating:3},{name:"E110",rating:3},{name:"E111",rating:3},{name:"E112",rating:3},{name:"E113",rating:3},{name:"E114",rating:3},{name:"E115",rating:3},{name:"E116",rating:3},{name:"E117",rating:3},{name:"E118",rating:3},{name:"E119",rating:3},{name:"E120",rating:3},{name:"E121",rating:3},{name:"E122",rating:3},{name:"E123",rating:3},{name:"E124",rating:3},{name:"E125",rating:3},{name:"E126",rating:3},{name:"E127",rating:3},{name:"E128",rating:3},{name:"E129",rating:3},{name:"E130",rating:3},{name:"E131",rating:3},{name:"E132",rating:3},{name:"E133",rating:3},{name:"E134",rating:3},{name:"E135",rating:3},{name:"E136",rating:3},{name:"E137",rating:3},{name:"E138",rating:3},{name:"E139",rating:3},{name:"E140",rating:3},{name:"E141",rating:3},{name:"E142",rating:3},{name:"E143",rating:3},{name:"E144",rating:3},{name:"E145",rating:3},{name:"E146",rating:3},{name:"E147",rating:3},{name:"E148",rating:3},{name:"E149",rating:3},{name:"E150",rating:3},{name:"E151",rating:3},{name:"E152",rating:3},{name:"E153",rating:3},{name:"E154",rating:3},{name:"E155",rating:3},{name:"E156",rating:3},{name:"E157",rating:3},{name:"E158",rating:3},{name:"E159",rating:3},{name:"E160",rating:3},{name:"E161",rating:3},{name:"E162",rating:3},{name:"E163",rating:3},{name:"E164",rating:3},{name:"E165",rating:3},{name:"E166",rating:3},{name:"E167",rating:3},{name:"E168",rating:3},{name:"E169",rating:3},{name:"E170",rating:3},{name:"E171",rating:3},{name:"E172",rating:3},{name:"E173",rating:3},{name:"E174",rating:3},{name:"E175",rating:3},{name:"E176",rating:3},{name:"E177",rating:3},{name:"E178",rating:3},{name:"E179",rating:3},{name:"E180",rating:3},{name:"E181",rating:3},{name:"E182",rating:3},{name:"E183",rating:3},{name:"E184",rating:3},{name:"E185",rating:3},{name:"E186",rating:3},{name:"F000",rating:3},{name:"F001",rating:3},{name:"F002",rating:3},{name:"F003",rating:3},{name:"F004",rating:3},{name:"F005",rating:3},{name:"F006",rating:3},{name:"F007",rating:3},{name:"F008",rating:3},{name:"F009",rating:3},{name:"F010",rating:3},{name:"F011",rating:3},{name:"F012",rating:3},{name:"F013",rating:3},{name:"F014",rating:3},{name:"F015",rating:3},{name:"F016",rating:3},{name:"F017",rating:3},{name:"F018",rating:3},{name:"F019",rating:3},{name:"F020",rating:3},{name:"F021",rating:3},{name:"F022",rating:3},{name:"F023",rating:3},{name:"F024",rating:3},{name:"F025",rating:3},{name:"F026",rating:3},{name:"F027",rating:3},{name:"F028",rating:3},{name:"F029",rating:3},{name:"F030",rating:3},{name:"F031",rating:3},{name:"F032",rating:3},{name:"F033",rating:3},{name:"F034",rating:3},{name:"F035",rating:3},{name:"F036",rating:3},{name:"F037",rating:3},{name:"F038",rating:3},{name:"F039",rating:3},{name:"F040",rating:3},{name:"F041",rating:3},{name:"F042",rating:3},{name:"F043",rating:3},{name:"F044",rating:3},{name:"F045",rating:3},{name:"F046",rating:3},{name:"F047",rating:3},{name:"F048",rating:3},{name:"F049",rating:3},{name:"F050",rating:3},{name:"F051",rating:3},{name:"F052",rating:3},{name:"F053",rating:3},{name:"F054",rating:3},{name:"F055",rating:3},{name:"F056",rating:3},{name:"F057",rating:3},{name:"F058",rating:3},{name:"F059",rating:3},{name:"F060",rating:3},{name:"F061",rating:3},{name:"F062",rating:3},{name:"F063",rating:3},{name:"F064",rating:3},{name:"F065",rating:3},{name:"F066",rating:3},{name:"F067",rating:3},{name:"F068",rating:3},{name:"F069",rating:3},{name:"F070",rating:3},{name:"F071",rating:3},{name:"F072",rating:3},{name:"F073",rating:3},{name:"F074",rating:3},{name:"F075",rating:3},{name:"F076",rating:3},{name:"F077",rating:3},{name:"F078",rating:3},{name:"F079",rating:3},{name:"F080",rating:3},{name:"F081",rating:3},{name:"F082",rating:3},{name:"F083",rating:3},{name:"F084",rating:3},{name:"F085",rating:3},{name:"F086",rating:3},{name:"F087",rating:3},{name:"F088",rating:3},{name:"F089",rating:3},{name:"F090",rating:3},{name:"F091",rating:3},{name:"F092",rating:3},{name:"F093",rating:3},{name:"F094",rating:3},{name:"F095",rating:3},{name:"F096",rating:3},{name:"F097",rating:3},{name:"F098",rating:3},{name:"F099",rating:3},{name:"F100",rating:3},{name:"F101",rating:3},{name:"F102",rating:3},{name:"F103",rating:3},{name:"F104",rating:3},{name:"F105",rating:3},{name:"F106",rating:3},{name:"F107",rating:3},{name:"F108",rating:3},{name:"F109",rating:3},{name:"F110",rating:3},{name:"F111",rating:3},{name:"F112",rating:3},{name:"F113",rating:3},{name:"F114",rating:3},{name:"F115",rating:3},{name:"F116",rating:3},{name:"F117",rating:3},{name:"F118",rating:3},{name:"F119",rating:3},{name:"F120",rating:3},{name:"F121",rating:3},{name:"F122",rating:3},{name:"F123",rating:3},{name:"F124",rating:3},{name:"F125",rating:3},{name:"F126",rating:3},{name:"F127",rating:3},{name:"F128",rating:3},{name:"F129",rating:3},{name:"F130",rating:3},{name:"F131",rating:3},{name:"F132",rating:3},{name:"F133",rating:3},{name:"F134",rating:3},{name:"F135",rating:3},{name:"F136",rating:3},{name:"F137",rating:3},{name:"F138",rating:3},{name:"F139",rating:3},{name:"F140",rating:3},{name:"F141",rating:3},{name:"F142",rating:3},{name:"F143",rating:3},{name:"F144",rating:3},{name:"F145",rating:3},{name:"F146",rating:3},{name:"F147",rating:3},{name:"F148",rating:3},{name:"F149",rating:3},{name:"F150",rating:3},{name:"F151",rating:3},{name:"F152",rating:3},{name:"F153",rating:3},{name:"F154",rating:3},{name:"F155",rating:3},{name:"F156",rating:3},{name:"F157",rating:3},{name:"F158",rating:3},{name:"F159",rating:3},{name:"F160",rating:3},{name:"F161",rating:3},{name:"F162",rating:3},{name:"F163",rating:3},{name:"F164",rating:3},{name:"F165",rating:3},{name:"F166",rating:3},{name:"F167",rating:3},{name:"F168",rating:3},{name:"F169",rating:3},{name:"F170",rating:3},{name:"F171",rating:3},{name:"F172",rating:3},{name:"F173",rating:3},{name:"F174",rating:3},{name:"F175",rating:3},{name:"F176",rating:3},{name:"F177",rating:3},{name:"F178",rating:3},{name:"F179",rating:3},{name:"F180",rating:3},{name:"F181",rating:3},{name:"F182",rating:3},{name:"F183",rating:3},{name:"F184",rating:3},{name:"F185",rating:3},{name:"F186",rating:3},{name:"G000",rating:4},{name:"G001",rating:4},{name:"G002",rating:4},{name:"G003",rating:4},{name:"G004",rating:4},{name:"G005",rating:4},{name:"G006",rating:4},{name:"G007",rating:4},{name:"G008",rating:4},{name:"G009",rating:4},{name:"G010",rating:4},{name:"G011",rating:4},{name:"G012",rating:4},{name:"G013",rating:4},{name:"G014",rating:4},{name:"G015",rating:4},{name:"G016",rating:4},{name:"G017",rating:4},{name:"G018",rating:4},{name:"G019",rating:4},{name:"G020",rating:4},{name:"G021",rating:4},{name:"G022",rating:4},{name:"G023",rating:4},{name:"G024",rating:4},{name:"G025",rating:4},{name:"G026",rating:4},{name:"G027",rating:4},{name:"G028",rating:4},{name:"G029",rating:4},{name:"G030",rating:4},{name:"G031",rating:4},{name:"G032",rating:4},{name:"G033",rating:4},{name:"G034",rating:4},{name:"G035",rating:4},{name:"G036",rating:4},{name:"G037",rating:4},{name:"G038",rating:4},{name:"G039",rating:4},{name:"G040",rating:4},{name:"G041",rating:4},{name:"G042",rating:4},{name:"G043",rating:4},{name:"G044",rating:4},{name:"G045",rating:4},{name:"G046",rating:4},{name:"G047",rating:4},{name:"G048",rating:4},{name:"G049",rating:4},{name:"G050",rating:4},{name:"G051",rating:4},{name:"G052",rating:4},{name:"G053",rating:4},{name:"G054",rating:4},{name:"G055",rating:4},{name:"G056",rating:4},{name:"G057",rating:4},{name:"G058",rating:4},{name:"G059",rating:4},{name:"G060",rating:4},{name:"G061",rating:4},{name:"G062",rating:4},{name:"G063",rating:4},{name:"G064",rating:4},{name:"G065",rating:4},{name:"G066",rating:4},{name:"G067",rating:4},{name:"G068",rating:4},{name:"G069",rating:4},{name:"G070",rating:4},{name:"G071",rating:4},{name:"G072",rating:4},{name:"G073",rating:4},{name:"G074",rating:4},{name:"G075",rating:4},{name:"G076",rating:4},{name:"G077",rating:4},{name:"G078",rating:4},{name:"G079",rating:4},{name:"G080",rating:4},{name:"G081",rating:4},{name:"G082",rating:4},{name:"G083",rating:4},{name:"G084",rating:4},{name:"G085",rating:4},{name:"G086",rating:4},{name:"G087",rating:4},{name:"G088",rating:4},{name:"G089",rating:4},{name:"G090",rating:4},{name:"G091",rating:4},{name:"G092",rating:4},{name:"G093",rating:4},{name:"G094",rating:4},{name:"G095",rating:4},{name:"G096",rating:4},{name:"G097",rating:4},{name:"G098",rating:4},{name:"G099",rating:4},{name:"G100",rating:4},{name:"G101",rating:4},{name:"G102",rating:4},{name:"G103",rating:4},{name:"G104",rating:4},{name:"G105",rating:4},{name:"G106",rating:4},{name:"G107",rating:4},{name:"G108",rating:4},{name:"G109",rating:4},{name:"G110",rating:4},{name:"G111",rating:4},{name:"G112",rating:4},{name:"G113",rating:4},{name:"G114",rating:4},{name:"G115",rating:4},{name:"G116",rating:4},{name:"G117",rating:4},{name:"G118",rating:4},{name:"G119",rating:4},{name:"G120",rating:4},{name:"G121",rating:4},{name:"G122",rating:4},{name:"G123",rating:4},{name:"G124",rating:4},{name:"G125",rating:4},{name:"G126",rating:4},{name:"G127",rating:4},{name:"G128",rating:4},{name:"G129",rating:4},{name:"G130",rating:4},{name:"G131",rating:4},{name:"G132",rating:4},{name:"G133",rating:4},{name:"G134",rating:4},{name:"G135",rating:4},{name:"G136",rating:4},{name:"G137",rating:4},{name:"G138",rating:4},{name:"G139",rating:4},{name:"G140",rating:4},{name:"G141",rating:4},{name:"G142",rating:4},{name:"G143",rating:4},{name:"G144",rating:4},{name:"G145",rating:4},{name:"G146",rating:4},{name:"G147",rating:4},{name:"G148",rating:4},{name:"G149",rating:4},{name:"G150",rating:4},{name:"G151",rating:4},{name:"G152",rating:4},{name:"G153",rating:4},{name:"G154",rating:4},{name:"G155",rating:4},{name:"G156",rating:4},{name:"G157",rating:4},{name:"G158",rating:4},{name:"G159",rating:4},{name:"G160",rating:4},{name:"G161",rating:4},{name:"G162",rating:4},{name:"G163",rating:4},{name:"G164",rating:4},{name:"G165",rating:4},{name:"G166",rating:4},{name:"G167",rating:4},{name:"G168",rating:4},{name:"G169",rating:4},{name:"G170",rating:4},{name:"G171",rating:4},{name:"G172",rating:4},{name:"G173",rating:4},{name:"G174",rating:4},{name:"G175",rating:4},{name:"G176",rating:4},{name:"G177",rating:4},{name:"G178",rating:4},{name:"G179",rating:4},{name:"G180",rating:4},{name:"G181",rating:4},{name:"G182",rating:4},{name:"G183",rating:4},{name:"G184",rating:4},{name:"G185",rating:4},{name:"G186",rating:4},{name:"H000",rating:3},{name:"H001",rating:3},{name:"H002",rating:3},{name:"H003",rating:3},{name:"H004",rating:3},{name:"H005",rating:3},{name:"H006",rating:3},{name:"H007",rating:3},{name:"H008",rating:3},{name:"H009",rating:3},{name:"H010",rating:3},{name:"H011",rating:3},{name:"H012",rating:3},{name:"H013",rating:3},{name:"H014",rating:3},{name:"H015",rating:3},{name:"H016",rating:3},{name:"H017",rating:3},{name:"H018",rating:3},{name:"H019",rating:3},{name:"H020",rating:3},{name:"H021",rating:3},{name:"H022",rating:3},{name:"H023",rating:3},{name:"H024",rating:3},{name:"H025",rating:3},{name:"H026",rating:3},{name:"H027",rating:3},{name:"H028",rating:3},{name:"H029",rating:3},{name:"H030",rating:3},{name:"H031",rating:3},{name:"H032",rating:3},{name:"H033",rating:3},{name:"H034",rating:3},{name:"H035",rating:3},{name:"H036",rating:3},{name:"H037",rating:3},{name:"H038",rating:3},{name:"H039",rating:3},{name:"H040",rating:3},{name:"H041",rating:3},{name:"H042",rating:3},{name:"H043",rating:3},{name:"H044",rating:3},{name:"H045",rating:3},{name:"H046",rating:3},{name:"H047",rating:3},{name:"H048",rating:3},{name:"H049",rating:3},{name:"H050",rating:3},{name:"H051",rating:3},{name:"H052",rating:3},{name:"H053",rating:3},{name:"H054",rating:3},{name:"H055",rating:3},{name:"H056",rating:3},{name:"H057",rating:3},{name:"H058",rating:3},{name:"H059",rating:3},{name:"H060",rating:3},{name:"H061",rating:3},{name:"H062",rating:3},{name:"H063",rating:3},{name:"H064",rating:3},{name:"H065",rating:3},{name:"H066",rating:3},{name:"H067",rating:3},{name:"H068",rating:3},{name:"H069",rating:3},{name:"H070",rating:3},{name:"H071",rating:3},{name:"H072",rating:3},{name:"H073",rating:3},{name:"H074",rating:3},{name:"H075",rating:3},{name:"H076",rating:3},{name:"H077",rating:3},{name:"H078",rating:3},{name:"H079",rating:3},{name:"H080",rating:3},{name:"H081",rating:3},{name:"H082",rating:3},{name:"H083",rating:3},{name:"H084",rating:3},{name:"H085",rating:3},{name:"H086",rating:3},{name:"H087",rating:3},{name:"H088",rating:3},{name:"H089",rating:3},{name:"H090",rating:3},{name:"H091",rating:3},{name:"H092",rating:3},{name:"H093",rating:3},{name:"H094",rating:3},{name:"H095",rating:3},{name:"H096",rating:3},{name:"H097",rating:3},{name:"H098",rating:3},{name:"H099",rating:3},{name:"H100",rating:3},{name:"H101",rating:3},{name:"H102",rating:3},{name:"H103",rating:3},{name:"H104",rating:3},{name:"H105",rating:3},{name:"H106",rating:3},{name:"H107",rating:3},{name:"H108",rating:3},{name:"H109",rating:3},{name:"H110",rating:3},{name:"H111",rating:3},{name:"H112",rating:3},{name:"H113",rating:3},{name:"H114",rating:3},{name:"H115",rating:3},{name:"H116",rating:3},{name:"H117",rating:3},{name:"H118",rating:3},{name:"H119",rating:3},{name:"H120",rating:3},{name:"H121",rating:3},{name:"H122",rating:3},{name:"H123",rating:3},{name:"H124",rating:3},{name:"H125",rating:3},{name:"H126",rating:3},{name:"H127",rating:3},{name:"H128",rating:3},{name:"H129",rating:3},{name:"H130",rating:3},{name:"H131",rating:3},{name:"H132",rating:3},{name:"H133",rating:3},{name:"H134",rating:3},{name:"H135",rating:3},{name:"H136",rating:3},{name:"H137",rating:3},{name:"H138",rating:3},{name:"H139",rating:3},{name:"H140",rating:3},{name:"H141",rating:3},{name:"H142",rating:3},{name:"H143",rating:3},{name:"H144",rating:3},{name:"H145",rating:3},{name:"H146",rating:3},{name:"H147",rating:3},{name:"H148",rating:3},{name:"H149",rating:3},{name:"H150",rating:3},{name:"H151",rating:3},{name:"H152",rating:3},{name:"H153",rating:3},{name:"H154",rating:3},{name:"H155",rating:3},{name:"H156",rating:3},{name:"H157",rating:3},{name:"H158",rating:3},{name:"H159",rating:3},{name:"H160",rating:3},{name:"H161",rating:3},{name:"H162",rating:3},{name:"H163",rating:3},{name:"H164",rating:3},{name:"H165",rating:3},{name:"H166",rating:3},{name:"H167",rating:3},{name:"H168",rating:3},{name:"H169",rating:3},{name:"H170",rating:3},{name:"H171",rating:3},{name:"H172",rating:3},{name:"H173",rating:3},{name:"H174",rating:3},{name:"H175",rating:3},{name:"H176",rating:3},{name:"H177",rating:3},{name:"H178",rating:3},{name:"H179",rating:3},{name:"H180",rating:3},{name:"H181",rating:3},{name:"H182",rating:3},{name:"H183",rating:3},{name:"H184",rating:3},{name:"H185",rating:3},{name:"H186",rating:3},{name:"I000",rating:2},{name:"I001",rating:2},{name:"I002",rating:2},{name:"I003",rating:2},{name:"I004",rating:2},{name:"I005",rating:2},{name:"I006",rating:2},{name:"I007",rating:2},{name:"I008",rating:2},{name:"I009",rating:2},{name:"I010",rating:2},{name:"I011",rating:2},{name:"I012",rating:2},{name:"I013",rating:2},{name:"I014",rating:2},{name:"I015",rating:2},{name:"I016",rating:2},{name:"I017",rating:2},{name:"I018",rating:2},{name:"I019",rating:2},{name:"I020",rating:2},{name:"I021",rating:2},{name:"I022",rating:2},{name:"I023",rating:2},{name:"I024",rating:2},{name:"I025",rating:2},{name:"I026",rating:2},{name:"I027",rating:2},{name:"I028",rating:2},{name:"I029",rating:2},{name:"I030",rating:2},{name:"I031",rating:2},{name:"I032",rating:2},{name:"I033",rating:2},{name:"I034",rating:2},{name:"I035",rating:2},{name:"I036",rating:2},{name:"I037",rating:2},{name:"I038",rating:2},{name:"I039",rating:2},{name:"I040",rating:2},{name:"I041",rating:2},{name:"I042",rating:2},{name:"I043",rating:2},{name:"I044",rating:2},{name:"I045",rating:2},{name:"I046",rating:2},{name:"I047",rating:2},{name:"I048",rating:2},{name:"I049",rating:2},{name:"I050",rating:2},{name:"I051",rating:2},{name:"I052",rating:2},{name:"I053",rating:2},{name:"I054",rating:2},{name:"I055",rating:2},{name:"I056",rating:2},{name:"I057",rating:2},{name:"I058",rating:2},{name:"I059",rating:2},{name:"I060",rating:2},{name:"I061",rating:2},{name:"I062",rating:2},{name:"I063",rating:2},{name:"I064",rating:2},{name:"I065",rating:2},{name:"I066",rating:2},{name:"I067",rating:2},{name:"I068",rating:2},{name:"I069",rating:2},{name:"I070",rating:2},{name:"I071",rating:2},{name:"I072",rating:2},{name:"I073",rating:2},{name:"I074",rating:2},{name:"I075",rating:2},{name:"I076",rating:2},{name:"I077",rating:2},{name:"I078",rating:2},{name:"I079",rating:2},{name:"I080",rating:2},{name:"I081",rating:2},{name:"I082",rating:2},{name:"I083",rating:2},{name:"I084",rating:2},{name:"I085",rating:2},{name:"I086",rating:2},{name:"I087",rating:2},{name:"I088",rating:2},{name:"I089",rating:2},{name:"I090",rating:2},{name:"I091",rating:2},{name:"I092",rating:2},{name:"I093",rating:2},{name:"I094",rating:2},{name:"I095",rating:2},{name:"I096",rating:2},{name:"I097",rating:2},{name:"I098",rating:2},{name:"I099",rating:2},{name:"I100",rating:2},{name:"I101",rating:2},{name:"I102",rating:2},{name:"I103",rating:2},{name:"I104",rating:2},{name:"I105",rating:2},{name:"I106",rating:2},{name:"I107",rating:2},{name:"I108",rating:2},{name:"I109",rating:2},{name:"I110",rating:2},{name:"I111",rating:2},{name:"I112",rating:2},{name:"I113",rating:2},{name:"I114",rating:2},{name:"I115",rating:2},{name:"I116",rating:2},{name:"I117",rating:2},{name:"I118",rating:2},{name:"I119",rating:2},{name:"I120",rating:2},{name:"I121",rating:2},{name:"I122",rating:2},{name:"I123",rating:2},{name:"I124",rating:2},{name:"I125",rating:2},{name:"I126",rating:2},{name:"I127",rating:2},{name:"I128",rating:2},{name:"I129",rating:2},{name:"I130",rating:2},{name:"I131",rating:2},{name:"I132",rating:2},{name:"I133",rating:2},{name:"I134",rating:2},{name:"I135",rating:2},{name:"I136",rating:2},{name:"I137",rating:2},{name:"I138",rating:2},{name:"I139",rating:2},{name:"I140",rating:2},{name:"I141",rating:2},{name:"I142",rating:2},{name:"I143",rating:2},{name:"I144",rating:2},{name:"I145",rating:2},{name:"I146",rating:2},{name:"I147",rating:2},{name:"I148",rating:2},{name:"I149",rating:2},{name:"I150",rating:2},{name:"I151",rating:2},{name:"I152",rating:2},{name:"I153",rating:2},{name:"I154",rating:2},{name:"I155",rating:2},{name:"I156",rating:2},{name:"I157",rating:2},{name:"I158",rating:2},{name:"I159",rating:2},{name:"I160",rating:2},{name:"I161",rating:2},{name:"I162",rating:2},{name:"I163",rating:2},{name:"I164",rating:2},{name:"I165",rating:2},{name:"I166",rating:2},{name:"I167",rating:2},{name:"I168",rating:2},{name:"I169",rating:2},{name:"I170",rating:2},{name:"I171",rating:2},{name:"I172",rating:2},{name:"I173",rating:2},{name:"I174",rating:2},{name:"I175",rating:2},{name:"I176",rating:2},{name:"I177",rating:2},{name:"I178",rating:2},{name:"I179",rating:2},{name:"I180",rating:2},{name:"I181",rating:2},{name:"I182",rating:2},{name:"I183",rating:2},{name:"I184",rating:2},{name:"I185",rating:2},{name:"I186",rating:2},{name:"J000",rating:2},{name:"J001",rating:2},{name:"J002",rating:2},{name:"J003",rating:2},{name:"J004",rating:2},{name:"J005",rating:2},{name:"J006",rating:2},{name:"J007",rating:2},{name:"J008",rating:2},{name:"J009",rating:2},{name:"J010",rating:2},{name:"J011",rating:2},{name:"J012",rating:2},{name:"J013",rating:2},{name:"J014",rating:2},{name:"J015",rating:2},{name:"J016",rating:2},{name:"J017",rating:2},{name:"J018",rating:2},{name:"J019",rating:2},{name:"J020",rating:2},{name:"J021",rating:2},{name:"J022",rating:2},{name:"J023",rating:2},{name:"J024",rating:2},{name:"J025",rating:2},{name:"J026",rating:2},{name:"J027",rating:2},{name:"J028",rating:2},{name:"J029",rating:2},{name:"J030",rating:2},{name:"J031",rating:2},{name:"J032",rating:2},{name:"J033",rating:2},{name:"J034",rating:2},{name:"J035",rating:2},{name:"J036",rating:2},{name:"J037",rating:2},{name:"J038",rating:2},{name:"J039",rating:2},{name:"J040",rating:2},{name:"J041",rating:2},{name:"J042",rating:2},{name:"J043",rating:2},{name:"J044",rating:2},{name:"J045",rating:2},{name:"J046",rating:2},{name:"J047",rating:2},{name:"J048",rating:2},{name:"J049",rating:2},{name:"J050",rating:2},{name:"J051",rating:2},{name:"J052",rating:2},{name:"J053",rating:2},{name:"J054",rating:2},{name:"J055",rating:2},{name:"J056",rating:2},{name:"J057",rating:2},{name:"J058",rating:2},{name:"J059",rating:2},{name:"J060",rating:2},{name:"J061",rating:2},{name:"J062",rating:2},{name:"J063",rating:2},{name:"J064",rating:2},{name:"J065",rating:2},{name:"J066",rating:2},{name:"J067",rating:2},{name:"J068",rating:2},{name:"J069",rating:2},{name:"J070",rating:2},{name:"J071",rating:2},{name:"J072",rating:2},{name:"J073",rating:2},{name:"J074",rating:2},{name:"J075",rating:2},{name:"J076",rating:2},{name:"J077",rating:2},{name:"J078",rating:2},{name:"J079",rating:2},{name:"J080",rating:2},{name:"J081",rating:2},{name:"J082",rating:2},{name:"J083",rating:2},{name:"J084",rating:2},{name:"J085",rating:2},{name:"J086",rating:2},{name:"J087",rating:2},{name:"J088",rating:2},{name:"J089",rating:2},{name:"J090",rating:2},{name:"J091",rating:2},{name:"J092",rating:2},{name:"J093",rating:2},{name:"J094",rating:2},{name:"J095",rating:2},{name:"J096",rating:2},{name:"J097",rating:2},{name:"J098",rating:2},{name:"J099",rating:2},{name:"J100",rating:2},{name:"J101",rating:2},{name:"J102",rating:2},{name:"J103",rating:2},{name:"J104",rating:2},{name:"J105",rating:2},{name:"J106",rating:2},{name:"J107",rating:2},{name:"J108",rating:2},{name:"J109",rating:2},{name:"J110",rating:2},{name:"J111",rating:2},{name:"J112",rating:2},{name:"J113",rating:2},{name:"J114",rating:2},{name:"J115",rating:2},{name:"J116",rating:2},{name:"J117",rating:2},{name:"J118",rating:2},{name:"J119",rating:2},{name:"J120",rating:2},{name:"J121",rating:2},{name:"J122",rating:2},{name:"J123",rating:2},{name:"J124",rating:2},{name:"J125",rating:2},{name:"J126",rating:2},{name:"J127",rating:2},{name:"J128",rating:2},{name:"J129",rating:2},{name:"J130",rating:2},{name:"J131",rating:2},{name:"J132",rating:2},{name:"J133",rating:2},{name:"J134",rating:2},{name:"J135",rating:2},{name:"J136",rating:2},{name:"J137",rating:2},{name:"J138",rating:2},{name:"J139",rating:2},{name:"J140",rating:2},{name:"J141",rating:2},{name:"J142",rating:2},{name:"J143",rating:2},{name:"J144",rating:2},{name:"J145",rating:2},{name:"J146",rating:2},{name:"J147",rating:2},{name:"J148",rating:2},{name:"J149",rating:2},{name:"J150",rating:2},{name:"J151",rating:2},{name:"J152",rating:2},{name:"J153",rating:2},{name:"J154",rating:2},{name:"J155",rating:2},{name:"J156",rating:2},{name:"J157",rating:2},{name:"J158",rating:2},{name:"J159",rating:2},{name:"J160",rating:2},{name:"J161",rating:2},{name:"J162",rating:2},{name:"J163",rating:2},{name:"J164",rating:2},{name:"J165",rating:2},{name:"J166",rating:2},{name:"J167",rating:2},{name:"J168",rating:2},{name:"J169",rating:2},{name:"J170",rating:2},{name:"J171",rating:2},{name:"J172",rating:2},{name:"J173",rating:2},{name:"J174",rating:2},{name:"J175",rating:2},{name:"J176",rating:2},{name:"J177",rating:2},{name:"J178",rating:2},{name:"J179",rating:2},{name:"J180",rating:2},{name:"J181",rating:2},{name:"J182",rating:2},{name:"J183",rating:2},{name:"J184",rating:2},{name:"J185",rating:2},{name:"J186",rating:2},{name:"K000",rating:2},{name:"K001",rating:2},{name:"K002",rating:2},{name:"K003",rating:2},{name:"K004",rating:2},{name:"K005",rating:2},{name:"K006",rating:2},{name:"K007",rating:2},{name:"K008",rating:2},{name:"K009",rating:2},{name:"K010",rating:2},{name:"K011",rating:2},{name:"K012",rating:2},{name:"K013",rating:2},{name:"K014",rating:2},{name:"K015",rating:2},{name:"K016",rating:2},{name:"K017",rating:2},{name:"K018",rating:2},{name:"K019",rating:2},{name:"K020",rating:2},{name:"K021",rating:2},{name:"K022",rating:2},{name:"K023",rating:2},{name:"K024",rating:2},{name:"K025",rating:2},{name:"K026",rating:2},{name:"K027",rating:2},{name:"K028",rating:2},{name:"K029",rating:2},{name:"K030",rating:2},{name:"K031",rating:2},{name:"K032",rating:2},{name:"K033",rating:2},{name:"K034",rating:2},{name:"K035",rating:2},{name:"K036",rating:2},{name:"K037",rating:2},{name:"K038",rating:2},{name:"K039",rating:2},{name:"K040",rating:2},{name:"K041",rating:2},{name:"K042",rating:2},{name:"K043",rating:2},{name:"K044",rating:2},{name:"K045",rating:2},{name:"K046",rating:2},{name:"K047",rating:2},{name:"K048",rating:2},{name:"K049",rating:2},{name:"K050",rating:2},{name:"K051",rating:2},{name:"K052",rating:2},{name:"K053",rating:2},{name:"K054",rating:2},{name:"K055",rating:2},{name:"K056",rating:2},{name:"K057",rating:2},{name:"K058",rating:2},{name:"K059",rating:2},{name:"K060",rating:2},{name:"K061",rating:2},{name:"K062",rating:2},{name:"K063",rating:2},{name:"K064",rating:2},{name:"K065",rating:2},{name:"K066",rating:2},{name:"K067",rating:2},{name:"K068",rating:2},{name:"K069",rating:2},{name:"K070",rating:2},{name:"K071",rating:2},{name:"K072",rating:2},{name:"K073",rating:2},{name:"K074",rating:2},{name:"K075",rating:2},{name:"K076",rating:2},{name:"K077",rating:2},{name:"K078",rating:2},{name:"K079",rating:2},{name:"K080",rating:2},{name:"K081",rating:2},{name:"K082",rating:2},{name:"K083",rating:2},{name:"K084",rating:2},{name:"K085",rating:2},{name:"K086",rating:2},{name:"K087",rating:2},{name:"K088",rating:2},{name:"K089",rating:2},{name:"K090",rating:2},{name:"K091",rating:2},{name:"K092",rating:2},{name:"K093",rating:2},{name:"K094",rating:2},{name:"K095",rating:2},{name:"K096",rating:2},{name:"K097",rating:2},{name:"K098",rating:2},{name:"K099",rating:2},{name:"K100",rating:2},{name:"K101",rating:2},{name:"K102",rating:2},{name:"K103",rating:2},{name:"K104",rating:2},{name:"K105",rating:2},{name:"K106",rating:2},{name:"K107",rating:2},{name:"K108",rating:2},{name:"K109",rating:2},{name:"K110",rating:2},{name:"K111",rating:2},{name:"K112",rating:2},{name:"K113",rating:2},{name:"K114",rating:2},{name:"K115",rating:2},{name:"K116",rating:2},{name:"K117",rating:2},{name:"K118",rating:2},{name:"K119",rating:2},{name:"K120",rating:2},{name:"K121",rating:2},{name:"K122",rating:2},{name:"K123",rating:2},{name:"K124",rating:2},{name:"K125",rating:2},{name:"K126",rating:2},{name:"K127",rating:2},{name:"K128",rating:2},{name:"K129",rating:2},{name:"K130",rating:2},{name:"K131",rating:2},{name:"K132",rating:2},{name:"K133",rating:2},{name:"K134",rating:2},{name:"K135",rating:2},{name:"K136",rating:2},{name:"K137",rating:2},{name:"K138",rating:2},{name:"K139",rating:2},{name:"K140",rating:2},{name:"K141",rating:2},{name:"K142",rating:2},{name:"K143",rating:2},{name:"K144",rating:2},{name:"K145",rating:2},{name:"K146",rating:2},{name:"K147",rating:2},{name:"K148",rating:2},{name:"K149",rating:2},{name:"K150",rating:2},{name:"K151",rating:2},{name:"K152",rating:2},{name:"K153",rating:2},{name:"K154",rating:2},{name:"K155",rating:2},{name:"K156",rating:2},{name:"K157",rating:2},{name:"K158",rating:2},{name:"K159",rating:2},{name:"K160",rating:2},{name:"K161",rating:2},{name:"K162",rating:2},{name:"K163",rating:2},{name:"K164",rating:2},{name:"K165",rating:2},{name:"K166",rating:2},{name:"K167",rating:2},{name:"K168",rating:2},{name:"K169",rating:2},{name:"K170",rating:2},{name:"K171",rating:2},{name:"K172",rating:2},{name:"K173",rating:2},{name:"K174",rating:2},{name:"K175",rating:2},{name:"K176",rating:2},{name:"K177",rating:2}];assert.sameValue(array.length,2048),array.sort((a,b)=>b.rating-a.rating);const reduced=array.reduce((acc,element)=>{const letter=element.name.slice(0,1);return acc.slice(-1)===letter?acc:acc+letter},"");assert.sameValue(reduced,"DGBEFHACIJK");␊



test262/test/language/module-code/eval-rqstd-once.js 58


Differences (-oxc|+esbuild):
-import{}from"./eval-rqstd-once_FIXTURE.js";import"./eval-rqstd-once_FIXTURE.js";import*as ns1 from"./eval-rqstd-once_FIXTURE.js";import dflt1 from"./eval-rqstd-once_FIXTURE.js";export{}from"./eval-rqstd-once_FIXTURE.js";import dflt2 from"./eval-rqstd-once_FIXTURE.js";export*from"./eval-rqstd-once_FIXTURE.js";export*as ns2 from"./eval-rqstd-once_FIXTURE.js";export*as class from"./eval-rqstd-once_FIXTURE.js";import dflt3,*as ns3 from"./eval-rqstd-once_FIXTURE.js";export default null;var global=fnGlobalObject();assert.sameValue(global.test262,262,"global property was defined");
+import"./eval-rqstd-once_FIXTURE.js";import"./eval-rqstd-once_FIXTURE.js";import"./eval-rqstd-once_FIXTURE.js";import"./eval-rqstd-once_FIXTURE.js";export{}from"./eval-rqstd-once_FIXTURE.js";import"./eval-rqstd-once_FIXTURE.js";export*from"./eval-rqstd-once_FIXTURE.js";export*as ns2 from"./eval-rqstd-once_FIXTURE.js";export*as class from"./eval-rqstd-once_FIXTURE.js";import"./eval-rqstd-once_FIXTURE.js";export default null;var global=fnGlobalObject();assert.sameValue(global.test262,262,"global property was defined");␊



test262/test/language/module-code/instn-once.js 57


Differences (-oxc|+esbuild):
-import{}from"./instn-once.js";import"./instn-once.js";import*as ns1 from"./instn-once.js";import dflt1 from"./instn-once.js";export{}from"./instn-once.js";import dflt2 from"./instn-once.js";export*from"./instn-once.js";export*as ns2 from"./instn-once.js";import dflt3,*as ns from"./instn-once.js";export default null;let x;
+import"./instn-once.js";import"./instn-once.js";import"./instn-once.js";import"./instn-once.js";export{}from"./instn-once.js";import"./instn-once.js";export*from"./instn-once.js";export*as ns2 from"./instn-once.js";import"./instn-once.js";export default null;let x;␊



test262/test/language/module-code/instn-named-err-not-found-dflt.js 6


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import x from"./instn-named-err-not-found-empty_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-named-err-not-found-empty_FIXTURE.js";␊



test262/test/language/module-code/instn-star-err-not-found.js 10


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import*as ns from"./instn-star-err-not-found-faulty_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-star-err-not-found-faulty_FIXTURE.js";␊



test262/test/language/statementList/block-let-declaration.js 1


Differences (-oxc|+esbuild):
-let a,b=42,c;b;
+let a,b=42,c;␊



test262/test/language/statementList/block-with-statment-let-declaration.js 1


Differences (-oxc|+esbuild):
-let a,b=42,c;b;
+let a,b=42,c;␊



test262/test/intl402/Temporal/PlainMonthDay/prototype/toJSON/calendarname.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"05-02"],[["gregory"],"1972-05-02[u-ca=gregory]"]],options={get calendarName(){return TemporalHelpers.assertUnreachable("calendarName should not be accessed"),""}};for(let[args,expected]of tests){let monthday=new Temporal.PlainMonthDay(5,2,...args),result=monthday.toJSON(options);assert.sameValue(result,expected)}
+const tests=[[[],"05-02"],[["gregory"],"1972-05-02[u-ca=gregory]"]],options={get calendarName(){return TemporalHelpers.assertUnreachable("calendarName should not be accessed"),""}};for(const[args,expected]of tests){const result=new Temporal.PlainMonthDay(5,2,...args).toJSON(options);assert.sameValue(result,expected)}␊



test262/test/intl402/Temporal/PlainMonthDay/prototype/toString/calendarname-critical.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"1972-05-02[!u-ca=iso8601]","built-in ISO"],[["gregory"],"1972-05-02[!u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let monthday=new Temporal.PlainMonthDay(5,2,...args),result=monthday.toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}
+const tests=[[[],"1972-05-02[!u-ca=iso8601]","built-in ISO"],[["gregory"],"1972-05-02[!u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainMonthDay(5,2,...args).toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}␊



test262/test/intl402/Temporal/PlainMonthDay/prototype/toString/calendarname-always.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"1972-05-02[u-ca=iso8601]","built-in ISO"],[["gregory"],"1972-05-02[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let monthday=new Temporal.PlainMonthDay(5,2,...args),result=monthday.toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}
+const tests=[[[],"1972-05-02[u-ca=iso8601]","built-in ISO"],[["gregory"],"1972-05-02[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainMonthDay(5,2,...args).toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}␊



test262/test/intl402/Temporal/PlainMonthDay/prototype/toString/calendarname-never.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"05-02","built-in ISO"],[["gregory"],"1972-05-02","built-in Gregorian"]];for(let[args,expected,description]of tests){let monthday=new Temporal.PlainMonthDay(5,2,...args),result=monthday.toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}
+const tests=[[[],"05-02","built-in ISO"],[["gregory"],"1972-05-02","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainMonthDay(5,2,...args).toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}␊



test262/test/intl402/Temporal/PlainMonthDay/prototype/toString/calendarname-auto.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"05-02","built-in ISO"],[["gregory"],"1972-05-02[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let monthday=new Temporal.PlainMonthDay(5,2,...args),result=monthday.toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}
+const tests=[[[],"05-02","built-in ISO"],[["gregory"],"1972-05-02[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainMonthDay(5,2,...args).toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}␊



test262/test/intl402/Temporal/PlainMonthDay/prototype/toString/calendarname-undefined.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"05-02","built-in ISO"],[["gregory"],"1972-05-02[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let monthday=new Temporal.PlainMonthDay(5,2,...args),result=monthday.toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}
+const tests=[[[],"05-02","built-in ISO"],[["gregory"],"1972-05-02[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainMonthDay(5,2,...args).toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}␊



test262/test/language/future-reserved-words/interface.js 31


Differences (-oxc|+esbuild):
-var interface=1,interface=2;{let interface=3}{let interface=4}{let interface=5}{let interface=6}
+var interface=1,interface=2;{let interface2=3}{let interface2=4}␊



test262/test/language/future-reserved-words/implements.js 33


Differences (-oxc|+esbuild):
-var implements=1,implements=2;{let implements=3}{let implements=4}{let implements=5}{let implements=6}
+var implements=1,implements=2;{let implements2=3}{let implements2=4}␊



test262/test/language/future-reserved-words/protected.js 31


Differences (-oxc|+esbuild):
-var protected=1,protected=2;{let protected=3}{let protected=4}{let protected=5}{let protected=6}
+var protected=1,protected=2;{let protected2=3}{let protected2=4}␊



test262/test/language/future-reserved-words/public.js 25


Differences (-oxc|+esbuild):
-var public=1,public=2;{let public=3}{let public=4}{let public=5}{let public=6}
+var public=1,public=2;{let public2=3}{let public2=4}␊



test262/test/language/future-reserved-words/package.js 27


Differences (-oxc|+esbuild):
-var package=1,package=2;{let package=3}{let package=4}{let package=5}{let package=6}
+var package=1,package=2;{let package2=3}{let package2=4}␊



test262/test/language/future-reserved-words/private.js 27


Differences (-oxc|+esbuild):
-var private=1,private=2;{let private=3}{let private=4}{let private=5}{let private=6}
+var private=1,private=2;{let private2=3}{let private2=4}␊



test262/test/language/future-reserved-words/static.js 25


Differences (-oxc|+esbuild):
-var static=1,static=2;{let static=3}{let static=4}{let static=5}{let static=6}
+var static=1,static=2;{let static2=3}{let static2=4}␊



test262/test/intl402/Temporal/PlainDateTime/prototype/toString/calendarname-critical.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"1976-11-18T15:23:00[!u-ca=iso8601]","built-in ISO"],[["gregory"],"1976-11-18T15:23:00[!u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args),result=date.toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}
+const tests=[[[],"1976-11-18T15:23:00[!u-ca=iso8601]","built-in ISO"],[["gregory"],"1976-11-18T15:23:00[!u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args).toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}␊



test262/test/language/block-scope/shadowing/let-declaration-shadowing-catch-parameter.js 8


Differences (-oxc|+esbuild):
-try{throw"stuff1"}catch(a){{let a=3;assert.sameValue(a,3)}assert.sameValue(a,"stuff1")}
+try{throw"stuff1"}catch(a){assert.sameValue(3,3),assert.sameValue(a,"stuff1")}␊



test262/test/intl402/Temporal/PlainDateTime/prototype/toString/calendarname-always.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"1976-11-18T15:23:00[u-ca=iso8601]","built-in ISO"],[["gregory"],"1976-11-18T15:23:00[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args),result=date.toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}
+const tests=[[[],"1976-11-18T15:23:00[u-ca=iso8601]","built-in ISO"],[["gregory"],"1976-11-18T15:23:00[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args).toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}␊



test262/test/intl402/Temporal/PlainDateTime/prototype/toString/calendarname-never.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"1976-11-18T15:23:00","built-in ISO"],[["gregory"],"1976-11-18T15:23:00","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args),result=date.toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}
+const tests=[[[],"1976-11-18T15:23:00","built-in ISO"],[["gregory"],"1976-11-18T15:23:00","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args).toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}␊



test262/test/intl402/Temporal/PlainDateTime/prototype/toString/calendarname-auto.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"1976-11-18T15:23:00","built-in ISO"],[["gregory"],"1976-11-18T15:23:00[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args),result=date.toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}
+const tests=[[[],"1976-11-18T15:23:00","built-in ISO"],[["gregory"],"1976-11-18T15:23:00[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args).toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}␊



test262/test/intl402/Temporal/PlainDateTime/prototype/toString/calendarname-undefined.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"1976-11-18T15:23:00","built-in ISO"],[["gregory"],"1976-11-18T15:23:00[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let datetime=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args),result=datetime.toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}
+const tests=[[[],"1976-11-18T15:23:00","built-in ISO"],[["gregory"],"1976-11-18T15:23:00[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDateTime(1976,11,18,15,23,0,0,0,0,...args).toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}␊



test262/test/language/module-code/eval-rqstd-order.js 58


Differences (-oxc|+esbuild):
-assert.sameValue(fnGlobalObject().test262,"123456789");import{}from"./eval-rqstd-order-1_FIXTURE.js";import"./eval-rqstd-order-2_FIXTURE.js";import*as ns1 from"./eval-rqstd-order-3_FIXTURE.js";import dflt1 from"./eval-rqstd-order-4_FIXTURE.js";export{}from"./eval-rqstd-order-5_FIXTURE.js";import dflt2 from"./eval-rqstd-order-6_FIXTURE.js";export*from"./eval-rqstd-order-7_FIXTURE.js";import dflt3,*as ns2 from"./eval-rqstd-order-8_FIXTURE.js";export*as ns3 from"./eval-rqstd-order-9_FIXTURE.js";
+assert.sameValue(fnGlobalObject().test262,"123456789");import"./eval-rqstd-order-1_FIXTURE.js";import"./eval-rqstd-order-2_FIXTURE.js";import"./eval-rqstd-order-3_FIXTURE.js";import"./eval-rqstd-order-4_FIXTURE.js";export{}from"./eval-rqstd-order-5_FIXTURE.js";import"./eval-rqstd-order-6_FIXTURE.js";export*from"./eval-rqstd-order-7_FIXTURE.js";import"./eval-rqstd-order-8_FIXTURE.js";export*as ns3 from"./eval-rqstd-order-9_FIXTURE.js";␊



test262/test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-var.js 5


Differences (-oxc|+esbuild):
-{{var f}var f}
+var f,f;␊



test262/test/intl402/Temporal/PlainYearMonth/from/reference-day-chinese.js 16


Differences (-oxc|+esbuild):
-const months2022TestData=[["M01",1,1],["M02",2,3],["M03",3,1],["M04",4,1],["M05",5,30],["M06",6,29],["M07",7,29],["M08",8,27],["M09",9,26],["M10",10,25],["M11",11,24],["M12",12,23]];for(let[nonLeapMonthCode,month,referenceISODay]of months2022TestData){let year=new Temporal.PlainDate(2022,3,1).withCalendar("chinese").year,leapMonthCode=nonLeapMonthCode+"L",fields={year,monthCode:leapMonthCode,calendar:"chinese"},result=Temporal.PlainYearMonth.from(fields,{overflow:"constrain"});if(result.month!==month){assert.sameValue(result.month,month+1);let nextMonth=months2022TestData.find(e=>e[1]===month+1);[nonLeapMonthCode,month,referenceISODay]=nextMonth}TemporalHelpers.assertPlainYearMonth(result,year,month,nonLeapMonthCode,`Chinese intercalary month ${leapMonthCode} does not exist in year 2022 (overflow constrain)`,void 0,void 0,referenceISODay),assert.throws(RangeError,()=>Temporal.PlainYearMonth.from(fields,{overflow:"reject"}),`Chinese intercalary month ${leapMonthCode} does not exist in year 2022 (overflow reject)`)}const leapMonthsTestData=[["M01L",1651,2,20],["M02L",2023,3,22],["M03L",1993,4,22],["M04L",2020,5,23],["M05L",2009,6,23],["M06L",2017,7,23],["M07L",2006,8,24],["M08L",1995,9,25],["M09L",2014,10,24],["M10L",1984,11,23],["M11L",1517,12,23]];for(let[monthCode,relatedYear,month,referenceISODay,isoYear=relatedYear,isoMonth=month]of leapMonthsTestData){let year=new Temporal.PlainDate(relatedYear,3,1).withCalendar("chinese").year,result=Temporal.PlainYearMonth.from({year,monthCode,calendar:"chinese"});TemporalHelpers.assertPlainYearMonth(result,year,month,monthCode,`Date of sample Chinese intercalary month ${monthCode}`,void 0,void 0,referenceISODay);let isoYearMonth=result.toString().slice(0,7);assert.sameValue(isoYearMonth,`${isoYear}-${String(isoMonth).padStart(2,"0")}`,`${year}-${monthCode} starts in ISO month ${isoYear}-${isoMonth}`)}
+const months2022TestData=[["M01",1,1],["M02",2,3],["M03",3,1],["M04",4,1],["M05",5,30],["M06",6,29],["M07",7,29],["M08",8,27],["M09",9,26],["M10",10,25],["M11",11,24],["M12",12,23]];for(let[nonLeapMonthCode,month,referenceISODay]of months2022TestData){const year=new Temporal.PlainDate(2022,3,1).withCalendar("chinese").year,leapMonthCode=nonLeapMonthCode+"L",fields={year,monthCode:leapMonthCode,calendar:"chinese"},result=Temporal.PlainYearMonth.from(fields,{overflow:"constrain"});result.month!==month&&(assert.sameValue(result.month,month+1),[nonLeapMonthCode,month,referenceISODay]=months2022TestData.find(e=>e[1]===month+1)),TemporalHelpers.assertPlainYearMonth(result,year,month,nonLeapMonthCode,`Chinese intercalary month ${leapMonthCode} does not exist in year 2022 (overflow constrain)`,void 0,void 0,referenceISODay),assert.throws(RangeError,()=>Temporal.PlainYearMonth.from(fields,{overflow:"reject"}),`Chinese intercalary month ${leapMonthCode} does not exist in year 2022 (overflow reject)`)}const leapMonthsTestData=[["M01L",1651,2,20],["M02L",2023,3,22],["M03L",1993,4,22],["M04L",2020,5,23],["M05L",2009,6,23],["M06L",2017,7,23],["M07L",2006,8,24],["M08L",1995,9,25],["M09L",2014,10,24],["M10L",1984,11,23],["M11L",1517,12,23]];for(const[monthCode,relatedYear,month,referenceISODay,isoYear=relatedYear,isoMonth=month]of leapMonthsTestData){const year=new Temporal.PlainDate(relatedYear,3,1).withCalendar("chinese").year,result=Temporal.PlainYearMonth.from({year,monthCode,calendar:"chinese"});TemporalHelpers.assertPlainYearMonth(result,year,month,monthCode,`Date of sample Chinese intercalary month ${monthCode}`,void 0,void 0,referenceISODay);const isoYearMonth=result.toString().slice(0,7);assert.sameValue(isoYearMonth,`${isoYear}-${String(isoMonth).padStart(2,"0")}`,`${year}-${monthCode} starts in ISO month ${isoYear}-${isoMonth}`)}␊



test262/test/built-ins/Uint8Array/prototype/toHex/receiver-not-uint8array.js 4


Differences (-oxc|+esbuild):
-var toHex=Uint8Array.prototype.toHex;testWithTypedArrayConstructors(function(TA){if(TA===Uint8Array)return;var sample=new TA(2);assert.throws(TypeError,function(){Uint8Array.prototype.toHex.call(sample)})}),assert.throws(TypeError,function(){Uint8Array.prototype.toHex.call([])}),assert.throws(TypeError,function(){toHex()});
+var toHex=Uint8Array.prototype.toHex;testWithTypedArrayConstructors(function(TA){if(TA!==Uint8Array){var sample=new TA(2);assert.throws(TypeError,function(){Uint8Array.prototype.toHex.call(sample)})}}),assert.throws(TypeError,function(){Uint8Array.prototype.toHex.call([])}),assert.throws(TypeError,function(){toHex()});␊



test262/test/language/module-code/instn-resolve-empty-import.js 5


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import{}from"./instn-resolve-empty-import_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-resolve-empty-import_FIXTURE.js";␊



test262/test/language/block-scope/leave/x-after-break-to-label.js 7


Differences (-oxc|+esbuild):
-{let x=2;L:{let x=3;assert.sameValue(x,3);break L}assert.sameValue(x,2)}
+{let x=2;L:{assert.sameValue(3,3);break L}assert.sameValue(x,2)}␊



test262/test/language/block-scope/leave/x-before-continue.js 15


Differences (-oxc|+esbuild):
-do{let x=4;assert.sameValue(x,4);{let x=5;assert.sameValue(x,5);continue}}while(!1);
+do{assert.sameValue(4,4);{assert.sameValue(5,5);continue}}while(!1);␊



test262/test/language/module-code/instn-named-err-not-found-as.js 11


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import{x as y}from"./instn-named-err-not-found-empty_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-named-err-not-found-empty_FIXTURE.js";␊



test262/test/language/expressions/comma/S11.14_A2.1_T1.js 87


Differences (-oxc|+esbuild):
-var x=1;if((x,2)!=2)throw new Test262Error("#2: var x = 1; (x, 2) === 2. Actual: "+(x,2));var y=2;if(y!==2)throw new Test262Error("#3: var y = 2; (1, y) === 2. Actual: "+y);var x=1,y=2;if((x,y)!==2)throw new Test262Error("#4: var x = 1; var y = 2; (x, y) === 2. Actual: "+(x,y));var x=1;if((x,x)!==1)throw new Test262Error("#5: var x = 1; (x, x) === 1. Actual: "+(x,x));var objectx={},objecty={};if(objectx.prop=!0,objecty.prop=1.1,(objectx.prop=!1,objecty.prop)!==objecty.prop)throw new Test262Error("#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop = false, objecty.prop) === objecty.prop. Actual: "+(objectx.prop=!1,objecty.prop));if(objectx.prop!==!1)throw new Test262Error("#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; objectx.prop = false, objecty.prop; objectx.prop === false");
+var x=1,y=2;if(y!==2)throw new Test262Error("#3: var y = 2; (1, y) === 2. Actual: "+y);var x=1,y=2;if(y!==2)throw new Test262Error("#4: var x = 1; var y = 2; (x, y) === 2. Actual: "+y);var x=1;if(x!==1)throw new Test262Error("#5: var x = 1; (x, x) === 1. Actual: "+x);var objectx=new Object,objecty=new Object;if(objectx.prop=!0,objecty.prop=1.1,objectx.prop=!1,objecty.prop!==objecty.prop)throw new Test262Error("#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop = false, objecty.prop) === objecty.prop. Actual: "+(objectx.prop=!1,objecty.prop));if(objectx.prop!==!1)throw new Test262Error("#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; objectx.prop = false, objecty.prop; objectx.prop === false");␊



test262/test/language/module-code/eval-gtbndng-local-bndng-const.js 9


Differences (-oxc|+esbuild):
-const constBinding=89;assert.sameValue(constBinding,89);
+const constBinding=89;assert.sameValue(89,89);␊



test262/test/built-ins/decodeURI/S15.1.3.1_A2.4_T1.js 2


Differences (-oxc|+esbuild):
-for(var errorCount=0,count=0,indexP,indexO=0,indexB1=224;indexB1<=239;indexB1++)for(var hexB1=decimalToPercentHexString(indexB1),indexB2=128;indexB2<=191;indexB2++){if(indexB1===224&&indexB2<=159||indexB1===237&&160<=indexB2)continue;for(var hexB1_B2=hexB1+decimalToPercentHexString(indexB2),indexB3=128;indexB3<=191;indexB3++){count++;var hexB1_B2_B3=hexB1_B2+decimalToPercentHexString(indexB3),index=(indexB1&15)*4096+(indexB2&63)*64+(indexB3&63);if(decodeURI(hexB1_B2_B3)===String.fromCharCode(index))continue;if(indexO===0)indexO=index;else if(index-indexP!=1){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}
+for(var errorCount=0,count=0,indexP,indexO=0,indexB1=224;indexB1<=239;indexB1++)for(var hexB1=decimalToPercentHexString(indexB1),indexB2=128;indexB2<=191;indexB2++)if(!(indexB1===224&&indexB2<=159)&&!(indexB1===237&&160<=indexB2))for(var hexB1_B2=hexB1+decimalToPercentHexString(indexB2),indexB3=128;indexB3<=191;indexB3++){count++;var hexB1_B2_B3=hexB1_B2+decimalToPercentHexString(indexB3),index=(indexB1&15)*4096+(indexB2&63)*64+(indexB3&63);if(decodeURI(hexB1_B2_B3)!==String.fromCharCode(index)){if(indexO===0)indexO=index;else if(index-indexP!==1){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}␊



test262/test/intl402/Temporal/PlainYearMonth/prototype/toString/calendarname-critical.js 15


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05-01[!u-ca=iso8601]","built-in ISO"],[["gregory"],"2000-05-01[!u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let yearmonth=new Temporal.PlainYearMonth(2e3,5,...args),result=yearmonth.toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}
+const tests=[[[],"2000-05-01[!u-ca=iso8601]","built-in ISO"],[["gregory"],"2000-05-01[!u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainYearMonth(2e3,5,...args).toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}␊



test262/test/intl402/Temporal/PlainYearMonth/prototype/toString/calendarname-always.js 15


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05-01[u-ca=iso8601]","built-in ISO"],[["gregory"],"2000-05-01[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let yearmonth=new Temporal.PlainYearMonth(2e3,5,...args),result=yearmonth.toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}
+const tests=[[[],"2000-05-01[u-ca=iso8601]","built-in ISO"],[["gregory"],"2000-05-01[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainYearMonth(2e3,5,...args).toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}␊



test262/test/intl402/Temporal/PlainYearMonth/prototype/toString/calendarname-never.js 15


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05","built-in ISO"],[["gregory"],"2000-05-01","built-in Gregorian"]];for(let[args,expected,description]of tests){let yearmonth=new Temporal.PlainYearMonth(2e3,5,...args),result=yearmonth.toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}
+const tests=[[[],"2000-05","built-in ISO"],[["gregory"],"2000-05-01","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainYearMonth(2e3,5,...args).toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}␊



test262/test/intl402/Temporal/PlainYearMonth/prototype/toString/calendarname-auto.js 15


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05","built-in ISO"],[["gregory"],"2000-05-01[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let yearmonth=new Temporal.PlainYearMonth(2e3,5,...args),result=yearmonth.toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}
+const tests=[[[],"2000-05","built-in ISO"],[["gregory"],"2000-05-01[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainYearMonth(2e3,5,...args).toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}␊



test262/test/language/expressions/exponentiation/exp-operator-evaluation-order.js 1


Differences (-oxc|+esbuild):
-var capture=[],leftValue={valueOf(){return capture.push("leftValue"),3}},rightValue={valueOf(){return capture.push("rightValue"),2}};(capture.push("left"),leftValue)**(capture.push("right"),rightValue),assert.sameValue(capture[0],"left","Expected the 1st element captured to be 'left'"),assert.sameValue(capture[1],"right","Expected the 2nd element captured to be 'right'"),assert.sameValue(capture[2],"leftValue","Expected the 3rd element captured to be 'leftValue'"),assert.sameValue(capture[3],"rightValue","Expected the 4th element captured to be 'rightValue'");
+var capture=[],leftValue={valueOf(){return capture.push("leftValue"),3}},rightValue={valueOf(){return capture.push("rightValue"),2}};capture.push("left"),leftValue**(capture.push("right"),rightValue),assert.sameValue(capture[0],"left","Expected the 1st element captured to be 'left'"),assert.sameValue(capture[1],"right","Expected the 2nd element captured to be 'right'"),assert.sameValue(capture[2],"leftValue","Expected the 3rd element captured to be 'leftValue'"),assert.sameValue(capture[3],"rightValue","Expected the 4th element captured to be 'rightValue'");␊



test262/test/intl402/Temporal/PlainYearMonth/prototype/toString/calendarname-undefined.js 15


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05","built-in ISO"],[["gregory"],"2000-05-01[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let yearmonth=new Temporal.PlainYearMonth(2e3,5,...args),result=yearmonth.toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}
+const tests=[[[],"2000-05","built-in ISO"],[["gregory"],"2000-05-01[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainYearMonth(2e3,5,...args).toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}␊



test262/test/language/expressions/exponentiation/exp-operator-precedence-unary-expression-semantics.js 1


Differences (-oxc|+esbuild):
-assert.sameValue(-(3**2),-9,"-(3 ** 2) === -9"),assert.sameValue(+(3**2),9,"+(3 ** 2) === 9"),assert.sameValue(~(3**2),-10,"~(3 ** 2) === -10"),assert.sameValue(!(3**2),!1,"!(3 ** 2) === false"),assert.sameValue(2**-2,.25);var o={p:1};assert.sameValue(2**delete o.p,2,"delete o.p -> true -> ToNumber(true) -> 1"),assert.sameValue(2**void 0,NaN,"void 1 -> undefined -> ToNumber(undefined) -> NaN"),assert.sameValue(2**"number",NaN,"typeof 1 -> 'number' -> ToNumber('number') -> NaN");var s="2",n=2;assert.sameValue(2**+s,4,"+s -> +'2' -> 2 -> ToNumber(2) -> 2"),assert.sameValue(2**+n,4,"+s -> +2 -> 2 -> ToNumber(2) -> 2"),assert.sameValue(2**-s,.25,"-s -> -'2' -> -2 -> ToNumber(-2) -> -2"),assert.sameValue(2**-n,.25,"-s -> -2 -> -2 -> ToNumber(-2) -> -2"),assert.sameValue(2**~s,.125,"~s -> ~'2' -> -3 -> ToNumber(-3) -> -3"),assert.sameValue(2**~n,.125,"~s -> ~2 -> -3 -> ToNumber(-3) -> -3"),assert.sameValue(2**!s,1,"!s -> !'2' -> false -> ToNumber(false) -> 0"),assert.sameValue(2**!n,1,"!s -> !2 -> false -> ToNumber(false) -> 0");var capture=[],leftValue={valueOf(){return capture.push("leftValue"),3}},rightValue={valueOf(){return capture.push("rightValue"),2}};(capture.push("left"),leftValue)**+(capture.push("right"),rightValue),assert.sameValue(capture[0],"left","Expected the 1st element captured to be 'left'"),assert.sameValue(capture[1],"right","Expected the 2nd element captured to be 'right'"),assert.sameValue(capture[2],"rightValue","Expected the 3rd element captured to be 'rightValue'"),assert.sameValue(capture[3],"leftValue","Expected the 4th element captured to be 'leftValue'");
+assert.sameValue(-(3**2),-9,"-(3 ** 2) === -9"),assert.sameValue(+(3**2),9,"+(3 ** 2) === 9"),assert.sameValue(~(3**2),-10,"~(3 ** 2) === -10"),assert.sameValue(!(3**2),!1,"!(3 ** 2) === false"),assert.sameValue(2**-2,.25);var o={p:1};assert.sameValue(2**delete o.p,2,"delete o.p -> true -> ToNumber(true) -> 1"),assert.sameValue(2**void 0,NaN,"void 1 -> undefined -> ToNumber(undefined) -> NaN"),assert.sameValue(2**"number",NaN,"typeof 1 -> 'number' -> ToNumber('number') -> NaN");var s="2",n=2;assert.sameValue(2**+s,4,"+s -> +'2' -> 2 -> ToNumber(2) -> 2"),assert.sameValue(2**+n,4,"+s -> +2 -> 2 -> ToNumber(2) -> 2"),assert.sameValue(2**-s,.25,"-s -> -'2' -> -2 -> ToNumber(-2) -> -2"),assert.sameValue(2**-n,.25,"-s -> -2 -> -2 -> ToNumber(-2) -> -2"),assert.sameValue(2**~s,.125,"~s -> ~'2' -> -3 -> ToNumber(-3) -> -3"),assert.sameValue(2**~n,.125,"~s -> ~2 -> -3 -> ToNumber(-3) -> -3"),assert.sameValue(2**!s,1,"!s -> !'2' -> false -> ToNumber(false) -> 0"),assert.sameValue(2**!n,1,"!s -> !2 -> false -> ToNumber(false) -> 0");var capture=[],leftValue={valueOf(){return capture.push("leftValue"),3}},rightValue={valueOf(){return capture.push("rightValue"),2}};capture.push("left"),leftValue**(capture.push("right"),+rightValue),assert.sameValue(capture[0],"left","Expected the 1st element captured to be 'left'"),assert.sameValue(capture[1],"right","Expected the 2nd element captured to be 'right'"),assert.sameValue(capture[2],"rightValue","Expected the 3rd element captured to be 'rightValue'"),assert.sameValue(capture[3],"leftValue","Expected the 4th element captured to be 'leftValue'");␊



test262/test/language/module-code/instn-named-err-ambiguous.js 6


Differences (-oxc|+esbuild):
-$DONOTEVALUATE();import{x}from"./instn-named-err-ambiguous_FIXTURE.js";
+$DONOTEVALUATE();import"./instn-named-err-ambiguous_FIXTURE.js";␊



test262/test/built-ins/decodeURI/S15.1.3.1_A2.5_T1.js 2


Differences (-oxc|+esbuild):
-for(var errorCount=0,count=0,indexP,indexO=0,indexB1=240;indexB1<=244;indexB1++)for(var hexB1=decimalToPercentHexString(indexB1),indexB2=128;indexB2<=191;indexB2++){if(indexB1===240&&indexB2<=159||indexB1===244&&indexB2>=144)continue;for(var hexB1_B2=hexB1+decimalToPercentHexString(indexB2),indexB3=128;indexB3<=191;indexB3++)for(var hexB1_B2_B3=hexB1_B2+decimalToPercentHexString(indexB3),indexB4=128;indexB4<=191;indexB4++){var hexB1_B2_B3_B4=hexB1_B2_B3+decimalToPercentHexString(indexB4);count++;var index=(indexB1&7)*262144+(indexB2&63)*4096+(indexB3&63)*64+(indexB4&63),L=(index-65536&1023)+56320,H=(index-65536>>10&1023)+55296;if(decodeURI(hexB1_B2_B3_B4)===String.fromCharCode(H,L))continue;if(indexO===0)indexO=index;else if(index-indexP!=1){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}
+for(var errorCount=0,count=0,indexP,indexO=0,indexB1=240;indexB1<=244;indexB1++)for(var hexB1=decimalToPercentHexString(indexB1),indexB2=128;indexB2<=191;indexB2++)if(!(indexB1===240&&indexB2<=159)&&!(indexB1===244&&indexB2>=144))for(var hexB1_B2=hexB1+decimalToPercentHexString(indexB2),indexB3=128;indexB3<=191;indexB3++)for(var hexB1_B2_B3=hexB1_B2+decimalToPercentHexString(indexB3),indexB4=128;indexB4<=191;indexB4++){var hexB1_B2_B3_B4=hexB1_B2_B3+decimalToPercentHexString(indexB4);count++;var index=(indexB1&7)*262144+(indexB2&63)*4096+(indexB3&63)*64+(indexB4&63),L=(index-65536&1023)+56320,H=(index-65536>>10&1023)+55296;if(decodeURI(hexB1_B2_B3_B4)!==String.fromCharCode(H,L)){if(indexO===0)indexO=index;else if(index-indexP!==1){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}␊



test262/test/language/module-code/eval-self-once.js 57


Differences (-oxc|+esbuild):
-import{}from"./eval-self-once.js";import"./eval-self-once.js";import*as ns1 from"./eval-self-once.js";import dflt1 from"./eval-self-once.js";export{}from"./eval-self-once.js";import dflt2 from"./eval-self-once.js";export*from"./eval-self-once.js";export*as ns2 from"./eval-self-once.js";import dflt3,*as ns from"./eval-self-once.js";export default null;var global=fnGlobalObject();assert.sameValue(global.test262,void 0,"global property initially unset"),global.test262=262,assert.sameValue(global.test262,262,"global property was defined");
+import"./eval-self-once.js";import"./eval-self-once.js";import"./eval-self-once.js";import"./eval-self-once.js";export{}from"./eval-self-once.js";import"./eval-self-once.js";export*from"./eval-self-once.js";export*as ns2 from"./eval-self-once.js";import"./eval-self-once.js";export default null;var global=fnGlobalObject();assert.sameValue(global.test262,void 0,"global property initially unset"),global.test262=262,assert.sameValue(global.test262,262,"global property was defined");␊



test262/test/language/module-code/top-level-await/module-import-rejection-tick.js 8


Differences (-oxc|+esbuild):
-import foo from"./module-import-rejection-tick_FIXTURE.js";throw new Test262Error("this should be unreachable");
+import"./module-import-rejection-tick_FIXTURE.js";throw new Test262Error("this should be unreachable");␊



test262/test/language/module-code/top-level-await/module-import-rejection.js 13


Differences (-oxc|+esbuild):
-import{resolved}from"./module-import-rejection_FIXTURE.js";throw new Test262Error("this should be unreachable");
+import"./module-import-rejection_FIXTURE.js";throw new Test262Error("this should be unreachable");␊



test262/test/language/expressions/function/param-eval-non-strict.js 23


Differences (-oxc|+esbuild):
-(function foo(eval){});



test262/test/language/module-code/top-level-await/module-import-rejection-body.js 8


Differences (-oxc|+esbuild):
-import foo from"./module-import-rejection-body_FIXTURE.js";throw new Test262Error("this should be unreachable");
+import"./module-import-rejection-body_FIXTURE.js";throw new Test262Error("this should be unreachable");␊



test262/test/language/expressions/function/param-duplicated-non-strict.js 22


Differences (-oxc|+esbuild):
-(function foo(a,a){});



test262/test/language/expressions/function/name-eval-non-strict.js 20


Differences (-oxc|+esbuild):
-(function eval(){});



test262/test/language/expressions/function/name-arguments-non-strict.js 25


Differences (-oxc|+esbuild):
-(function arguments(){});



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-literal-string.js 9


Differences (-oxc|+esbuild):
-export var name1=await"";export var{x=await""}={};
+export var name1=await"",{x=await""}={};␊



test262/test/language/expressions/function/param-arguments-non-strict.js 28


Differences (-oxc|+esbuild):
-(function foo(arguments){});



test262/test/language/expressions/logical-or/S11.11.2_A2.1_T2.js 3


Differences (-oxc|+esbuild):
-try{throw x||!0,new Test262Error("#1.1: x || true throw ReferenceError. Actual: "+(x||!0))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x || true throw ReferenceError. Actual: "+e)}
+try{throw x,new Test262Error("#1.1: x || true throw ReferenceError. Actual: "+(x||!0))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x || true throw ReferenceError. Actual: "+e)}␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-identifier.js 9


Differences (-oxc|+esbuild):
-var foo=1;export var name1=await foo;export var{x=await foo}={};
+var foo=1;export var name1=await foo,{x=await foo}={};␊



test262/test/intl402/Temporal/ZonedDateTime/prototype/equals/sub-minute-offset.js 1


Differences (-oxc|+esbuild):
-const expectedNanoseconds=BigInt(2670*1e9),instance=new Temporal.ZonedDateTime(expectedNanoseconds,"Africa/Monrovia");let result=instance.equals("1970-01-01T00:00:00-00:45[Africa/Monrovia]");assert.sameValue(result,!0,"UTC offset rounded to minutes is accepted"),result=instance.equals("1970-01-01T00:00:00-00:44:30[Africa/Monrovia]"),assert.sameValue(result,!0,"Unrounded sub-minute UTC offset also accepted"),assert.throws(RangeError,()=>instance.equals("1970-01-01T00:00:00-00:44:30[-00:45]"),"minute rounding not supported for offset time zones");const properties={offset:"-00:45",year:1970,month:1,day:1,minute:44,second:30,timeZone:"Africa/Monrovia"};assert.throws(RangeError,()=>instance.equals(properties),"no fuzzy matching is done on offset in property bag");
+const expectedNanoseconds=BigInt(267e10),instance=new Temporal.ZonedDateTime(expectedNanoseconds,"Africa/Monrovia");let result=instance.equals("1970-01-01T00:00:00-00:45[Africa/Monrovia]");assert.sameValue(result,!0,"UTC offset rounded to minutes is accepted"),result=instance.equals("1970-01-01T00:00:00-00:44:30[Africa/Monrovia]"),assert.sameValue(result,!0,"Unrounded sub-minute UTC offset also accepted"),assert.throws(RangeError,()=>instance.equals("1970-01-01T00:00:00-00:44:30[-00:45]"),"minute rounding not supported for offset time zones");const properties={offset:"-00:45",year:1970,month:1,day:1,minute:44,second:30,timeZone:"Africa/Monrovia"};assert.throws(RangeError,()=>instance.equals(properties),"no fuzzy matching is done on offset in property bag");␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-this.js 5


Differences (-oxc|+esbuild):
-export var name1=await this;export var{x=await this}={};
+export var name1=await void 0,{x=await void 0}={};␊



test262/test/language/module-code/top-level-await/syntax/export-var-await-expr-obj-literal.js 9


Differences (-oxc|+esbuild):
-export var name1=await{function(){}};export var{x=await{function(){}}}={};
+export var name1=await{function(){}},{x=await{function(){}}}={};␊



test262/test/intl402/Temporal/ZonedDateTime/prototype/toString/calendarname-critical.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC][!u-ca=iso8601]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC][!u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args),result=date.toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}
+const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC][!u-ca=iso8601]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC][!u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args).toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}␊



test262/test/intl402/Temporal/ZonedDateTime/prototype/toString/calendarname-always.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC][u-ca=iso8601]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC][u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args),result=date.toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}
+const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC][u-ca=iso8601]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC][u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args).toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}␊



test262/test/intl402/Temporal/ZonedDateTime/prototype/toString/calendarname-never.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args),result=date.toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}
+const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args).toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}␊



test262/test/intl402/Temporal/ZonedDateTime/prototype/toString/calendarname-auto.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC][u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args),result=date.toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}
+const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC][u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args).toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}␊



test262/test/intl402/Temporal/ZonedDateTime/prototype/toString/calendarname-undefined.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC][u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let datetime=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args),result=datetime.toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}
+const tests=[[[],"1970-01-01T01:01:01.987654321+00:00[UTC]","built-in ISO"],[["gregory"],"1970-01-01T01:01:01.987654321+00:00[UTC][u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.ZonedDateTime(3661987654321n,"UTC",...args).toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}␊



test262/test/built-ins/Array/prototype/unshift/clamps-to-integer-limit.js 8


Differences (-oxc|+esbuild):
-var arrayLike={};arrayLike.length=2**53-1,Array.prototype.unshift.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 - 1"),arrayLike.length=2**53,Array.prototype.unshift.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53"),arrayLike.length=9007199254740994,Array.prototype.unshift.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 + 2"),arrayLike.length=1/0,Array.prototype.unshift.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is Infinity");
+var arrayLike={};arrayLike.length=2**53-1,Array.prototype.unshift.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 - 1"),arrayLike.length=2**53,Array.prototype.unshift.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53"),arrayLike.length=2**53+2,Array.prototype.unshift.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 + 2"),arrayLike.length=1/0,Array.prototype.unshift.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is Infinity");␊



test262/test/built-ins/Array/prototype/unshift/throws-if-integer-limit-exceeded.js 8


Differences (-oxc|+esbuild):
-var arrayLike={};arrayLike.length=2**53-1,assert.throws(TypeError,function(){Array.prototype.unshift.call(arrayLike,null)},"Length is 2**53 - 1"),arrayLike.length=2**53,assert.throws(TypeError,function(){Array.prototype.unshift.call(arrayLike,null)},"Length is 2**53"),arrayLike.length=9007199254740994,assert.throws(TypeError,function(){Array.prototype.unshift.call(arrayLike,null)},"Length is 2**53 + 2"),arrayLike.length=1/0,assert.throws(TypeError,function(){Array.prototype.unshift.call(arrayLike,null)},"Length is Infinity");
+var arrayLike={};arrayLike.length=2**53-1,assert.throws(TypeError,function(){Array.prototype.unshift.call(arrayLike,null)},"Length is 2**53 - 1"),arrayLike.length=2**53,assert.throws(TypeError,function(){Array.prototype.unshift.call(arrayLike,null)},"Length is 2**53"),arrayLike.length=2**53+2,assert.throws(TypeError,function(){Array.prototype.unshift.call(arrayLike,null)},"Length is 2**53 + 2"),arrayLike.length=1/0,assert.throws(TypeError,function(){Array.prototype.unshift.call(arrayLike,null)},"Length is Infinity");␊



test262/test/built-ins/Array/prototype/slice/length-exceeding-integer-limit-proxied-array.js 8


Differences (-oxc|+esbuild):
-var array=[];array["9007199254740988"]="9007199254740988",array["9007199254740989"]="9007199254740989",array["9007199254740990"]="9007199254740990",array["9007199254740991"]="9007199254740991";var proxy=new Proxy(array,{get(t,pk,r){return pk==="length"?9007199254740994:Reflect.get(t,pk,r)}}),result=Array.prototype.slice.call(proxy,9007199254740989);assert.compareArray(result,["9007199254740989","9007199254740990"],'The value of result is expected to be ["9007199254740989", "9007199254740990"]');var result=Array.prototype.slice.call(proxy,9007199254740989,9007199254740990);assert.compareArray(result,["9007199254740989"],'The value of result is expected to be ["9007199254740989"]');var result=Array.prototype.slice.call(proxy,9007199254740989,9007199254740996);assert.compareArray(result,["9007199254740989","9007199254740990"],'The value of result is expected to be ["9007199254740989", "9007199254740990"]');var result=Array.prototype.slice.call(proxy,-2);assert.compareArray(result,["9007199254740989","9007199254740990"],'The value of result is expected to be ["9007199254740989", "9007199254740990"]');var result=Array.prototype.slice.call(proxy,-2,-1);assert.compareArray(result,["9007199254740989"],'The value of result is expected to be ["9007199254740989"]');
+var array=[];array["9007199254740988"]="9007199254740988",array["9007199254740989"]="9007199254740989",array["9007199254740990"]="9007199254740990",array["9007199254740991"]="9007199254740991";var proxy=new Proxy(array,{get(t,pk,r){return pk==="length"?2**53+2:Reflect.get(t,pk,r)}}),result=Array.prototype.slice.call(proxy,9007199254740989);assert.compareArray(result,["9007199254740989","9007199254740990"],'The value of result is expected to be ["9007199254740989", "9007199254740990"]');var result=Array.prototype.slice.call(proxy,9007199254740989,9007199254740990);assert.compareArray(result,["9007199254740989"],'The value of result is expected to be ["9007199254740989"]');var result=Array.prototype.slice.call(proxy,9007199254740989,9007199254740996);assert.compareArray(result,["9007199254740989","9007199254740990"],'The value of result is expected to be ["9007199254740989", "9007199254740990"]');var result=Array.prototype.slice.call(proxy,-2);assert.compareArray(result,["9007199254740989","9007199254740990"],'The value of result is expected to be ["9007199254740989", "9007199254740990"]');var result=Array.prototype.slice.call(proxy,-2,-1);assert.compareArray(result,["9007199254740989"],'The value of result is expected to be ["9007199254740989"]');␊



test262/test/intl402/Temporal/PlainDate/prototype/toString/calendarname-critical.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05-02[!u-ca=iso8601]","built-in ISO"],[["gregory"],"2000-05-02[!u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDate(2e3,5,2,...args),result=date.toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}
+const tests=[[[],"2000-05-02[!u-ca=iso8601]","built-in ISO"],[["gregory"],"2000-05-02[!u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDate(2e3,5,2,...args).toString({calendarName:"critical"});assert.sameValue(result,expected,`${description} calendar for calendarName = critical`)}␊



test262/test/intl402/Temporal/PlainDate/prototype/toString/calendarname-always.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05-02[u-ca=iso8601]","built-in ISO"],[["gregory"],"2000-05-02[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDate(2e3,5,2,...args),result=date.toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}
+const tests=[[[],"2000-05-02[u-ca=iso8601]","built-in ISO"],[["gregory"],"2000-05-02[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDate(2e3,5,2,...args).toString({calendarName:"always"});assert.sameValue(result,expected,`${description} calendar for calendarName = always`)}␊



test262/test/intl402/Temporal/PlainDate/prototype/toString/calendarname-never.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05-02","built-in ISO"],[["gregory"],"2000-05-02","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDate(2e3,5,2,...args),result=date.toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}
+const tests=[[[],"2000-05-02","built-in ISO"],[["gregory"],"2000-05-02","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDate(2e3,5,2,...args).toString({calendarName:"never"});assert.sameValue(result,expected,`${description} calendar for calendarName = never`)}␊



test262/test/intl402/Temporal/PlainDate/prototype/toString/calendarname-auto.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05-02","built-in ISO"],[["gregory"],"2000-05-02[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDate(2e3,5,2,...args),result=date.toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}
+const tests=[[[],"2000-05-02","built-in ISO"],[["gregory"],"2000-05-02[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDate(2e3,5,2,...args).toString({calendarName:"auto"});assert.sameValue(result,expected,`${description} calendar for calendarName = auto`)}␊



test262/test/intl402/Temporal/PlainDate/prototype/toString/calendarname-undefined.js 5


Differences (-oxc|+esbuild):
-const tests=[[[],"2000-05-02","built-in ISO"],[["gregory"],"2000-05-02[u-ca=gregory]","built-in Gregorian"]];for(let[args,expected,description]of tests){let date=new Temporal.PlainDate(2e3,5,2,...args),result=date.toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}
+const tests=[[[],"2000-05-02","built-in ISO"],[["gregory"],"2000-05-02[u-ca=gregory]","built-in Gregorian"]];for(const[args,expected,description]of tests){const result=new Temporal.PlainDate(2e3,5,2,...args).toString({calendarName:void 0});assert.sameValue(result,expected,`default calendarName option is auto with ${description} calendar`)}␊



test262/test/built-ins/Array/prototype/splice/length-and-deleteCount-exceeding-integer-limit.js 8


Differences (-oxc|+esbuild):
-var arrayLike={"9007199254740988":"9007199254740988","9007199254740989":"9007199254740989","9007199254740990":"9007199254740990","9007199254740991":"9007199254740991",length:9007199254740994},result=Array.prototype.splice.call(arrayLike,9007199254740989,9007199254740996);assert.compareArray(result,["9007199254740989","9007199254740990"],'The value of result is expected to be ["9007199254740989", "9007199254740990"]'),assert.sameValue(arrayLike.length,2**53-3,"The value of arrayLike.length is expected to be 2 ** 53 - 3"),assert.sameValue(arrayLike["9007199254740988"],"9007199254740988",'The value of arrayLike["9007199254740988"] is expected to be "9007199254740988"'),assert.sameValue("9007199254740989"in arrayLike,!1,'The result of evaluating ("9007199254740989" in arrayLike) is expected to be false'),assert.sameValue("9007199254740990"in arrayLike,!1,'The result of evaluating ("9007199254740990" in arrayLike) is expected to be false'),assert.sameValue(arrayLike["9007199254740991"],"9007199254740991",'The value of arrayLike["9007199254740991"] is expected to be "9007199254740991"');
+var arrayLike={"9007199254740988":"9007199254740988","9007199254740989":"9007199254740989","9007199254740990":"9007199254740990","9007199254740991":"9007199254740991",length:9007199254740994},result=Array.prototype.splice.call(arrayLike,9007199254740989,2**53+4);assert.compareArray(result,["9007199254740989","9007199254740990"],'The value of result is expected to be ["9007199254740989", "9007199254740990"]'),assert.sameValue(arrayLike.length,2**53-3,"The value of arrayLike.length is expected to be 2 ** 53 - 3"),assert.sameValue(arrayLike["9007199254740988"],"9007199254740988",'The value of arrayLike["9007199254740988"] is expected to be "9007199254740988"'),assert.sameValue("9007199254740989"in arrayLike,!1,'The result of evaluating ("9007199254740989" in arrayLike) is expected to be false'),assert.sameValue("9007199254740990"in arrayLike,!1,'The result of evaluating ("9007199254740990" in arrayLike) is expected to be false'),assert.sameValue(arrayLike["9007199254740991"],"9007199254740991",'The value of arrayLike["9007199254740991"] is expected to be "9007199254740991"');␊



test262/test/built-ins/Array/prototype/splice/clamps-length-to-integer-limit.js 8


Differences (-oxc|+esbuild):
-var arrayLike={};arrayLike.length=2**53-1,Array.prototype.splice.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 - 1"),arrayLike.length=2**53,Array.prototype.splice.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53"),arrayLike.length=9007199254740994,Array.prototype.splice.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 + 2"),arrayLike.length=1/0,Array.prototype.splice.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is Infinity");
+var arrayLike={};arrayLike.length=2**53-1,Array.prototype.splice.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 - 1"),arrayLike.length=2**53,Array.prototype.splice.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53"),arrayLike.length=2**53+2,Array.prototype.splice.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 + 2"),arrayLike.length=1/0,Array.prototype.splice.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is Infinity");␊



test262/test/built-ins/Temporal/PlainYearMonth/prototype/since/calendar-temporal-object.js 23


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let yearmonth=new Temporal.PlainYearMonth(2e3,5);yearmonth.since({year:2005,month:6,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainYearMonth(2e3,5).since({year:2005,month:6,calendar:temporalObject})});␊



test262/test/built-ins/Array/prototype/splice/throws-if-integer-limit-exceeded.js 8


Differences (-oxc|+esbuild):
-var arrayLike={};arrayLike.length=2**53-1,assert.throws(TypeError,function(){Array.prototype.splice.call(arrayLike,0,0,null)},"Length is 2**53 - 1"),arrayLike.length=2**53,assert.throws(TypeError,function(){Array.prototype.splice.call(arrayLike,0,0,null)},"Length is 2**53"),arrayLike.length=9007199254740994,assert.throws(TypeError,function(){Array.prototype.splice.call(arrayLike,0,0,null)},"Length is 2**53 + 2"),arrayLike.length=1/0,assert.throws(TypeError,function(){Array.prototype.splice.call(arrayLike,0,0,null)},"Length is Infinity");
+var arrayLike={};arrayLike.length=2**53-1,assert.throws(TypeError,function(){Array.prototype.splice.call(arrayLike,0,0,null)},"Length is 2**53 - 1"),arrayLike.length=2**53,assert.throws(TypeError,function(){Array.prototype.splice.call(arrayLike,0,0,null)},"Length is 2**53"),arrayLike.length=2**53+2,assert.throws(TypeError,function(){Array.prototype.splice.call(arrayLike,0,0,null)},"Length is 2**53 + 2"),arrayLike.length=1/0,assert.throws(TypeError,function(){Array.prototype.splice.call(arrayLike,0,0,null)},"Length is Infinity");␊



test262/test/language/expressions/strict-does-not-equals/S11.9.5_A2.1_T3.js 3


Differences (-oxc|+esbuild):
-try{throw y!==1,new Test262Error("#1.1: 1 !== y throw ReferenceError. Actual: "+(y!==1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 !== y throw ReferenceError. Actual: "+e)}
+try{throw y,new Test262Error("#1.1: 1 !== y throw ReferenceError. Actual: "+(y!==1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 !== y throw ReferenceError. Actual: "+e)}␊



test262/test/built-ins/RegExp/character-class-escape-non-whitespace.js 9


Differences (-oxc|+esbuild):
-var j,i,str,res,whitespaceChars=[9,10,11,12,13,32,160,5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288];for(j=0;j<65536;j++){if(j===6158||j===65279)continue;str=String.fromCharCode(j),res=str.replace(/\S+/g,"test262"),whitespaceChars.indexOf(j)>=0?assert.sameValue(res,str,"WhiteSpace character, charCode: "+j):assert.sameValue(res,"test262","Non WhiteSpace character, charCode: "+j)}
+var j,i,str,res,whitespaceChars=[9,10,11,12,13,32,160,5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288];for(j=0;j<65536;j++)j!==6158&&j!==65279&&(str=String.fromCharCode(j),res=str.replace(/\S+/g,"test262"),whitespaceChars.indexOf(j)>=0?assert.sameValue(res,str,"WhiteSpace character, charCode: "+j):assert.sameValue(res,"test262","Non WhiteSpace character, charCode: "+j));␊



test262/test/language/expressions/strict-does-not-equals/S11.9.5_A2.1_T2.js 3


Differences (-oxc|+esbuild):
-try{throw x!==1,new Test262Error("#1.1: x !== 1 throw ReferenceError. Actual: "+(x!==1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x !== 1 throw ReferenceError. Actual: "+e)}
+try{throw x,new Test262Error("#1.1: x !== 1 throw ReferenceError. Actual: "+(x!==1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x !== 1 throw ReferenceError. Actual: "+e)}␊



test262/test/language/expressions/strict-does-not-equals/S11.9.5_A2.4_T3.js 3


Differences (-oxc|+esbuild):
-try{throw x!==(x=1),new Test262Error("#1.1: x !== (x = 1) throw ReferenceError. Actual: "+(x!==(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x !== (x = 1) throw ReferenceError. Actual: "+e)}
+try{throw x,x=1,new Test262Error("#1.1: x !== (x = 1) throw ReferenceError. Actual: "+(x!==(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x !== (x = 1) throw ReferenceError. Actual: "+e)}␊



test262/test/built-ins/Temporal/PlainYearMonth/prototype/until/calendar-temporal-object.js 23


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let yearmonth=new Temporal.PlainYearMonth(2e3,5);yearmonth.until({year:2005,month:6,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainYearMonth(2e3,5).until({year:2005,month:6,calendar:temporalObject})});␊



test262/test/built-ins/Array/prototype/toSpliced/length-exceeding-array-length-limit.js 6


Differences (-oxc|+esbuild):
-var arrayLike={get 0(){throw new Test262Error("Get 0")},get"4294967295"(){throw new Test262Error("Get 4294967295")},get"4294967296"(){throw new Test262Error("Get 4294967296")},length:2**32};assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0)}),arrayLike.length=2**32-1,assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**32,assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=4294967297,assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**52-2,assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**53-1,assert.throws(TypeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**53,assert.throws(TypeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=9007199254740992,assert.throws(TypeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)});
+var arrayLike={get 0(){throw new Test262Error("Get 0")},get"4294967295"(){throw new Test262Error("Get 4294967295")},get"4294967296"(){throw new Test262Error("Get 4294967296")},length:4294967296};assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0)}),arrayLike.length=2**32-1,assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**32,assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**32+1,assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**52-2,assert.throws(RangeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**53-1,assert.throws(TypeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**53,assert.throws(TypeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)}),arrayLike.length=2**53+1,assert.throws(TypeError,function(){Array.prototype.toSpliced.call(arrayLike,0,0,1)});␊



test262/test/built-ins/Temporal/PlainYearMonth/prototype/equals/calendar-temporal-object.js 23


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let yearmonth=new Temporal.PlainYearMonth(2e3,5);yearmonth.equals({year:2005,month:6,calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.PlainYearMonth(2e3,5).equals({year:2005,month:6,calendar:temporalObject})});␊



test262/test/language/expressions/multiplication/line-terminator.js 2


Differences (-oxc|+esbuild):
-var x=18*2*9;assert.sameValue(x,324);
+var x=324;assert.sameValue(x,324);␊



test262/test/built-ins/Array/prototype/push/clamps-to-integer-limit.js 8


Differences (-oxc|+esbuild):
-var arrayLike={};arrayLike.length=2**53-1,Array.prototype.push.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 - 1"),arrayLike.length=2**53,Array.prototype.push.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53"),arrayLike.length=9007199254740994,Array.prototype.push.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 + 2"),arrayLike.length=1/0,Array.prototype.push.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is Infinity");
+var arrayLike={};arrayLike.length=2**53-1,Array.prototype.push.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 - 1"),arrayLike.length=2**53,Array.prototype.push.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53"),arrayLike.length=2**53+2,Array.prototype.push.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is 2**53 + 2"),arrayLike.length=1/0,Array.prototype.push.call(arrayLike),assert.sameValue(arrayLike.length,2**53-1,"Length is Infinity");␊



test262/test/built-ins/Array/prototype/push/throws-if-integer-limit-exceeded.js 8


Differences (-oxc|+esbuild):
-var arrayLike={};arrayLike.length=2**53-1,assert.throws(TypeError,function(){Array.prototype.push.call(arrayLike,null)},"Length is 2**53 - 1"),arrayLike.length=2**53,assert.throws(TypeError,function(){Array.prototype.push.call(arrayLike,null)},"Length is 2**53"),arrayLike.length=9007199254740994,assert.throws(TypeError,function(){Array.prototype.push.call(arrayLike,null)},"Length is 2**53 + 2"),arrayLike.length=1/0,assert.throws(TypeError,function(){Array.prototype.push.call(arrayLike,null)},"Length is Infinity");
+var arrayLike={};arrayLike.length=2**53-1,assert.throws(TypeError,function(){Array.prototype.push.call(arrayLike,null)},"Length is 2**53 - 1"),arrayLike.length=2**53,assert.throws(TypeError,function(){Array.prototype.push.call(arrayLike,null)},"Length is 2**53"),arrayLike.length=2**53+2,assert.throws(TypeError,function(){Array.prototype.push.call(arrayLike,null)},"Length is 2**53 + 2"),arrayLike.length=1/0,assert.throws(TypeError,function(){Array.prototype.push.call(arrayLike,null)},"Length is Infinity");␊



test262/test/intl402/DurationFormat/prototype/formatToParts/invalid-negative-duration-throws.js 99


Differences (-oxc|+esbuild):
-const df=new Intl.DurationFormat;assert.throws(RangeError,()=>{df.formatToParts({hours:-1,minutes:10}),"Throws when mixing negative and positive values"}),assert.throws(RangeError,()=>{df.formatToParts({hours:2,minutes:-10}),"Throws when mixing negative and positive values"});
+const df=new Intl.DurationFormat;assert.throws(RangeError,()=>{df.formatToParts({hours:-1,minutes:10})}),assert.throws(RangeError,()=>{df.formatToParts({hours:2,minutes:-10})});␊



test262/test/language/expressions/call/spread-err-sngl-err-expr-throws.js 13


Differences (-oxc|+esbuild):
-assert.throws(Test262Error,function(){(function(){})(...function*(){throw new Test262Error}())});
+assert.throws(Test262Error,function(){[...function*(){throw new Test262Error}()]});␊



test262/test/language/expressions/call/spread-err-mult-err-itr-get-call.js 15


Differences (-oxc|+esbuild):
-var iter={};iter[Symbol.iterator]=function(){throw new Test262Error},assert.throws(Test262Error,function(){(function(){})(0,...iter)});
+var iter={};iter[Symbol.iterator]=function(){throw new Test262Error},assert.throws(Test262Error,function(){[...iter]});␊



test262/test/language/expressions/call/spread-err-sngl-err-unresolvable.js 13


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){(function(){})(...unresolvableReference)});
+assert.throws(ReferenceError,function(){[...unresolvableReference]});␊



test262/test/intl402/DurationFormat/prototype/format/invalid-negative-duration-throws.js 99


Differences (-oxc|+esbuild):
-const df=new Intl.DurationFormat;assert.throws(RangeError,()=>{df.format({hours:-1,minutes:10}),"Throws when mixing negative and positive values"}),assert.throws(RangeError,()=>{df.format({hours:2,minutes:-10}),"Throws when mixing negative and positive values"});
+const df=new Intl.DurationFormat;assert.throws(RangeError,()=>{df.format({hours:-1,minutes:10})}),assert.throws(RangeError,()=>{df.format({hours:2,minutes:-10})});␊



test262/test/language/expressions/call/spread-err-sngl-err-itr-get-value.js 13


Differences (-oxc|+esbuild):
-var iter={};iter[Symbol.iterator]=function(){return null},assert.throws(TypeError,function(){(function(){})(...iter)});
+var iter={};iter[Symbol.iterator]=function(){return null},assert.throws(TypeError,function(){[...iter]});␊



test262/test/intl402/DurationFormat/prototype/format/rounding-mode-trunc-for-seconds.js 1


Differences (-oxc|+esbuild):
-const durations=[{fractionalDigits:0,numericValue:1.5,duration:{seconds:1,milliseconds:500}},{fractionalDigits:3,numericValue:.0015,duration:{milliseconds:1,microseconds:500}},{fractionalDigits:6,numericValue:15e-7,duration:{microseconds:1,nanoseconds:500}}];for(let{numericValue,fractionalDigits,duration}of durations){let df=new Intl.DurationFormat("en",{seconds:"numeric",fractionalDigits}),nf=new Intl.NumberFormat("en",{maximumFractionDigits:fractionalDigits,roundingMode:"trunc"}),expected=nf.format(numericValue);assert.sameValue(df.format(duration),expected,'Intl.DurationFormat should format seconds, milliseconds and microseconds with `roundingMode: "trunc"`')}
+const durations=[{fractionalDigits:0,numericValue:1.5,duration:{seconds:1,milliseconds:500}},{fractionalDigits:3,numericValue:.0015,duration:{milliseconds:1,microseconds:500}},{fractionalDigits:6,numericValue:15e-7,duration:{microseconds:1,nanoseconds:500}}];for(const{numericValue,fractionalDigits,duration}of durations){const df=new Intl.DurationFormat("en",{seconds:"numeric",fractionalDigits}),expected=new Intl.NumberFormat("en",{maximumFractionDigits:fractionalDigits,roundingMode:"trunc"}).format(numericValue);assert.sameValue(df.format(duration),expected,'Intl.DurationFormat should format seconds, milliseconds and microseconds with `roundingMode: "trunc"`')}␊



test262/test/language/expressions/call/spread-err-mult-err-expr-throws.js 15


Differences (-oxc|+esbuild):
-assert.throws(Test262Error,function(){(function(){})(0,...function*(){throw new Test262Error}())});
+assert.throws(Test262Error,function(){[...function*(){throw new Test262Error}()]});␊



test262/test/language/expressions/call/spread-err-mult-err-obj-unresolvable.js 17


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){(function(){})({a:0,...unresolvableReference})});
+assert.throws(ReferenceError,function(){({...unresolvableReference})});␊



test262/test/language/expressions/call/spread-err-sngl-err-itr-get-call.js 13


Differences (-oxc|+esbuild):
-var iter={};iter[Symbol.iterator]=function(){throw new Test262Error},assert.throws(Test262Error,function(){(function(){})(...iter)});
+var iter={};iter[Symbol.iterator]=function(){throw new Test262Error},assert.throws(Test262Error,function(){[...iter]});␊



test262/test/intl402/DurationFormat/constructor-options-style-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,"short"],["long","long"],["short","short"],["narrow","narrow"],["digital","digital"],[{toString(){return"short"}},"short"],[{toString(){return"long"}},"long"],[{toString(){return"narrow"}},"narrow"],[{toString(){return"digital"}},"digital"]];for(let[validOption,expected]of validOptions){let df=new Intl.DurationFormat([],{style:validOption}),resolvedOptions=df.resolvedOptions();assert.sameValue(resolvedOptions.style,expected)}
+const validOptions=[[void 0,"short"],["long","long"],["short","short"],["narrow","narrow"],["digital","digital"],[{toString(){return"short"}},"short"],[{toString(){return"long"}},"long"],[{toString(){return"narrow"}},"narrow"],[{toString(){return"digital"}},"digital"]];for(const[validOption,expected]of validOptions){const resolvedOptions=new Intl.DurationFormat([],{style:validOption}).resolvedOptions();assert.sameValue(resolvedOptions.style,expected)}␊



test262/test/language/expressions/call/spread-err-mult-err-unresolvable.js 15


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){(function(){})(0,...unresolvableReference)});
+assert.throws(ReferenceError,function(){[...unresolvableReference]});␊



test262/test/intl402/DateTimeFormat/constructor-options-dateStyle-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,void 0],["full","full"],["long","long"],["medium","medium"],["short","short"],[{toString(){return"full"}},"full"],[{valueOf(){return"long"},toString:void 0},"long"]];for(let[dateStyle,expected]of validOptions){let dtf=new Intl.DateTimeFormat("en",{dateStyle}),options=dtf.resolvedOptions();assert.sameValue(options.dateStyle,expected);let propdesc=Object.getOwnPropertyDescriptor(options,"dateStyle");expected===void 0?assert.sameValue(propdesc,void 0):assert.sameValue(propdesc.value,expected)}
+const validOptions=[[void 0,void 0],["full","full"],["long","long"],["medium","medium"],["short","short"],[{toString(){return"full"}},"full"],[{valueOf(){return"long"},toString:void 0},"long"]];for(const[dateStyle,expected]of validOptions){const options=new Intl.DateTimeFormat("en",{dateStyle}).resolvedOptions();assert.sameValue(options.dateStyle,expected);const propdesc=Object.getOwnPropertyDescriptor(options,"dateStyle");expected===void 0?assert.sameValue(propdesc,void 0):assert.sameValue(propdesc.value,expected)}␊



test262/test/language/expressions/call/spread-err-sngl-err-obj-unresolvable.js 13


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){(function(){})({...unresolvableReference})});
+assert.throws(ReferenceError,function(){({...unresolvableReference})});␊



test262/test/language/expressions/object/cpn-obj-lit-computed-property-name-from-exponetiation-expression.js 4


Differences (-oxc|+esbuild):
-let o={[2**2]:4};assert.sameValue(o[2**2],4),assert.sameValue(o[String(2**2)],4);
+let o={4:4};assert.sameValue(o[2**2],4),assert.sameValue(o[String(2**2)],4);␊



test262/test/language/expressions/object/prop-def-id-eval-error.js 3


Differences (-oxc|+esbuild):
-var obj={attr:null,get[Symbol.unscopables](){throw new Test262Error}};assert.throws(Test262Error,function(){with(obj)({attr})});
+var obj={attr:null,get[Symbol.unscopables](){throw new Test262Error}};assert.throws(Test262Error,function(){with(obj)attr});␊



test262/test/built-ins/Temporal/ZonedDateTime/from/argument-propertybag-calendar-iso-string.js 4


Differences (-oxc|+esbuild):
-for(let calendar of["2020-01-01","2020-01-01[u-ca=iso8601]","2020-01-01T00:00:00.000000000","2020-01-01T00:00:00.000000000[u-ca=iso8601]","01-01","01-01[u-ca=iso8601]","2020-01","2020-01[u-ca=iso8601]"]){let timeZone="UTC",arg={year:1970,monthCode:"M01",day:1,timeZone,calendar},result=Temporal.ZonedDateTime.from(arg);assert.sameValue(result.calendarId,"iso8601",`Calendar created from string "${calendar}"`),assert.sameValue(result.calendarId,"iso8601","calendar string is iso8601")}
+for(const calendar of["2020-01-01","2020-01-01[u-ca=iso8601]","2020-01-01T00:00:00.000000000","2020-01-01T00:00:00.000000000[u-ca=iso8601]","01-01","01-01[u-ca=iso8601]","2020-01","2020-01[u-ca=iso8601]"]){const arg={year:1970,monthCode:"M01",day:1,timeZone:"UTC",calendar},result=Temporal.ZonedDateTime.from(arg);assert.sameValue(result.calendarId,"iso8601",`Calendar created from string "${calendar}"`),assert.sameValue(result.calendarId,"iso8601","calendar string is iso8601")}␊



test262/test/intl402/DateTimeFormat/prototype/formatToParts/offset-timezone-correct.js 5


Differences (-oxc|+esbuild):
-let date=new Date("1995-12-17T03:24:56Z"),tests={"+0301":{hour:"6",minute:"25"},"+1412":{hour:"5",minute:"36"},"+02":{hour:"5",minute:"24"},"+13:49":{hour:"5",minute:"13"},"-07:56":{hour:"7",minute:"28"},"-12":{hour:"3",minute:"24"},"-0914":{hour:"6",minute:"10"},"-10:03":{hour:"5",minute:"21"},"-0509":{hour:"10",minute:"15"}};Object.entries(tests).forEach(([timeZone,expected])=>{let df=new Intl.DateTimeFormat("en",{timeZone,timeStyle:"short"}),res=df.formatToParts(date),hour=res.filter(t=>t.type==="hour")[0].value,minute=res.filter(t=>t.type==="minute")[0].value;assert.sameValue(hour,expected.hour,`hour in ${timeZone} time zone:`),assert.sameValue(minute,expected.minute,`minute in ${timeZone} time zone:`)});
+let date=new Date("1995-12-17T03:24:56Z"),tests={"+0301":{hour:"6",minute:"25"},"+1412":{hour:"5",minute:"36"},"+02":{hour:"5",minute:"24"},"+13:49":{hour:"5",minute:"13"},"-07:56":{hour:"7",minute:"28"},"-12":{hour:"3",minute:"24"},"-0914":{hour:"6",minute:"10"},"-10:03":{hour:"5",minute:"21"},"-0509":{hour:"10",minute:"15"}};Object.entries(tests).forEach(([timeZone,expected])=>{let res=new Intl.DateTimeFormat("en",{timeZone,timeStyle:"short"}).formatToParts(date),hour=res.filter(t=>t.type==="hour")[0].value,minute=res.filter(t=>t.type==="minute")[0].value;assert.sameValue(hour,expected.hour,`hour in ${timeZone} time zone:`),assert.sameValue(minute,expected.minute,`minute in ${timeZone} time zone:`)});␊



test262/test/language/expressions/object/cpn-obj-lit-computed-property-name-from-multiplicative-expression-mult.js 3


Differences (-oxc|+esbuild):
-let o={[1*1]:1};assert.sameValue(o[1*1],1),assert.sameValue(o[String(1*1)],1);
+let o={1:1};assert.sameValue(o[1*1],1),assert.sameValue(o[String(1*1)],1);␊



test262/test/language/expressions/object/prop-def-id-get-error.js 3


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){({unresolvable})});
+assert.throws(ReferenceError,function(){unresolvable});␊



test262/test/intl402/DateTimeFormat/prototype/formatRange/en-US.js 10


Differences (-oxc|+esbuild):
-const usDateRangeSeparator=new Intl.DateTimeFormat("en-US",{dateStyle:"short"}).formatRangeToParts(1*86400*1e3,366*86400*1e3).find(part=>part.type==="literal"&&part.source==="shared").value,date1=new Date("2019-01-03T00:00:00"),date2=new Date("2019-01-05T00:00:00"),date3=new Date("2019-03-04T00:00:00"),date4=new Date("2020-03-04T00:00:00");let dtf=new Intl.DateTimeFormat("en-US");assert.sameValue(dtf.formatRange(date1,date1),"1/3/2019"),assert.sameValue(dtf.formatRange(date1,date2),`1/3/2019${usDateRangeSeparator}1/5/2019`),assert.sameValue(dtf.formatRange(date1,date3),`1/3/2019${usDateRangeSeparator}3/4/2019`),assert.sameValue(dtf.formatRange(date1,date4),`1/3/2019${usDateRangeSeparator}3/4/2020`),assert.sameValue(dtf.formatRange(date2,date3),`1/5/2019${usDateRangeSeparator}3/4/2019`),assert.sameValue(dtf.formatRange(date2,date4),`1/5/2019${usDateRangeSeparator}3/4/2020`),assert.sameValue(dtf.formatRange(date3,date4),`3/4/2019${usDateRangeSeparator}3/4/2020`),dtf=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric"}),assert.sameValue(dtf.formatRange(date1,date1),"Jan 3, 2019"),assert.sameValue(dtf.formatRange(date1,date2),`Jan 3${usDateRangeSeparator}5, 2019`),assert.sameValue(dtf.formatRange(date1,date3),`Jan 3${usDateRangeSeparator}Mar 4, 2019`),assert.sameValue(dtf.formatRange(date1,date4),`Jan 3, 2019${usDateRangeSeparator}Mar 4, 2020`),assert.sameValue(dtf.formatRange(date2,date3),`Jan 5${usDateRangeSeparator}Mar 4, 2019`),assert.sameValue(dtf.formatRange(date2,date4),`Jan 5, 2019${usDateRangeSeparator}Mar 4, 2020`),assert.sameValue(dtf.formatRange(date3,date4),`Mar 4, 2019${usDateRangeSeparator}Mar 4, 2020`);
+const usDateRangeSeparator=new Intl.DateTimeFormat("en-US",{dateStyle:"short"}).formatRangeToParts(864e5,316224e5).find(part=>part.type==="literal"&&part.source==="shared").value,date1=new Date("2019-01-03T00:00:00"),date2=new Date("2019-01-05T00:00:00"),date3=new Date("2019-03-04T00:00:00"),date4=new Date("2020-03-04T00:00:00");let dtf=new Intl.DateTimeFormat("en-US");assert.sameValue(dtf.formatRange(date1,date1),"1/3/2019"),assert.sameValue(dtf.formatRange(date1,date2),`1/3/2019${usDateRangeSeparator}1/5/2019`),assert.sameValue(dtf.formatRange(date1,date3),`1/3/2019${usDateRangeSeparator}3/4/2019`),assert.sameValue(dtf.formatRange(date1,date4),`1/3/2019${usDateRangeSeparator}3/4/2020`),assert.sameValue(dtf.formatRange(date2,date3),`1/5/2019${usDateRangeSeparator}3/4/2019`),assert.sameValue(dtf.formatRange(date2,date4),`1/5/2019${usDateRangeSeparator}3/4/2020`),assert.sameValue(dtf.formatRange(date3,date4),`3/4/2019${usDateRangeSeparator}3/4/2020`),dtf=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric"}),assert.sameValue(dtf.formatRange(date1,date1),"Jan 3, 2019"),assert.sameValue(dtf.formatRange(date1,date2),`Jan 3${usDateRangeSeparator}5, 2019`),assert.sameValue(dtf.formatRange(date1,date3),`Jan 3${usDateRangeSeparator}Mar 4, 2019`),assert.sameValue(dtf.formatRange(date1,date4),`Jan 3, 2019${usDateRangeSeparator}Mar 4, 2020`),assert.sameValue(dtf.formatRange(date2,date3),`Jan 5${usDateRangeSeparator}Mar 4, 2019`),assert.sameValue(dtf.formatRange(date2,date4),`Jan 5, 2019${usDateRangeSeparator}Mar 4, 2020`),assert.sameValue(dtf.formatRange(date3,date4),`Mar 4, 2019${usDateRangeSeparator}Mar 4, 2020`);␊



test262/test/intl402/DateTimeFormat/prototype/formatRange/fractionalSecondDigits.js 10


Differences (-oxc|+esbuild):
-const usDateRangeSeparator=new Intl.DateTimeFormat("en-US",{dateStyle:"short"}).formatRangeToParts(1*86400*1e3,366*86400*1e3).find(part=>part.type==="literal"&&part.source==="shared").value,d1=new Date(2019,7,10,1,2,3,234),d2=new Date(2019,7,10,1,2,3,567),d3=new Date(2019,7,10,1,2,13,987);let dtf=new Intl.DateTimeFormat("en",{minute:"numeric",second:"numeric",fractionalSecondDigits:void 0});assert.sameValue(dtf.formatRange(d1,d2),"02:03","no fractionalSecondDigits"),assert.sameValue(dtf.formatRange(d1,d3),`02:03${usDateRangeSeparator}02:13`,"no fractionalSecondDigits"),dtf=new Intl.DateTimeFormat("en",{minute:"numeric",second:"numeric",fractionalSecondDigits:1}),assert.sameValue(dtf.formatRange(d1,d2),`02:03.2${usDateRangeSeparator}02:03.5`,"1 fractionalSecondDigits round down"),assert.sameValue(dtf.formatRange(d1,d3),`02:03.2${usDateRangeSeparator}02:13.9`,"1 fractionalSecondDigits round down"),dtf=new Intl.DateTimeFormat("en",{minute:"numeric",second:"numeric",fractionalSecondDigits:2}),assert.sameValue(dtf.formatRange(d1,d2),`02:03.23${usDateRangeSeparator}02:03.56`,"2 fractionalSecondDigits round down"),assert.sameValue(dtf.formatRange(d1,d3),`02:03.23${usDateRangeSeparator}02:13.98`,"2 fractionalSecondDigits round down"),dtf=new Intl.DateTimeFormat("en",{minute:"numeric",second:"numeric",fractionalSecondDigits:3}),assert.sameValue(dtf.formatRange(d1,d2),`02:03.234${usDateRangeSeparator}02:03.567`,"3 fractionalSecondDigits round down"),assert.sameValue(dtf.formatRange(d1,d3),`02:03.234${usDateRangeSeparator}02:13.987`,"3 fractionalSecondDigits round down");
+const usDateRangeSeparator=new Intl.DateTimeFormat("en-US",{dateStyle:"short"}).formatRangeToParts(864e5,316224e5).find(part=>part.type==="literal"&&part.source==="shared").value,d1=new Date(2019,7,10,1,2,3,234),d2=new Date(2019,7,10,1,2,3,567),d3=new Date(2019,7,10,1,2,13,987);let dtf=new Intl.DateTimeFormat("en",{minute:"numeric",second:"numeric",fractionalSecondDigits:void 0});assert.sameValue(dtf.formatRange(d1,d2),"02:03","no fractionalSecondDigits"),assert.sameValue(dtf.formatRange(d1,d3),`02:03${usDateRangeSeparator}02:13`,"no fractionalSecondDigits"),dtf=new Intl.DateTimeFormat("en",{minute:"numeric",second:"numeric",fractionalSecondDigits:1}),assert.sameValue(dtf.formatRange(d1,d2),`02:03.2${usDateRangeSeparator}02:03.5`,"1 fractionalSecondDigits round down"),assert.sameValue(dtf.formatRange(d1,d3),`02:03.2${usDateRangeSeparator}02:13.9`,"1 fractionalSecondDigits round down"),dtf=new Intl.DateTimeFormat("en",{minute:"numeric",second:"numeric",fractionalSecondDigits:2}),assert.sameValue(dtf.formatRange(d1,d2),`02:03.23${usDateRangeSeparator}02:03.56`,"2 fractionalSecondDigits round down"),assert.sameValue(dtf.formatRange(d1,d3),`02:03.23${usDateRangeSeparator}02:13.98`,"2 fractionalSecondDigits round down"),dtf=new Intl.DateTimeFormat("en",{minute:"numeric",second:"numeric",fractionalSecondDigits:3}),assert.sameValue(dtf.formatRange(d1,d2),`02:03.234${usDateRangeSeparator}02:03.567`,"3 fractionalSecondDigits round down"),assert.sameValue(dtf.formatRange(d1,d3),`02:03.234${usDateRangeSeparator}02:13.987`,"3 fractionalSecondDigits round down");␊



test262/test/language/statements/for-of/string-astral-truncated.js 3


Differences (-oxc|+esbuild):
-var string="a\\ud801b\\ud801",first="a",second="\\ud801",third="b",fourth="\\ud801",iterationCount=0;for(var value of string)assert.sameValue(value,first),first=second,second=third,third=fourth,fourth=null,iterationCount+=1;assert.sameValue(iterationCount,4);
+var string="a\uD801b\uD801",first="a",second="\uD801",third="b",fourth="\uD801",iterationCount=0;for(var value of string)assert.sameValue(value,first),first=second,second=third,third=fourth,fourth=null,iterationCount+=1;assert.sameValue(iterationCount,4);␊



test262/test/intl402/DateTimeFormat/constructor-options-fractionalSecondDigits-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,void 0],[1,1],["1",1],[2,2],["2",2],[3,3],["3",3],[2.9,2],["2.9",2],[1.00001,1],[{toString(){return"3"}},3]];for(let[fractionalSecondDigits,expected]of validOptions){let dtf=new Intl.DateTimeFormat("en",{fractionalSecondDigits}),options=dtf.resolvedOptions();assert.sameValue(options.fractionalSecondDigits,expected);let propdesc=Object.getOwnPropertyDescriptor(options,"fractionalSecondDigits");expected===void 0?assert.sameValue(propdesc,void 0):assert.sameValue(propdesc.value,expected)}
+const validOptions=[[void 0,void 0],[1,1],["1",1],[2,2],["2",2],[3,3],["3",3],[2.9,2],["2.9",2],[1.00001,1],[{toString(){return"3"}},3]];for(const[fractionalSecondDigits,expected]of validOptions){const options=new Intl.DateTimeFormat("en",{fractionalSecondDigits}).resolvedOptions();assert.sameValue(options.fractionalSecondDigits,expected);const propdesc=Object.getOwnPropertyDescriptor(options,"fractionalSecondDigits");expected===void 0?assert.sameValue(propdesc,void 0):assert.sameValue(propdesc.value,expected)}␊



test262/test/intl402/DateTimeFormat/constructor-options-timeStyle-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,void 0],["full","full"],["long","long"],["medium","medium"],["short","short"],[{toString(){return"full"}},"full"],[{valueOf(){return"long"},toString:void 0},"long"]];for(let[timeStyle,expected]of validOptions){let dtf=new Intl.DateTimeFormat("en",{timeStyle}),options=dtf.resolvedOptions();assert.sameValue(options.timeStyle,expected);let propdesc=Object.getOwnPropertyDescriptor(options,"timeStyle");expected===void 0?assert.sameValue(propdesc,void 0):assert.sameValue(propdesc.value,expected)}
+const validOptions=[[void 0,void 0],["full","full"],["long","long"],["medium","medium"],["short","short"],[{toString(){return"full"}},"full"],[{valueOf(){return"long"},toString:void 0},"long"]];for(const[timeStyle,expected]of validOptions){const options=new Intl.DateTimeFormat("en",{timeStyle}).resolvedOptions();assert.sameValue(options.timeStyle,expected);const propdesc=Object.getOwnPropertyDescriptor(options,"timeStyle");expected===void 0?assert.sameValue(propdesc,void 0):assert.sameValue(propdesc.value,expected)}␊



test262/test/intl402/DateTimeFormat/this-value-ignored.js 8


Differences (-oxc|+esbuild):
-testWithIntlConstructors(function(Constructor){if(Constructor===Intl.DateTimeFormat)return;var obj,newObj;if(obj=new Constructor,newObj=Intl.DateTimeFormat.call(obj),assert.notSameValue(obj,newObj,'DateTimeFormat object created with "new" was not ignored as this-value.'),Constructor!==Intl.Collator&&Constructor!==Intl.NumberFormat&&Constructor!==Intl.DateTimeFormat)return;obj=Constructor(),newObj=Intl.DateTimeFormat.call(obj),assert.notSameValue(obj,newObj,"DateTimeFormat object created with constructor as function was not ignored as this-value.")});
+testWithIntlConstructors(function(Constructor){if(Constructor!==Intl.DateTimeFormat){var obj,newObj;obj=new Constructor,newObj=Intl.DateTimeFormat.call(obj),assert.notSameValue(obj,newObj,'DateTimeFormat object created with "new" was not ignored as this-value.'),!(Constructor!==Intl.Collator&&Constructor!==Intl.NumberFormat&&Constructor!==Intl.DateTimeFormat)&&(obj=Constructor(),newObj=Intl.DateTimeFormat.call(obj),assert.notSameValue(obj,newObj,"DateTimeFormat object created with constructor as function was not ignored as this-value."))}});␊



test262/test/intl402/DateTimeFormat/constructor-options-dayPeriod-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,void 0],["long","long"],["short","short"],["narrow","narrow"],[{toString(){return"narrow"}},"narrow"],[{valueOf(){return"long"},toString:void 0},"long"]];for(let[dayPeriod,expected]of validOptions){let dtf=new Intl.DateTimeFormat("en",{dayPeriod}),options=dtf.resolvedOptions();assert.sameValue(options.dayPeriod,expected);let propdesc=Object.getOwnPropertyDescriptor(options,"dayPeriod");expected===void 0?assert.sameValue(propdesc,void 0):assert.sameValue(propdesc.value,expected)}
+const validOptions=[[void 0,void 0],["long","long"],["short","short"],["narrow","narrow"],[{toString(){return"narrow"}},"narrow"],[{valueOf(){return"long"},toString:void 0},"long"]];for(const[dayPeriod,expected]of validOptions){const options=new Intl.DateTimeFormat("en",{dayPeriod}).resolvedOptions();assert.sameValue(options.dayPeriod,expected);const propdesc=Object.getOwnPropertyDescriptor(options,"dayPeriod");expected===void 0?assert.sameValue(propdesc,void 0):assert.sameValue(propdesc.value,expected)}␊



test262/test/language/expressions/object/accessor-name-computed-err-to-prop-key.js 20


Differences (-oxc|+esbuild):
-var badKey=Object.create(null);assert.throws(TypeError,function(){({get[badKey](){}})},"`get` accessor"),assert.throws(TypeError,function(){({set[badKey](_){}})},"`set` accessor");
+var badKey=Object.create(null);assert.throws(TypeError,function(){badKey+""},"`get` accessor"),assert.throws(TypeError,function(){badKey+""},"`set` accessor");␊



test262/test/language/expressions/object/cpn-obj-lit-computed-property-name-from-math.js 3


Differences (-oxc|+esbuild):
-let o={[3-3*4/5**6]:2.999232};assert.sameValue(o[3-3*4/5**6],2.999232),assert.sameValue(o[String(3-3*4/5**6)],2.999232);
+let o={2.999232:2.999232};assert.sameValue(o[3-3*4/5**6],2.999232),assert.sameValue(o[String(3-3*4/5**6)],2.999232);␊



test262/test/language/expressions/object/accessor-name-computed-err-unresolvable.js 20


Differences (-oxc|+esbuild):
-assert.throws(ReferenceError,function(){({get[test262unresolvable](){}})},"`get` accessor"),assert.throws(ReferenceError,function(){({set[test262unresolvable](_){}})},"`set` accessor");
+assert.throws(ReferenceError,function(){test262unresolvable+""},"`get` accessor"),assert.throws(ReferenceError,function(){test262unresolvable+""},"`set` accessor");␊



test262/test/intl402/Intl/supportedValuesOf/units-accepted-by-NumberFormat.js 12


Differences (-oxc|+esbuild):
-const units=Intl.supportedValuesOf("unit");for(let unit of units){let obj=new Intl.NumberFormat("en",{style:"unit",unit});assert.sameValue(obj.resolvedOptions().unit,unit,`${unit} is supported by NumberFormat`)}for(let unit of allSimpleSanctionedUnits()){let obj=new Intl.NumberFormat("en",{style:"unit",unit});obj.resolvedOptions().unit===unit?assert(units.includes(unit),`${unit} supported but not returned by supportedValuesOf`):assert(!units.includes(unit),`${unit} not supported but returned by supportedValuesOf`)}
+const units=Intl.supportedValuesOf("unit");for(let unit of units){let obj=new Intl.NumberFormat("en",{style:"unit",unit});assert.sameValue(obj.resolvedOptions().unit,unit,`${unit} is supported by NumberFormat`)}for(let unit of allSimpleSanctionedUnits())new Intl.NumberFormat("en",{style:"unit",unit}).resolvedOptions().unit===unit?assert(units.includes(unit),`${unit} supported but not returned by supportedValuesOf`):assert(!units.includes(unit),`${unit} not supported but returned by supportedValuesOf`);␊



test262/test/intl402/Intl/supportedValuesOf/calendars-accepted-by-DateTimeFormat.js 12


Differences (-oxc|+esbuild):
-const calendars=Intl.supportedValuesOf("calendar");for(let calendar of calendars){let obj=new Intl.DateTimeFormat("en",{calendar});assert.sameValue(obj.resolvedOptions().calendar,calendar,`${calendar} is supported by DateTimeFormat`)}for(let calendar of allCalendars()){let obj=new Intl.DateTimeFormat("en",{calendar});obj.resolvedOptions().calendar===calendar?assert(calendars.includes(calendar),`${calendar} supported but not returned by supportedValuesOf`):assert(!calendars.includes(calendar),`${calendar} not supported but returned by supportedValuesOf`)}
+const calendars=Intl.supportedValuesOf("calendar");for(let calendar of calendars){let obj=new Intl.DateTimeFormat("en",{calendar});assert.sameValue(obj.resolvedOptions().calendar,calendar,`${calendar} is supported by DateTimeFormat`)}for(let calendar of allCalendars())new Intl.DateTimeFormat("en",{calendar}).resolvedOptions().calendar===calendar?assert(calendars.includes(calendar),`${calendar} supported but not returned by supportedValuesOf`):assert(!calendars.includes(calendar),`${calendar} not supported but returned by supportedValuesOf`);␊



test262/test/intl402/Intl/supportedValuesOf/numberingSystems-accepted-by-DateTimeFormat.js 12


Differences (-oxc|+esbuild):
-const numberingSystems=Intl.supportedValuesOf("numberingSystem");for(let numberingSystem of numberingSystems){let obj=new Intl.DateTimeFormat("en",{numberingSystem});assert.sameValue(obj.resolvedOptions().numberingSystem,numberingSystem,`${numberingSystem} is supported by DateTimeFormat`)}for(let numberingSystem of allNumberingSystems()){let obj=new Intl.DateTimeFormat("en",{numberingSystem});obj.resolvedOptions().numberingSystem===numberingSystem?assert(numberingSystems.includes(numberingSystem),`${numberingSystem} supported but not returned by supportedValuesOf`):assert(!numberingSystems.includes(numberingSystem),`${numberingSystem} not supported but returned by supportedValuesOf`)}
+const numberingSystems=Intl.supportedValuesOf("numberingSystem");for(let numberingSystem of numberingSystems){let obj=new Intl.DateTimeFormat("en",{numberingSystem});assert.sameValue(obj.resolvedOptions().numberingSystem,numberingSystem,`${numberingSystem} is supported by DateTimeFormat`)}for(let numberingSystem of allNumberingSystems())new Intl.DateTimeFormat("en",{numberingSystem}).resolvedOptions().numberingSystem===numberingSystem?assert(numberingSystems.includes(numberingSystem),`${numberingSystem} supported but not returned by supportedValuesOf`):assert(!numberingSystems.includes(numberingSystem),`${numberingSystem} not supported but returned by supportedValuesOf`);␊



test262/test/intl402/Intl/supportedValuesOf/numberingSystems-accepted-by-NumberFormat.js 12


Differences (-oxc|+esbuild):
-const numberingSystems=Intl.supportedValuesOf("numberingSystem");for(let numberingSystem of numberingSystems){let obj=new Intl.NumberFormat("en",{numberingSystem});assert.sameValue(obj.resolvedOptions().numberingSystem,numberingSystem,`${numberingSystem} is supported by NumberFormat`)}for(let numberingSystem of allNumberingSystems()){let obj=new Intl.NumberFormat("en",{numberingSystem});obj.resolvedOptions().numberingSystem===numberingSystem?assert(numberingSystems.includes(numberingSystem),`${numberingSystem} supported but not returned by supportedValuesOf`):assert(!numberingSystems.includes(numberingSystem),`${numberingSystem} not supported but returned by supportedValuesOf`)}
+const numberingSystems=Intl.supportedValuesOf("numberingSystem");for(let numberingSystem of numberingSystems){let obj=new Intl.NumberFormat("en",{numberingSystem});assert.sameValue(obj.resolvedOptions().numberingSystem,numberingSystem,`${numberingSystem} is supported by NumberFormat`)}for(let numberingSystem of allNumberingSystems())new Intl.NumberFormat("en",{numberingSystem}).resolvedOptions().numberingSystem===numberingSystem?assert(numberingSystems.includes(numberingSystem),`${numberingSystem} supported but not returned by supportedValuesOf`):assert(!numberingSystems.includes(numberingSystem),`${numberingSystem} not supported but returned by supportedValuesOf`);␊



test262/test/intl402/Intl/supportedValuesOf/numberingSystems-accepted-by-RelativeTimeFormat.js 12


Differences (-oxc|+esbuild):
-const numberingSystems=Intl.supportedValuesOf("numberingSystem");for(let numberingSystem of numberingSystems){let obj=new Intl.RelativeTimeFormat("en",{numberingSystem});assert.sameValue(obj.resolvedOptions().numberingSystem,numberingSystem,`${numberingSystem} is supported by RelativeTimeFormat`)}for(let numberingSystem of allNumberingSystems()){let obj=new Intl.RelativeTimeFormat("en",{numberingSystem});obj.resolvedOptions().numberingSystem===numberingSystem?assert(numberingSystems.includes(numberingSystem),`${numberingSystem} supported but not returned by supportedValuesOf`):assert(!numberingSystems.includes(numberingSystem),`${numberingSystem} not supported but returned by supportedValuesOf`)}
+const numberingSystems=Intl.supportedValuesOf("numberingSystem");for(let numberingSystem of numberingSystems){let obj=new Intl.RelativeTimeFormat("en",{numberingSystem});assert.sameValue(obj.resolvedOptions().numberingSystem,numberingSystem,`${numberingSystem} is supported by RelativeTimeFormat`)}for(let numberingSystem of allNumberingSystems())new Intl.RelativeTimeFormat("en",{numberingSystem}).resolvedOptions().numberingSystem===numberingSystem?assert(numberingSystems.includes(numberingSystem),`${numberingSystem} supported but not returned by supportedValuesOf`):assert(!numberingSystems.includes(numberingSystem),`${numberingSystem} not supported but returned by supportedValuesOf`);␊



test262/test/intl402/Intl/supportedValuesOf/collations-accepted-by-Collator.js 27


Differences (-oxc|+esbuild):
-const collations=Intl.supportedValuesOf("collation"),locales=["en","ar","de","es","hi","ko","ln","si","sv","zh"];for(let collation of collations){let supported=!1;for(let locale of locales){let obj=new Intl.Collator(locale,{collation});if(obj.resolvedOptions().collation===collation){supported=!0;break}}assert(supported,`${collation} is supported by Collator`)}for(let collation of allCollations()){let supported=!1;for(let locale of locales){let obj=new Intl.Collator(locale,{collation});if(obj.resolvedOptions().collation===collation){supported=!0;break}}supported?assert(collations.includes(collation),`${collation} supported but not returned by supportedValuesOf`):assert(!collations.includes(collation),`${collation} not supported but returned by supportedValuesOf`)}
+const collations=Intl.supportedValuesOf("collation"),locales=["en","ar","de","es","hi","ko","ln","si","sv","zh"];for(let collation of collations){let supported=!1;for(let locale of locales)if(new Intl.Collator(locale,{collation}).resolvedOptions().collation===collation){supported=!0;break}assert(supported,`${collation} is supported by Collator`)}for(let collation of allCollations()){let supported=!1;for(let locale of locales)if(new Intl.Collator(locale,{collation}).resolvedOptions().collation===collation){supported=!0;break}supported?assert(collations.includes(collation),`${collation} supported but not returned by supportedValuesOf`):assert(!collations.includes(collation),`${collation} not supported but returned by supportedValuesOf`)}␊



test262/test/language/expressions/object/cpn-obj-lit-computed-property-name-from-multiplicative-expression-div.js 3


Differences (-oxc|+esbuild):
-let o={[1/1]:1};assert.sameValue(o[1/1],1),assert.sameValue(o[String(1/1)],1);
+let o={1:1};assert.sameValue(o[1/1],1),assert.sameValue(o[String(1/1)],1);␊



test262/test/built-ins/Object/create/15.2.3.5-1-2.js 20


Differences (-oxc|+esbuild):
-Object.create(null);



test262/test/language/expressions/object/method-definition/generator-prop-name-eval-error.js 5


Differences (-oxc|+esbuild):
-assert.throws(Test262Error,function(){({*[function(){throw new Test262Error}()](){}})});
+assert.throws(Test262Error,function(){(function(){throw new Test262Error})()+""});␊



test262/test/built-ins/Temporal/ZonedDateTime/prototype/since/calendar-temporal-object.js 21


Differences (-oxc|+esbuild):
-TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{let datetime=new Temporal.ZonedDateTime(1000000000000000000n,"UTC");datetime.since({year:2005,month:6,day:2,timeZone:"UTC",calendar:temporalObject})});
+TemporalHelpers.checkToTemporalCalendarFastPath(temporalObject=>{new Temporal.ZonedDateTime(1000000000000000000n,"UTC").since({year:2005,month:6,day:2,timeZone:"UTC",calendar:temporalObject})});␊



test262/test/intl402/ListFormat/constructor/constructor/options-type-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,"conjunction"],["conjunction","conjunction"],["disjunction","disjunction"],["unit","unit"],[{toString(){return"unit"}},"unit"]];for(let[validOption,expected]of validOptions){let lf=new Intl.ListFormat([],{type:validOption}),resolvedOptions=lf.resolvedOptions();assert.sameValue(resolvedOptions.type,expected)}
+const validOptions=[[void 0,"conjunction"],["conjunction","conjunction"],["disjunction","disjunction"],["unit","unit"],[{toString(){return"unit"}},"unit"]];for(const[validOption,expected]of validOptions){const resolvedOptions=new Intl.ListFormat([],{type:validOption}).resolvedOptions();assert.sameValue(resolvedOptions.type,expected)}␊



test262/test/intl402/ListFormat/constructor/constructor/options-style-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,"long"],["long","long"],["short","short"],["narrow","narrow"],[{toString(){return"short"}},"short"],[{toString(){return"long"}},"long"],[{toString(){return"narrow"}},"narrow"]];for(let[validOption,expected]of validOptions){let lf=new Intl.ListFormat([],{style:validOption}),resolvedOptions=lf.resolvedOptions();assert.sameValue(resolvedOptions.style,expected)}
+const validOptions=[[void 0,"long"],["long","long"],["short","short"],["narrow","narrow"],[{toString(){return"short"}},"short"],[{toString(){return"long"}},"long"],[{toString(){return"narrow"}},"narrow"]];for(const[validOption,expected]of validOptions){const resolvedOptions=new Intl.ListFormat([],{style:validOption}).resolvedOptions();assert.sameValue(resolvedOptions.style,expected)}␊



test262/test/language/statements/variable/S12.2_A3.js 65


Differences (-oxc|+esbuild):
-var __var="OUT";if(function(){var __var="IN";if(function(){__var="INNER_SPACE"}(),function(){var __var="INNER_SUN"}(),__var!=="INNER_SPACE")throw new Test262Error('#1: __var === "INNER_SPACE". Actual:  __var ==='+__var)}(),__var!=="OUT")throw new Test262Error('#2: __var === "OUT". Actual:  __var ==='+__var);if(function(){if(__var="IN",function(){__var="INNERED"}(),function(){var __var="INNAGER"}(),__var!=="INNERED")throw new Test262Error('#3: __var==="INNERED". Actual:  __var==='+__var)}(),__var!=="INNERED")throw new Test262Error('#4: __var==="INNERED". Actual:  __var==='+__var);
+var __var="OUT";if(function(){var __var2="IN";if(function(){__var2="INNER_SPACE"}(),__var2!=="INNER_SPACE")throw new Test262Error('#1: __var === "INNER_SPACE". Actual:  __var ==='+__var2)}(),__var!=="OUT")throw new Test262Error('#2: __var === "OUT". Actual:  __var ==='+__var);if(function(){if(__var="IN",function(){__var="INNERED"}(),__var!=="INNERED")throw new Test262Error('#3: __var==="INNERED". Actual:  __var==='+__var)}(),__var!=="INNERED")throw new Test262Error('#4: __var==="INNERED". Actual:  __var==='+__var);␊



test262/test/intl402/PluralRules/prototype/resolvedOptions/return-keys-order-default.js 3


Differences (-oxc|+esbuild):
-const allKeys=["locale","type","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","pluralCategories","roundingIncrement","roundingMode","roundingPriority","trailingZeroDisplay"],options=[{},{minimumSignificantDigits:3},{minimumFractionDigits:3}];options.forEach(option=>{let nf=new Intl.PluralRules(void 0,option),resolved=nf.resolvedOptions(),resolvedKeys=Reflect.ownKeys(resolved),expectedKeys=allKeys.filter(key=>key in resolved);assert.compareArray(resolvedKeys,expectedKeys,"resolvedOptions() property key order with options "+JSON.stringify(options))});
+const allKeys=["locale","type","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","pluralCategories","roundingIncrement","roundingMode","roundingPriority","trailingZeroDisplay"],options=[{},{minimumSignificantDigits:3},{minimumFractionDigits:3}];options.forEach(option=>{const resolved=new Intl.PluralRules(void 0,option).resolvedOptions(),resolvedKeys=Reflect.ownKeys(resolved),expectedKeys=allKeys.filter(key=>key in resolved);assert.compareArray(resolvedKeys,expectedKeys,"resolvedOptions() property key order with options "+JSON.stringify(options))});␊



test262/test/intl402/NumberFormat/this-value-ignored.js 8


Differences (-oxc|+esbuild):
-testWithIntlConstructors(function(Constructor){if(Constructor===Intl.NumberFormat)return;var obj,newObj;if(obj=new Constructor,newObj=Intl.NumberFormat.call(obj),assert.notSameValue(obj,newObj,'NumberFormat object created with "new" was not ignored as this-value.'),Constructor!==Intl.Collator&&Constructor!==Intl.NumberFormat&&Constructor!==Intl.DateTimeFormat)return;obj=Constructor(),newObj=Intl.NumberFormat.call(obj),assert.notSameValue(obj,newObj,"NumberFormat object created with constructor as function was not ignored as this-value.")});
+testWithIntlConstructors(function(Constructor){if(Constructor!==Intl.NumberFormat){var obj,newObj;obj=new Constructor,newObj=Intl.NumberFormat.call(obj),assert.notSameValue(obj,newObj,'NumberFormat object created with "new" was not ignored as this-value.'),!(Constructor!==Intl.Collator&&Constructor!==Intl.NumberFormat&&Constructor!==Intl.DateTimeFormat)&&(obj=Constructor(),newObj=Intl.NumberFormat.call(obj),assert.notSameValue(obj,newObj,"NumberFormat object created with constructor as function was not ignored as this-value."))}});␊



test262/test/intl402/NumberFormat/currencyDisplay-unit.js 3


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,"symbol"],["narrowSymbol","narrowSymbol"],[{toString(){return"narrowSymbol"}},"narrowSymbol"]];for(let[validOption,expected]of validOptions){let nf=new Intl.NumberFormat([],{style:"currency",currency:"EUR",currencyDisplay:validOption}),resolvedOptions=nf.resolvedOptions();assert.sameValue(resolvedOptions.currencyDisplay,expected)}for(let[validOption]of validOptions){let nf=new Intl.NumberFormat([],{style:"percent",currencyDisplay:validOption}),resolvedOptions=nf.resolvedOptions();assert.sameValue(resolvedOptions.currencyDisplay,void 0)}
+const validOptions=[[void 0,"symbol"],["narrowSymbol","narrowSymbol"],[{toString(){return"narrowSymbol"}},"narrowSymbol"]];for(const[validOption,expected]of validOptions){const resolvedOptions=new Intl.NumberFormat([],{style:"currency",currency:"EUR",currencyDisplay:validOption}).resolvedOptions();assert.sameValue(resolvedOptions.currencyDisplay,expected)}for(const[validOption]of validOptions){const resolvedOptions=new Intl.NumberFormat([],{style:"percent",currencyDisplay:validOption}).resolvedOptions();assert.sameValue(resolvedOptions.currencyDisplay,void 0)}␊



test262/test/language/expressions/new/spread-mult-literal.js 4


Differences (-oxc|+esbuild):
-var callCount=0;new function(){assert.sameValue(arguments.length,5),assert.sameValue(arguments[0],5),assert.sameValue(arguments[1],6),assert.sameValue(arguments[2],7),assert.sameValue(arguments[3],8),assert.sameValue(arguments[4],9),callCount+=1}(5,...[6,7,8],9),assert.sameValue(callCount,1);
+var callCount=0;new function(){assert.sameValue(arguments.length,5),assert.sameValue(arguments[0],5),assert.sameValue(arguments[1],6),assert.sameValue(arguments[2],7),assert.sameValue(arguments[3],8),assert.sameValue(arguments[4],9),callCount+=1}(5,6,7,8,9),assert.sameValue(callCount,1);␊



test262/test/intl402/NumberFormat/constructor-notation.js 1


Differences (-oxc|+esbuild):
-const values=[[void 0,"standard"],["standard"],["scientific"],["engineering"],["compact"]];for(let[value,expected=value]of values){let nf=new Intl.NumberFormat([],{notation:value}),resolvedOptions=nf.resolvedOptions();assert.sameValue("notation"in resolvedOptions,!0),assert.sameValue(resolvedOptions.notation,expected)}
+const values=[[void 0,"standard"],["standard"],["scientific"],["engineering"],["compact"]];for(const[value,expected=value]of values){const resolvedOptions=new Intl.NumberFormat([],{notation:value}).resolvedOptions();assert.sameValue("notation"in resolvedOptions,!0),assert.sameValue(resolvedOptions.notation,expected)}␊



test262/test/intl402/NumberFormat/constructor-signDisplay.js 1


Differences (-oxc|+esbuild):
-const values=[[void 0,"auto"],["auto"],["never"],["always"],["exceptZero"]];for(let[value,expected=value]of values){let nf=new Intl.NumberFormat([],{signDisplay:value}),resolvedOptions=nf.resolvedOptions();assert.sameValue("signDisplay"in resolvedOptions,!0),assert.sameValue(resolvedOptions.signDisplay,expected)}
+const values=[[void 0,"auto"],["auto"],["never"],["always"],["exceptZero"]];for(const[value,expected=value]of values){const resolvedOptions=new Intl.NumberFormat([],{signDisplay:value}).resolvedOptions();assert.sameValue("signDisplay"in resolvedOptions,!0),assert.sameValue(resolvedOptions.signDisplay,expected)}␊



test262/test/intl402/NumberFormat/constructor-compactDisplay-compact.js 1


Differences (-oxc|+esbuild):
-const values=[[void 0,"short"],["short"],["long"]];for(let[value,expected=value]of values){let callOrder=[],nf=new Intl.NumberFormat([],{get notation(){return callOrder.push("notation"),"compact"},get compactDisplay(){return callOrder.push("compactDisplay"),value}}),resolvedOptions=nf.resolvedOptions();assert.sameValue("compactDisplay"in resolvedOptions,!0),assert.sameValue(resolvedOptions.compactDisplay,expected),assert.compareArray(callOrder,["notation","compactDisplay"])}
+const values=[[void 0,"short"],["short"],["long"]];for(const[value,expected=value]of values){const callOrder=[],resolvedOptions=new Intl.NumberFormat([],{get notation(){return callOrder.push("notation"),"compact"},get compactDisplay(){return callOrder.push("compactDisplay"),value}}).resolvedOptions();assert.sameValue("compactDisplay"in resolvedOptions,!0),assert.sameValue(resolvedOptions.compactDisplay,expected),assert.compareArray(callOrder,["notation","compactDisplay"])}␊



test262/test/language/expressions/new/spread-sngl-literal.js 4


Differences (-oxc|+esbuild):
-var callCount=0;new function(){assert.sameValue(arguments.length,3),assert.sameValue(arguments[0],3),assert.sameValue(arguments[1],4),assert.sameValue(arguments[2],5),callCount+=1}(...[3,4,5]),assert.sameValue(callCount,1);
+var callCount=0;new function(){assert.sameValue(arguments.length,3),assert.sameValue(arguments[0],3),assert.sameValue(arguments[1],4),assert.sameValue(arguments[2],5),callCount+=1}(3,4,5),assert.sameValue(callCount,1);␊



test262/test/intl402/NumberFormat/style-unit.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,"decimal"],["unit","unit"],[{toString(){return"unit"}},"unit"]];for(let[validOption,expected]of validOptions){let nf=new Intl.NumberFormat([],{style:validOption,unit:"gigabit"}),resolvedOptions=nf.resolvedOptions();assert.sameValue(resolvedOptions.style,expected)}
+const validOptions=[[void 0,"decimal"],["unit","unit"],[{toString(){return"unit"}},"unit"]];for(const[validOption,expected]of validOptions){const resolvedOptions=new Intl.NumberFormat([],{style:validOption,unit:"gigabit"}).resolvedOptions();assert.sameValue(resolvedOptions.style,expected)}␊



test262/test/intl402/DisplayNames/prototype/resolvedOptions/option-fallback.js 3


Differences (-oxc|+esbuild):
-const fallbacks=["code","none"],types=["language","region","script","currency"];types.forEach(type=>{fallbacks.forEach(fallback=>{let dn=new Intl.DisplayNames("en-US",{fallback,type}),options=dn.resolvedOptions();verifyProperty(options,"fallback",{value:fallback,writable:!0,enumerable:!0,configurable:!0}),verifyProperty(options,"type",{value:type,writable:!0,enumerable:!0,configurable:!0}),verifyProperty(options,"style",{value:"long",writable:!0,enumerable:!0,configurable:!0})})});
+const fallbacks=["code","none"],types=["language","region","script","currency"];types.forEach(type=>{fallbacks.forEach(fallback=>{const options=new Intl.DisplayNames("en-US",{fallback,type}).resolvedOptions();verifyProperty(options,"fallback",{value:fallback,writable:!0,enumerable:!0,configurable:!0}),verifyProperty(options,"type",{value:type,writable:!0,enumerable:!0,configurable:!0}),verifyProperty(options,"style",{value:"long",writable:!0,enumerable:!0,configurable:!0})})});␊



test262/test/language/expressions/object/method-definition/yield-as-literal-property-name.js 24


Differences (-oxc|+esbuild):
-var result,obj={*g(){({get yield(){return 1}})}};result=obj.g().next(),assert.sameValue(result.value,void 0),assert.sameValue(result.done,!0);
+var result,obj={*g(){}};result=obj.g().next(),assert.sameValue(result.value,void 0),assert.sameValue(result.done,!0);␊



test262/test/intl402/DisplayNames/prototype/resolvedOptions/option-style.js 3


Differences (-oxc|+esbuild):
-const styles=["narrow","short","long"],types=["language","region","script","currency"];types.forEach(type=>{styles.forEach(style=>{let dn=new Intl.DisplayNames("en-US",{style,type}),options=dn.resolvedOptions();verifyProperty(options,"style",{value:style,writable:!0,enumerable:!0,configurable:!0}),verifyProperty(options,"type",{value:type,writable:!0,enumerable:!0,configurable:!0}),verifyProperty(options,"fallback",{value:"code",writable:!0,enumerable:!0,configurable:!0})})});
+const styles=["narrow","short","long"],types=["language","region","script","currency"];types.forEach(type=>{styles.forEach(style=>{const options=new Intl.DisplayNames("en-US",{style,type}).resolvedOptions();verifyProperty(options,"style",{value:style,writable:!0,enumerable:!0,configurable:!0}),verifyProperty(options,"type",{value:type,writable:!0,enumerable:!0,configurable:!0}),verifyProperty(options,"fallback",{value:"code",writable:!0,enumerable:!0,configurable:!0})})});␊



test262/test/intl402/NumberFormat/prototype/resolvedOptions/return-keys-order-default.js 3


Differences (-oxc|+esbuild):
-const allKeys=["locale","numberingSystem","style","currency","currencyDisplay","currencySign","unit","unitDisplay","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","useGrouping","notation","compactDisplay","signDisplay","roundingIncrement","roundingMode","roundingPriority","trailingZeroDisplay"],optionsBase={notation:"compact"},optionsExtensions=[{style:"currency",currency:"XTS"},{style:"unit",unit:"percent"}];optionsExtensions.forEach(optionsExtension=>{let options=Object.assign({},optionsBase,optionsExtension),nf=new Intl.NumberFormat(void 0,options),resolved=nf.resolvedOptions(),resolvedKeys=Reflect.ownKeys(resolved),expectedKeys=allKeys.filter(key=>key in resolved);assert.compareArray(resolvedKeys,expectedKeys,"resolvedOptions() property key order with options "+JSON.stringify(options))});
+const allKeys=["locale","numberingSystem","style","currency","currencyDisplay","currencySign","unit","unitDisplay","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","useGrouping","notation","compactDisplay","signDisplay","roundingIncrement","roundingMode","roundingPriority","trailingZeroDisplay"],optionsBase={notation:"compact"},optionsExtensions=[{style:"currency",currency:"XTS"},{style:"unit",unit:"percent"}];optionsExtensions.forEach(optionsExtension=>{const options=Object.assign({},optionsBase,optionsExtension),resolved=new Intl.NumberFormat(void 0,options).resolvedOptions(),resolvedKeys=Reflect.ownKeys(resolved),expectedKeys=allKeys.filter(key=>key in resolved);assert.compareArray(resolvedKeys,expectedKeys,"resolvedOptions() property key order with options "+JSON.stringify(options))});␊



test262/test/language/expressions/new/spread-mult-empty.js 5


Differences (-oxc|+esbuild):
-var callCount=0;new function(){assert.sameValue(arguments.length,3),assert.sameValue(arguments[0],1),assert.sameValue(arguments[1],2),assert.sameValue(arguments[2],3),callCount+=1}(1,2,3,...[]),assert.sameValue(callCount,1);
+var callCount=0;new function(){assert.sameValue(arguments.length,3),assert.sameValue(arguments[0],1),assert.sameValue(arguments[1],2),assert.sameValue(arguments[2],3),callCount+=1}(1,2,3),assert.sameValue(callCount,1);␊



test262/test/language/expressions/super/prop-expr-obj-val-from-arrow.js 15


Differences (-oxc|+esbuild):
-var fromA,fromB,A={fromA:"a",fromB:"a"},B={fromB:"b"};Object.setPrototypeOf(B,A);var obj={fromA:"c",fromB:"c",method(){fromA=(()=>super.fromA)(),fromB=(()=>super.fromB)()}};Object.setPrototypeOf(obj,B),obj.method(),assert.sameValue(fromA,"a"),assert.sameValue(fromB,"b");
+var fromA,fromB,A={fromA:"a",fromB:"a"},B={fromB:"b"};Object.setPrototypeOf(B,A);var obj={fromA:"c",fromB:"c",method(){fromA=super.fromA,fromB=super.fromB}};Object.setPrototypeOf(obj,B),obj.method(),assert.sameValue(fromA,"a"),assert.sameValue(fromB,"b");␊



test262/test/language/expressions/super/prop-dot-obj-val-from-arrow.js 15


Differences (-oxc|+esbuild):
-var fromA,fromB,A={fromA:"a",fromB:"a"},B={fromB:"b"};Object.setPrototypeOf(B,A);var obj={fromA:"c",fromB:"c",method(){fromA=(()=>super.fromA)(),fromB=(()=>super.fromB)()}};Object.setPrototypeOf(obj,B),obj.method(),assert.sameValue(fromA,"a"),assert.sameValue(fromB,"b");
+var fromA,fromB,A={fromA:"a",fromB:"a"},B={fromB:"b"};Object.setPrototypeOf(B,A);var obj={fromA:"c",fromB:"c",method(){fromA=super.fromA,fromB=super.fromB}};Object.setPrototypeOf(obj,B),obj.method(),assert.sameValue(fromA,"a"),assert.sameValue(fromB,"b");␊



test262/test/intl402/Collator/this-value-ignored.js 3


Differences (-oxc|+esbuild):
-testWithIntlConstructors(function(Constructor){var obj,newObj;if(obj=new Constructor,newObj=Intl.Collator.call(obj),assert.notSameValue(obj,newObj,'Collator object created with "new" was not ignored as this-value.'),Constructor!==Intl.Collator&&Constructor!==Intl.NumberFormat&&Constructor!==Intl.DateTimeFormat)return;obj=Constructor(),newObj=Intl.Collator.call(obj),assert.notSameValue(obj,newObj,"Collator object created with constructor as function was not ignored as this-value.")});
+testWithIntlConstructors(function(Constructor){var obj,newObj;obj=new Constructor,newObj=Intl.Collator.call(obj),assert.notSameValue(obj,newObj,'Collator object created with "new" was not ignored as this-value.'),!(Constructor!==Intl.Collator&&Constructor!==Intl.NumberFormat&&Constructor!==Intl.DateTimeFormat)&&(obj=Constructor(),newObj=Intl.Collator.call(obj),assert.notSameValue(obj,newObj,"Collator object created with constructor as function was not ignored as this-value."))});␊



test262/test/intl402/Segmenter/prototype/segment/containing/index-throws.js 17


Differences (-oxc|+esbuild):
-const input="a b c",granularities=[void 0,"grapheme","word","sentence"],index_throws=[Symbol(),0n,-1n,1n,BigInt(0),BigInt(1),BigInt(-1),BigInt(input.length)];granularities.forEach(function(granularity){let segmenter=new Intl.Segmenter(void 0,{granularity}),segment=segmenter.segment(input);index_throws.forEach(function(index){assert.throws(TypeError,()=>{segment.containing(index)})})});
+const input="a b c",granularities=[void 0,"grapheme","word","sentence"],index_throws=[Symbol(),0n,-1n,1n,BigInt(0),BigInt(1),BigInt(-1),BigInt(input.length)];granularities.forEach(function(granularity){const segment=new Intl.Segmenter(void 0,{granularity}).segment(input);index_throws.forEach(function(index){assert.throws(TypeError,()=>{segment.containing(index)})})});␊



test262/test/intl402/Segmenter/prototype/segment/containing/zero-index.js 10


Differences (-oxc|+esbuild):
-const input="a b c",granularities=[void 0,"grapheme","word","sentence"],index_to_zeros=[0,-0,NaN,.49,-.49,null,void 0,!1,"𐀀","\\ud800","\\udc00","a","g","Ý","0","+0","-0","0.49","+0.49","-0.49","4.9e-1","-4.9e-1","4.9E-1","-4.9E-1",{toString(){return"-0.1"}},{valueOf(){return .1}},{[Symbol.toPrimitive](){return-.1}}];granularities.forEach(function(granularity){let segmenter=new Intl.Segmenter(void 0,{granularity}),segment=segmenter.segment(input);index_to_zeros.forEach(function(index){let result=segment.containing(index);assert.sameValue(0,result.index),assert.sameValue(input,result.input)})});
+const input="a b c",granularities=[void 0,"grapheme","word","sentence"],index_to_zeros=[0,-0,NaN,.49,-.49,null,void 0,!1,"\u{10000}","\uD800","\uDC00","a","g","\xDD","0","+0","-0","0.49","+0.49","-0.49","4.9e-1","-4.9e-1","4.9E-1","-4.9E-1",{toString(){return"-0.1"}},{valueOf(){return .1}},{[Symbol.toPrimitive](){return-.1}}];granularities.forEach(function(granularity){const segment=new Intl.Segmenter(void 0,{granularity}).segment(input);index_to_zeros.forEach(function(index){const result=segment.containing(index);assert.sameValue(0,result.index),assert.sameValue(input,result.input)})});␊



test262/test/intl402/Segmenter/prototype/segment/containing/one-index.js 11


Differences (-oxc|+esbuild):
-const input="a c",granularities=[void 0,"grapheme","word"],index_to_one=[1,1.49,1.49,1.49,"1.49","14.9E-1","14.9e-1",!0,{toString(){return"1"}},{valueOf(){return 1}},{[Symbol.toPrimitive](){return 1}}];granularities.forEach(function(granularity){let segmenter=new Intl.Segmenter(void 0,{granularity}),segment=segmenter.segment(input);index_to_one.forEach(function(index){let result=segment.containing(index),msg="granularity: "+granularity+" index: "+index;assert.sameValue(1,result.index,msg+" index"),assert.sameValue(" ",result.segment,msg+" segment"),assert.sameValue(input,result.input,msg+" input")})});const segmenter=new Intl.Segmenter(void 0,{granularity:"sentence"}),segment=segmenter.segment(input);index_to_one.forEach(function(index){let result=segment.containing(index),msg="granularity: sentence index: "+index;assert.sameValue(0,result.index,msg+" index"),assert.sameValue(input,result.segment,msg+" segment"),assert.sameValue(input,result.input,msg+" input")});
+const input="a c",granularities=[void 0,"grapheme","word"],index_to_one=[1,1.49,1.49,1.49,"1.49","14.9E-1","14.9e-1",!0,{toString(){return"1"}},{valueOf(){return 1}},{[Symbol.toPrimitive](){return 1}}];granularities.forEach(function(granularity){const segment2=new Intl.Segmenter(void 0,{granularity}).segment(input);index_to_one.forEach(function(index){const result=segment2.containing(index),msg="granularity: "+granularity+" index: "+index;assert.sameValue(1,result.index,msg+" index"),assert.sameValue(" ",result.segment,msg+" segment"),assert.sameValue(input,result.input,msg+" input")})});const segmenter=new Intl.Segmenter(void 0,{granularity:"sentence"}),segment=segmenter.segment(input);index_to_one.forEach(function(index){const result=segment.containing(index),msg="granularity: sentence index: "+index;assert.sameValue(0,result.index,msg+" index"),assert.sameValue(input,result.segment,msg+" segment"),assert.sameValue(input,result.input,msg+" input")});␊



test262/test/intl402/Segmenter/prototype/segment/containing/out-of-bound-index.js 15


Differences (-oxc|+esbuild):
-const input="a b c",granularities=[void 0,"grapheme","word","sentence"],index_to_out_of_bound=[input.length,input.length+.1,-1,-2,"-1","-2","-1.1",1/0,-1/0,"Infinity","-Infinity",{toString(){return"-1"}},{valueOf(){return input.length}},{[Symbol.toPrimitive](){return-1}}];granularities.forEach(function(granularity){let segmenter=new Intl.Segmenter(void 0,{granularity}),segment=segmenter.segment(input);index_to_out_of_bound.forEach(function(index){let result=segment.containing(index);assert.sameValue(void 0,result)})});
+const input="a b c",granularities=[void 0,"grapheme","word","sentence"],index_to_out_of_bound=[input.length,input.length+.1,-1,-2,"-1","-2","-1.1",1/0,-1/0,"Infinity","-Infinity",{toString(){return"-1"}},{valueOf(){return input.length}},{[Symbol.toPrimitive](){return-1}}];granularities.forEach(function(granularity){const segment=new Intl.Segmenter(void 0,{granularity}).segment(input);index_to_out_of_bound.forEach(function(index){const result=segment.containing(index);assert.sameValue(void 0,result)})});␊



test262/test/intl402/Segmenter/prototype/segment/segment-tostring.js 13


Differences (-oxc|+esbuild):
-const tests=[[[],"undefined"],[[void 0],"undefined"],[[null],"null"],[[!0],"true"],[[!1],"false"],[[12],"12"],[[1.23],"1.23"],[[["a","b"]],"a"],[[{}],"["]],segmenter=new Intl.Segmenter("en",{granularity:"word"});for(let[args,expected]of tests){let segments=segmenter.segment(...args),actual=[...segments][0].segment;assert.sameValue(actual,expected,`Expected segment "${expected}", found "${actual}" for arguments ${args}`)}const symbol=Symbol();assert.throws(TypeError,()=>segmenter.segment(symbol));
+const tests=[[[],"undefined"],[[void 0],"undefined"],[[null],"null"],[[!0],"true"],[[!1],"false"],[[12],"12"],[[1.23],"1.23"],[[["a","b"]],"a"],[[{}],"["]],segmenter=new Intl.Segmenter("en",{granularity:"word"});for(const[args,expected]of tests){const actual=[...segmenter.segment(...args)][0].segment;assert.sameValue(actual,expected,`Expected segment "${expected}", found "${actual}" for arguments ${args}`)}const symbol=Symbol();assert.throws(TypeError,()=>segmenter.segment(symbol));␊



test262/test/language/expressions/strict-equals/S11.9.4_A2.1_T2.js 3


Differences (-oxc|+esbuild):
-try{throw x===1,new Test262Error("#1.1: x === 1 throw ReferenceError. Actual: "+(x===1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x === 1 throw ReferenceError. Actual: "+e)}
+try{throw x,new Test262Error("#1.1: x === 1 throw ReferenceError. Actual: "+(x===1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x === 1 throw ReferenceError. Actual: "+e)}␊



test262/test/language/expressions/strict-equals/S11.9.4_A2.1_T3.js 3


Differences (-oxc|+esbuild):
-try{throw y===1,new Test262Error("#1.1: 1 === y throw ReferenceError. Actual: "+(y===1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 === y throw ReferenceError. Actual: "+e)}
+try{throw y,new Test262Error("#1.1: 1 === y throw ReferenceError. Actual: "+(y===1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 === y throw ReferenceError. Actual: "+e)}␊



test262/test/language/expressions/strict-equals/S11.9.4_A2.4_T3.js 3


Differences (-oxc|+esbuild):
-try{throw x===(x=1),new Test262Error("#1.1: x === (x = 1) throw ReferenceError. Actual: "+(x===(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x === (x = 1) throw ReferenceError. Actual: "+e)}
+try{throw x,x=1,new Test262Error("#1.1: x === (x = 1) throw ReferenceError. Actual: "+(x===(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x === (x = 1) throw ReferenceError. Actual: "+e)}␊



test262/test/intl402/Segmenter/constructor/constructor/options-granularity-valid.js 15


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,"grapheme"],["grapheme","grapheme"],["word","word"],["sentence","sentence"],[{toString(){return"word"}},"word"]];for(let[granularity,expected]of validOptions){let segmenter=new Intl.Segmenter([],{granularity}),resolvedOptions=segmenter.resolvedOptions();assert.sameValue(resolvedOptions.granularity,expected)}assert.throws(RangeError,()=>new Intl.Segmenter([],{granularity:"line"}));
+const validOptions=[[void 0,"grapheme"],["grapheme","grapheme"],["word","word"],["sentence","sentence"],[{toString(){return"word"}},"word"]];for(const[granularity,expected]of validOptions){const resolvedOptions=new Intl.Segmenter([],{granularity}).resolvedOptions();assert.sameValue(resolvedOptions.granularity,expected)}assert.throws(RangeError,()=>new Intl.Segmenter([],{granularity:"line"}));␊



test262/test/intl402/Segmenter/constructor/constructor/locales-valid.js 9


Differences (-oxc|+esbuild):
-const defaultLocale=new Intl.Segmenter().resolvedOptions().locale,tests=[[void 0,[defaultLocale],"undefined"],["EN",["en"],"Single value"],[[],[defaultLocale],"Empty array"],[["sr"],["sr"],"Single-element array"],[["fr","ar"],["fr","ar"],"Two-element array"],[["xyz","ar"],["ar"],"Two-element array with unknown code"],[["en","EN"],["en"],"Duplicate value (canonical first)"],[["EN","en"],["en"],"Duplicate value (canonical last)"],[{0:"DE",length:0},[defaultLocale],"Object with zero length"],[{0:"DE",length:1},["de"],"Object with length"],[{0:"ja",1:"fr"},[defaultLocale],"Object without length, indexed from 0"],[{1:"ja",2:"fr"},[defaultLocale],"Object without length, indexed from 1"]],errorTests=[[["en-GB-oed"],"Grandfathered"],[["x-private"],"Private",["lookup"]]];for(let[locales,expected,name,matchers=["best fit","lookup"]]of tests)for(let localeMatcher of matchers){let segmenter=new Intl.Segmenter(locales,{localeMatcher}),actual=segmenter.resolvedOptions().locale;assert(expected.includes(actual),`${name}: expected one of ${expected}, found ${actual}`)}for(let[locales,name,matchers=["best fit","lookup"]]of errorTests)for(let localeMatcher of matchers)assert.throws(RangeError,function(){new Intl.Segmenter(locales,{localeMatcher})},name);
+const defaultLocale=new Intl.Segmenter().resolvedOptions().locale,tests=[[void 0,[defaultLocale],"undefined"],["EN",["en"],"Single value"],[[],[defaultLocale],"Empty array"],[["sr"],["sr"],"Single-element array"],[["fr","ar"],["fr","ar"],"Two-element array"],[["xyz","ar"],["ar"],"Two-element array with unknown code"],[["en","EN"],["en"],"Duplicate value (canonical first)"],[["EN","en"],["en"],"Duplicate value (canonical last)"],[{0:"DE",length:0},[defaultLocale],"Object with zero length"],[{0:"DE",length:1},["de"],"Object with length"],[{0:"ja",1:"fr"},[defaultLocale],"Object without length, indexed from 0"],[{1:"ja",2:"fr"},[defaultLocale],"Object without length, indexed from 1"]],errorTests=[[["en-GB-oed"],"Grandfathered"],[["x-private"],"Private",["lookup"]]];for(const[locales,expected,name,matchers=["best fit","lookup"]]of tests)for(const localeMatcher of matchers){const actual=new Intl.Segmenter(locales,{localeMatcher}).resolvedOptions().locale;assert(expected.includes(actual),`${name}: expected one of ${expected}, found ${actual}`)}for(const[locales,name,matchers=["best fit","lookup"]]of errorTests)for(const localeMatcher of matchers)assert.throws(RangeError,function(){new Intl.Segmenter(locales,{localeMatcher})},name);␊



test262/test/intl402/Segmenter/constructor/constructor/options-valid-combinations.js 13


Differences (-oxc|+esbuild):
-const granularityOptions=["grapheme","word","sentence"],combinations=[];combinations.push([{},"grapheme",void 0]);for(let granularity of granularityOptions)combinations.push([{granularity},granularity,void 0]);for(let[input,granularity,lineBreakStyle]of combinations){let segmenter=new Intl.Segmenter([],input),resolvedOptions=segmenter.resolvedOptions();assert.sameValue(resolvedOptions.granularity,granularity)}
+const granularityOptions=["grapheme","word","sentence"],combinations=[];combinations.push([{},"grapheme",void 0]);for(const granularity of granularityOptions)combinations.push([{granularity},granularity,void 0]);for(const[input,granularity,lineBreakStyle]of combinations){const resolvedOptions=new Intl.Segmenter([],input).resolvedOptions();assert.sameValue(resolvedOptions.granularity,granularity)}␊



test262/test/intl402/RelativeTimeFormat/constructor/constructor/options-numeric-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,"always"],["always","always"],["auto","auto"],[{toString(){return"auto"}},"auto"]];for(let[validOption,expected]of validOptions){let tf=new Intl.RelativeTimeFormat([],{numeric:validOption}),resolvedOptions=tf.resolvedOptions();assert.sameValue(resolvedOptions.numeric,expected)}
+const validOptions=[[void 0,"always"],["always","always"],["auto","auto"],[{toString(){return"auto"}},"auto"]];for(const[validOption,expected]of validOptions){const resolvedOptions=new Intl.RelativeTimeFormat([],{numeric:validOption}).resolvedOptions();assert.sameValue(resolvedOptions.numeric,expected)}␊



test262/test/built-ins/StringIteratorPrototype/next/next-iteration-surrogate-pairs.js 1


Differences (-oxc|+esbuild):
-var lo="\\ud834",hi="\\udf06",pair=lo+hi,string="a"+pair+"b"+lo+pair+hi+lo,iterator=string[Symbol.iterator](),result;result=iterator.next(),assert.sameValue(result.value,"a","First normal code point `value`"),assert.sameValue(result.done,!1,"First normal code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,pair,"Surrogate pair `value` (between normal code points)"),assert.sameValue(result.done,!1,"Surrogate pair `done` flag (between normal code points)"),result=iterator.next(),assert.sameValue(result.value,"b","Second normal code point `value`"),assert.sameValue(result.done,!1,"Second normal code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,lo,"Lone lower code point `value` (following normal code point)"),assert.sameValue(result.done,!1,"Lone lower code point `done` flag (following normal code point)"),result=iterator.next(),assert.sameValue(result.value,pair,"Surrogate pair `value` (between lone lower- and upper- code points)"),assert.sameValue(result.done,!1,"Surrogate pair `done` flag (between lone lower- and upper- code points)"),result=iterator.next(),assert.sameValue(result.value,hi,"Lone upper code point `value`"),assert.sameValue(result.done,!1,"Lone upper code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,lo,"Lone lower code point `value` (following lone upper code point)"),assert.sameValue(result.done,!1,"Lone lower code point `done` flag (following lone upper code point)"),result=iterator.next(),assert.sameValue(result.value,void 0,"Exhausted result `value`"),assert.sameValue(result.done,!0,"Exhausted result `done` flag"),result=iterator.next(),assert.sameValue(result.value,void 0,"Exhausted result `value` (repeated request)"),assert.sameValue(result.done,!0,"Exhausted result `done` flag (repeated request");
+var lo="\uD834",hi="\uDF06",pair=lo+hi,string="a"+pair+"b"+lo+pair+hi+lo,iterator=string[Symbol.iterator](),result;result=iterator.next(),assert.sameValue(result.value,"a","First normal code point `value`"),assert.sameValue(result.done,!1,"First normal code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,pair,"Surrogate pair `value` (between normal code points)"),assert.sameValue(result.done,!1,"Surrogate pair `done` flag (between normal code points)"),result=iterator.next(),assert.sameValue(result.value,"b","Second normal code point `value`"),assert.sameValue(result.done,!1,"Second normal code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,lo,"Lone lower code point `value` (following normal code point)"),assert.sameValue(result.done,!1,"Lone lower code point `done` flag (following normal code point)"),result=iterator.next(),assert.sameValue(result.value,pair,"Surrogate pair `value` (between lone lower- and upper- code points)"),assert.sameValue(result.done,!1,"Surrogate pair `done` flag (between lone lower- and upper- code points)"),result=iterator.next(),assert.sameValue(result.value,hi,"Lone upper code point `value`"),assert.sameValue(result.done,!1,"Lone upper code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,lo,"Lone lower code point `value` (following lone upper code point)"),assert.sameValue(result.done,!1,"Lone lower code point `done` flag (following lone upper code point)"),result=iterator.next(),assert.sameValue(result.value,void 0,"Exhausted result `value`"),assert.sameValue(result.done,!0,"Exhausted result `done` flag"),result=iterator.next(),assert.sameValue(result.value,void 0,"Exhausted result `value` (repeated request)"),assert.sameValue(result.done,!0,"Exhausted result `done` flag (repeated request");␊



test262/test/intl402/RelativeTimeFormat/constructor/constructor/options-toobject.js 3


Differences (-oxc|+esbuild):
-const optionsArguments=[!0,"test",7,Symbol()];for(let options of optionsArguments){let rtf=new Intl.RelativeTimeFormat([],options),resolvedOptions=rtf.resolvedOptions();assert.sameValue(resolvedOptions.style,"long",`options argument ${String(options)} should yield the correct value for "style"`),assert.sameValue(resolvedOptions.numeric,"always",`options argument ${String(options)} should yield the correct value for "numeric"`)}
+const optionsArguments=[!0,"test",7,Symbol()];for(const options of optionsArguments){const resolvedOptions=new Intl.RelativeTimeFormat([],options).resolvedOptions();assert.sameValue(resolvedOptions.style,"long",`options argument ${String(options)} should yield the correct value for "style"`),assert.sameValue(resolvedOptions.numeric,"always",`options argument ${String(options)} should yield the correct value for "numeric"`)}␊



test262/test/intl402/RelativeTimeFormat/constructor/constructor/options-toobject-prototype.js 3


Differences (-oxc|+esbuild):
-Object.defineProperties(Object.prototype,{style:{value:"short"},numeric:{value:"auto"}});const optionsArguments=[!0,"test",7,Symbol()];for(let options of optionsArguments){let rtf=new Intl.RelativeTimeFormat([],options),resolvedOptions=rtf.resolvedOptions();assert.sameValue(resolvedOptions.style,"short",`options argument ${String(options)} should yield the correct value for "style"`),assert.sameValue(resolvedOptions.numeric,"auto",`options argument ${String(options)} should yield the correct value for "numeric"`)}
+Object.defineProperties(Object.prototype,{style:{value:"short"},numeric:{value:"auto"}});const optionsArguments=[!0,"test",7,Symbol()];for(const options of optionsArguments){const resolvedOptions=new Intl.RelativeTimeFormat([],options).resolvedOptions();assert.sameValue(resolvedOptions.style,"short",`options argument ${String(options)} should yield the correct value for "style"`),assert.sameValue(resolvedOptions.numeric,"auto",`options argument ${String(options)} should yield the correct value for "numeric"`)}␊



test262/test/intl402/RelativeTimeFormat/constructor/constructor/options-style-valid.js 1


Differences (-oxc|+esbuild):
-const validOptions=[[void 0,"long"],["long","long"],["short","short"],["narrow","narrow"],[{toString(){return"narrow"}},"narrow"]];for(let[validOption,expected]of validOptions){let tf=new Intl.RelativeTimeFormat([],{style:validOption}),resolvedOptions=tf.resolvedOptions();assert.sameValue(resolvedOptions.style,expected)}
+const validOptions=[[void 0,"long"],["long","long"],["short","short"],["narrow","narrow"],[{toString(){return"narrow"}},"narrow"]];for(const[validOption,expected]of validOptions){const resolvedOptions=new Intl.RelativeTimeFormat([],{style:validOption}).resolvedOptions();assert.sameValue(resolvedOptions.style,expected)}␊



test262/test/language/expressions/object/method-definition/name-prop-name-eval-error.js 4


Differences (-oxc|+esbuild):
-assert.throws(Test262Error,function(){({[function(){throw new Test262Error}()](){}})});
+assert.throws(Test262Error,function(){(function(){throw new Test262Error})()+""});␊



test262/test/built-ins/encodeURI/S15.1.3.3_A2.2_T1.js 3


Differences (-oxc|+esbuild):
-var errorCount=0,count=0,indexP,indexO=0;l:for(var index=128;index<=2047;index++){count++;var hex1=decimalToPercentHexString(128+(index&63)),hex2=decimalToPercentHexString(192+(index&1984)/64),str=String.fromCharCode(index);if(encodeURI(str).toUpperCase()===hex2+hex1)continue;if(indexO===0)indexO=index;else if(index-indexP!=1){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}if(errorCount>0){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}
+for(var errorCount=0,count=0,indexP,indexO=0,index=128;index<=2047;index++){count++;var hex1=decimalToPercentHexString(128+(index&63)),hex2=decimalToPercentHexString(192+(index&1984)/64),str=String.fromCharCode(index);if(encodeURI(str).toUpperCase()!==hex2+hex1){if(indexO===0)indexO=index;else if(index-indexP!==1){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}␊



test262/test/built-ins/ArrayBuffer/options-maxbytelength-compared-before-object-creation.js 41


Differences (-oxc|+esbuild):
-let newTarget=Object.defineProperty(function(){}.bind(null),"prototype",{get(){throw new Test262Error}});assert.throws(RangeError,function(){let byteLength=10,options={maxByteLength:0};Reflect.construct(ArrayBuffer,[byteLength,options],newTarget)});
+let newTarget=Object.defineProperty(function(){}.bind(null),"prototype",{get(){throw new Test262Error}});assert.throws(RangeError,function(){Reflect.construct(ArrayBuffer,[10,{maxByteLength:0}],newTarget)});␊



test262/test/built-ins/encodeURIComponent/S15.1.3.4_A2.2_T1.js 3


Differences (-oxc|+esbuild):
-var errorCount=0,count=0,indexP,indexO=0;l:for(var index=128;index<=2047;index++){count++;var hex1=decimalToPercentHexString(128+(index&63)),hex2=decimalToPercentHexString(192+(index&1984)/64),str=String.fromCharCode(index);if(encodeURIComponent(str).toUpperCase()===hex2+hex1)continue;if(indexO===0)indexO=index;else if(index-indexP!=1){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}if(errorCount>0){if(indexP-indexO){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}
+for(var errorCount=0,count=0,indexP,indexO=0,index=128;index<=2047;index++){count++;var hex1=decimalToPercentHexString(128+(index&63)),hex2=decimalToPercentHexString(192+(index&1984)/64),str=String.fromCharCode(index);if(encodeURIComponent(str).toUpperCase()!==hex2+hex1){if(indexO===0)indexO=index;else if(index-indexP!==1){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}indexO=index}indexP=index,errorCount++}}if(errorCount>0){if(indexP-indexO!==0){var hexP=decimalToHexString(indexP),hexO=decimalToHexString(indexO);throw new Test262Error("#"+hexO+"-"+hexP+" ")}else{var hexP=decimalToHexString(indexP);throw new Test262Error("#"+hexP+" ")}throw new Test262Error("Total error: "+errorCount+" bad Unicode character in "+count+" ")}␊



test262/test/built-ins/String/prototype/codePointAt/return-first-code-unit.js 25


Differences (-oxc|+esbuild):
-assert.sameValue("\\ud800\\udbff".codePointAt(0),55296),assert.sameValue("\\ud800\\ue000".codePointAt(0),55296),assert.sameValue("\\udaaa\\udbff".codePointAt(0),55978),assert.sameValue("\\udaaa\\ue000".codePointAt(0),55978),assert.sameValue("\\udbff\\udbff".codePointAt(0),56319),assert.sameValue("\\udbff\\ue000".codePointAt(0),56319),assert.sameValue("\\ud800\\u0".codePointAt(0),55296),assert.sameValue("\\ud800\\uffff".codePointAt(0),55296),assert.sameValue("\\udaaa\\u0".codePointAt(0),55978),assert.sameValue("\\udaaa\\uffff".codePointAt(0),55978),assert.sameValue("\\udbff\\udbff".codePointAt(0),56319),assert.sameValue("\\udbff\\uffff".codePointAt(0),56319);
+assert.sameValue("\uD800\uDBFF".codePointAt(0),55296),assert.sameValue("\uD800\uE000".codePointAt(0),55296),assert.sameValue("\uDAAA\uDBFF".codePointAt(0),55978),assert.sameValue("\uDAAA\uE000".codePointAt(0),55978),assert.sameValue("\uDBFF\uDBFF".codePointAt(0),56319),assert.sameValue("\uDBFF\uE000".codePointAt(0),56319),assert.sameValue("\uD800\0".codePointAt(0),55296),assert.sameValue("\uD800\uFFFF".codePointAt(0),55296),assert.sameValue("\uDAAA\0".codePointAt(0),55978),assert.sameValue("\uDAAA\uFFFF".codePointAt(0),55978),assert.sameValue("\uDBFF\uDBFF".codePointAt(0),56319),assert.sameValue("\uDBFF\uFFFF".codePointAt(0),56319);␊



test262/test/built-ins/String/prototype/split/separator-undef-limit-custom.js 2


Differences (-oxc|+esbuild):
-var str="undefined is not a function",result=str.split(void 0,1);assert.sameValue(Array.isArray(result),!0,"1, result is array"),assert.sameValue(result.length,1,"1, result.length"),assert.sameValue(result[0],str,"1, [0] is the same string"),result=str.split(void 0,2),assert.sameValue(Array.isArray(result),!0,"2, result is array"),assert.sameValue(result.length,1,"2, result.length"),assert.sameValue(result[0],str,"2, [0] is the same string"),result=str.split(void 0,void 0),assert.sameValue(Array.isArray(result),!0,"undefined, result is array"),assert.sameValue(result.length,1,"undefined, result.length"),assert.sameValue(result[0],str,"undefined, [0] is the same string"),result=str.split(void 0,!0),assert.sameValue(Array.isArray(result),!0,"boolean, result is array"),assert.sameValue(result.length,1,"boolean, result.length"),assert.sameValue(result[0],str,"boolean, [0] is the same string"),result=str.split(void 0,4294967297),assert.sameValue(Array.isArray(result),!0,"ToUint32 2 ** 32 + 1, result is array"),assert.sameValue(result.length,1,"ToUint32 2 ** 32 + 1, result.length"),assert.sameValue(result[0],str,"ToUint32 2 ** 32 + 1, [0] is the same string"),result=str.split(void 0,2**31),assert.sameValue(Array.isArray(result),!0,"ToUint32 2 ** 31, result is array"),assert.sameValue(result.length,1,"ToUint32 2 ** 31, result.length"),assert.sameValue(result[0],str,"ToUint32 2 ** 31, [0] is the same string"),result=str.split(void 0,2**16),assert.sameValue(Array.isArray(result),!0,"ToUint32 2 ** 16, result is array"),assert.sameValue(result.length,1,"ToUint32 2 ** 16, result.length"),assert.sameValue(result[0],str,"ToUint32 2 ** 16, [0] is the same string"),result=str.split(void 0,{valueOf(){return 1}}),assert.sameValue(Array.isArray(result),!0,"boolean, result is array"),assert.sameValue(result.length,1,"boolean, result.length"),assert.sameValue(result[0],str,"boolean, [0] is the same string");
+var str="undefined is not a function",result=str.split(void 0,1);assert.sameValue(Array.isArray(result),!0,"1, result is array"),assert.sameValue(result.length,1,"1, result.length"),assert.sameValue(result[0],str,"1, [0] is the same string"),result=str.split(void 0,2),assert.sameValue(Array.isArray(result),!0,"2, result is array"),assert.sameValue(result.length,1,"2, result.length"),assert.sameValue(result[0],str,"2, [0] is the same string"),result=str.split(void 0,void 0),assert.sameValue(Array.isArray(result),!0,"undefined, result is array"),assert.sameValue(result.length,1,"undefined, result.length"),assert.sameValue(result[0],str,"undefined, [0] is the same string"),result=str.split(void 0,!0),assert.sameValue(Array.isArray(result),!0,"boolean, result is array"),assert.sameValue(result.length,1,"boolean, result.length"),assert.sameValue(result[0],str,"boolean, [0] is the same string"),result=str.split(void 0,2**32+1),assert.sameValue(Array.isArray(result),!0,"ToUint32 2 ** 32 + 1, result is array"),assert.sameValue(result.length,1,"ToUint32 2 ** 32 + 1, result.length"),assert.sameValue(result[0],str,"ToUint32 2 ** 32 + 1, [0] is the same string"),result=str.split(void 0,2**31),assert.sameValue(Array.isArray(result),!0,"ToUint32 2 ** 31, result is array"),assert.sameValue(result.length,1,"ToUint32 2 ** 31, result.length"),assert.sameValue(result[0],str,"ToUint32 2 ** 31, [0] is the same string"),result=str.split(void 0,2**16),assert.sameValue(Array.isArray(result),!0,"ToUint32 2 ** 16, result is array"),assert.sameValue(result.length,1,"ToUint32 2 ** 16, result.length"),assert.sameValue(result[0],str,"ToUint32 2 ** 16, [0] is the same string"),result=str.split(void 0,{valueOf(){return 1}}),assert.sameValue(Array.isArray(result),!0,"boolean, result is array"),assert.sameValue(result.length,1,"boolean, result.length"),assert.sameValue(result[0],str,"boolean, [0] is the same string");␊


esbuild_test262 Summary:
AST Parsed     : 44101/44101 (100.00%)
Positive Passed: 43690/44101 (99.07%)
