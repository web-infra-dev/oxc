
test262/test/built-ins/TypedArrayConstructors/ctors/object-arg/throws-setting-symbol-property.js


var obj={"2":Symbol("1"),length:4};testWithTypedArrayConstructors(function(TA){assert.throws(TypeError,function(){new TA(obj)})});


var obj={2:Symbol("1"),length:4};testWithTypedArrayConstructors(function(TA){assert.throws(TypeError,function(){new TA(obj)})});



test262/test/language/statements/const/global-use-before-initialization-in-prior-statement.js


x;const x=1;


const x=1;



test262/test/language/statements/const/block-local-use-before-initialization-in-prior-statement.js


assert.throws(ReferenceError,function(){{x;const x=1}});


assert.throws(ReferenceError,function(){{const x=1}});



test262/test/language/expressions/less-than/S11.8.1_A2.1_T2.js


try{throw x<1,new Test262Error("#1.1: x < 1 throw ReferenceError. Actual: "+(x<1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x < 1 throw ReferenceError. Actual: "+e)}


try{throw x<1,new Test262Error("#1.1: x < 1 throw ReferenceError. Actual: "+(x<1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x < 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/less-than/S11.8.1_A2.1_T3.js


try{throw 1<y,new Test262Error("#1.1: 1 < y throw ReferenceError. Actual: "+(1<y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 < y throw ReferenceError. Actual: "+e)}


try{throw 1<y,new Test262Error("#1.1: 1 < y throw ReferenceError. Actual: "+(1<y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 < y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/less-than/S11.8.1_A2.4_T3.js


try{throw x<(x=1),new Test262Error("#1.1: x < (x = 1) throw ReferenceError. Actual: "+(x<(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x < (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x<(x=1),new Test262Error("#1.1: x < (x = 1) throw ReferenceError. Actual: "+(x<(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x < (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/less-than/S11.8.1_A4.11.js


var x="x";if(x<x+"y"!==!0)throw new Test262Error('#6: var x = "x"; (x < x + "y") === true');


var x="x";if(!(x<x+"y"))throw new Test262Error('#6: var x = "x"; (x < x + "y") === true');



test262/test/language/expressions/unary-plus/S11.4.6_A2.1_T2.js


try{throw+x,new Test262Error("#1.1: +x throw ReferenceError. Actual: "+ +x)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: +x throw ReferenceError. Actual: "+e)}


try{throw+x,new Test262Error("#1.1: +x throw ReferenceError. Actual: "+ +x)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: +x throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/unary-plus/S11.4.6_A1.js


if(eval("+	1")!==1)throw new Test262Error("#1: +\\u00091 === 1");if(eval("+\v1")!==1)throw new Test262Error("#2: +\\u000B1 === 1");if(eval("+\f1")!==1)throw new Test262Error("#3: +\\u000C1 === 1");if(eval("+ 1")!==1)throw new Test262Error("#4: +\\u0020 === 1");if(eval("+\xA01")!==1)throw new Test262Error("#5: +\\u00A01 === 1");if(eval("+\n1")!==1)throw new Test262Error("#6: +\\u000A1 === 1");if(eval("+\r1")!==1)throw new Test262Error("#7: +\\u000D1 === 1");if(eval("+\u20281")!==1)throw new Test262Error("#8: +\\u20281 === 1");if(eval("+\u20291")!==1)throw new Test262Error("#9: +\\u20291 === 1");if(eval("+	\v\f \xA0\n\r\u2028\u20291")!==1)throw new Test262Error("#10: +\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291 === 1");


if(eval("+	1")!==1)throw new Test262Error("#1: +\\u00091 === 1");if(eval("+\v1")!==1)throw new Test262Error("#2: +\\u000B1 === 1");if(eval("+\f1")!==1)throw new Test262Error("#3: +\\u000C1 === 1");if(eval("+ 1")!==1)throw new Test262Error("#4: +\\u0020 === 1");if(eval("+\xA01")!==1)throw new Test262Error("#5: +\\u00A01 === 1");if(eval(`+
1`)!==1)throw new Test262Error("#6: +\\u000A1 === 1");if(eval("+\r1")!==1)throw new Test262Error("#7: +\\u000D1 === 1");if(eval("+\u20281")!==1)throw new Test262Error("#8: +\\u20281 === 1");if(eval("+\u20291")!==1)throw new Test262Error("#9: +\\u20291 === 1");if(eval(`+	\v\f \xA0
\r\u2028\u20291`)!==1)throw new Test262Error("#10: +\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291 === 1");



test262/test/language/expressions/unary-plus/S11.4.6_A3_T5.js


if(isNaN(+{})!==!0)throw new Test262Error("#1: +{} === Not-a-Number. Actual: "+ +{});if(isNaN(+function(){return 1})!==!0)throw new Test262Error("#2: +function(){return 1} === Not-a-Number. Actual: "+ +function(){return 1});


if(isNaN(NaN)!==!0)throw new Test262Error("#1: +{} === Not-a-Number. Actual: NaN");if(isNaN(+function(){return 1})!==!0)throw new Test262Error("#2: +function(){return 1} === Not-a-Number. Actual: "+ +function(){return 1});



test262/test/language/statements/let/global-use-before-initialization-in-prior-statement.js


x;let x;


let x;



test262/test/language/statements/let/block-local-use-before-initialization-in-prior-statement.js


assert.throws(ReferenceError,function(){{x;let x}});


assert.throws(ReferenceError,function(){{let x}});



test262/test/language/statements/let/syntax/escaped-let.js


this.let=0;let;a;var a;


this.let=0,let;var a;



test262/test/built-ins/String/prototype/search/S15.5.4.12_A7.js


var __FACTORY=String.prototype.search;try{var __instance=new __FACTORY;throw new Test262Error('#1: __FACTORY = String.prototype.search; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error('#1.1: __FACTORY = String.prototype.search; "__instance = new __FACTORY" throw a TypeError. Actual: '+e)}


var __FACTORY=String.prototype.search;try{var __instance=new __FACTORY;throw new Test262Error('#1: __FACTORY = String.prototype.search; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(!(e instanceof TypeError))throw new Test262Error('#1.1: __FACTORY = String.prototype.search; "__instance = new __FACTORY" throw a TypeError. Actual: '+e)}



test262/test/language/expressions/logical-and/S11.11.1_A2.1_T3.js


try{throw y,new Test262Error("#1.1: true && y throw ReferenceError. Actual: "+y)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: true && y throw ReferenceError. Actual: "+e)}


try{throw y,new Test262Error("#1.1: true && y throw ReferenceError. Actual: "+y)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: true && y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/division/S11.5.2_A2.1_T2.js


try{throw x/1,new Test262Error("#1.1: x / 1 throw ReferenceError. Actual: "+x/1)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x / 1 throw ReferenceError. Actual: "+e)}


try{throw x/1,new Test262Error("#1.1: x / 1 throw ReferenceError. Actual: "+x/1)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x / 1 throw ReferenceError. Actual: "+e)}



test262/test/built-ins/String/prototype/substring/S15.5.4.15_A7.js


var __FACTORY=String.prototype.substring;try{var __instance=new __FACTORY;throw new Test262Error('#1: __FACTORY = String.prototype.substring; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: undefined = 1 throw a TypeError. Actual: "+e)}


var __FACTORY=String.prototype.substring;try{var __instance=new __FACTORY;throw new Test262Error('#1: __FACTORY = String.prototype.substring; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: undefined = 1 throw a TypeError. Actual: "+e)}



test262/test/language/expressions/division/S11.5.2_A2.1_T3.js


try{throw 1/y,new Test262Error("#1.1: 1 / y throw ReferenceError. Actual: "+1/y)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 / y throw ReferenceError. Actual: "+e)}


try{throw 1/y,new Test262Error("#1.1: 1 / y throw ReferenceError. Actual: "+1/y)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 / y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/division/S11.5.2_A2.4_T3.js


try{throw x/(x=1),new Test262Error("#1.1: x / (x = 1) throw ReferenceError. Actual: "+x/(x=1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x / (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x/(x=1),new Test262Error("#1.1: x / (x = 1) throw ReferenceError. Actual: "+x/(x=1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x / (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/conditional/S11.12_A2.1_T4.js


try{throw z,new Test262Error("#1.1: false ? true : z throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: false ? true : z throw ReferenceError. Actual: "+e)}


try{throw z,new Test262Error("#1.1: false ? true : z throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: false ? true : z throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/conditional/S11.12_A2.1_T3.js


try{throw y,new Test262Error("#1.1: true ? y : false throw ReferenceError. Actual: "+y)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: true ? y : false throw ReferenceError. Actual: "+e)}


try{throw y,new Test262Error("#1.1: true ? y : false throw ReferenceError. Actual: "+y)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: true ? y : false throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/instanceof/S11.8.6_A4_T1.js


if(!1 instanceof Boolean)throw new Test262Error("#1: false is not instanceof Boolean");if(!1 instanceof Boolean)throw new Test262Error("#2: Boolean(false) is not instanceof Boolean");if(new Boolean instanceof Boolean!==!0)throw new Test262Error("#3: new Boolean instanceof Boolean");


if(!1 instanceof Boolean)throw new Test262Error("#1: false is not instanceof Boolean");if(!1 instanceof Boolean)throw new Test262Error("#2: Boolean(false) is not instanceof Boolean");if(!(new Boolean instanceof Boolean))throw new Test262Error("#3: new Boolean instanceof Boolean");



test262/test/language/expressions/instanceof/S11.8.6_A2.4_T3.js


try{throw object instanceof(object={},Object),new Test262Error("#1.1: object instanceof (object = {}, Object) throw ReferenceError. Actual: "+(object instanceof(object={},Object)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: object instanceof (object = {}, Object) throw ReferenceError. Actual: "+e)}


try{throw object instanceof(object={},Object),new Test262Error("#1.1: object instanceof (object = {}, Object) throw ReferenceError. Actual: "+(object instanceof(object={},Object)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: object instanceof (object = {}, Object) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/instanceof/S11.8.6_A6_T1.js


try{throw{}instanceof this,new Test262Error("#1: Only Function objects implement [[HasInstance]] and consequently can be proper ShiftExpression for The instanceof operator")}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1: Only Function objects implement [[HasInstance]] and consequently can be proper ShiftExpression for The instanceof operator")}


try{throw{}instanceof this,new Test262Error("#1: Only Function objects implement [[HasInstance]] and consequently can be proper ShiftExpression for The instanceof operator")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1: Only Function objects implement [[HasInstance]] and consequently can be proper ShiftExpression for The instanceof operator")}



test262/test/language/expressions/instanceof/S11.8.6_A2.1_T3.js


try{throw{}instanceof OBJECT,new Test262Error("#1.1: ({}) instanceof OBJECT throw ReferenceError. Actual: "+({}instanceof OBJECT))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: ({}) instanceof OBJECT throw ReferenceError. Actual: "+e)}


try{throw{}instanceof OBJECT,new Test262Error("#1.1: ({}) instanceof OBJECT throw ReferenceError. Actual: "+({}instanceof OBJECT))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: ({}) instanceof OBJECT throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/instanceof/S11.8.6_A2.1_T2.js


try{throw object instanceof Object,new Test262Error("#1.1: object instanceof Object throw ReferenceError. Actual: "+(object instanceof Object))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: object instanceof Object throw ReferenceError. Actual: "+e)}


try{throw object instanceof Object,new Test262Error("#1.1: object instanceof Object throw ReferenceError. Actual: "+(object instanceof Object))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: object instanceof Object throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/instanceof/S11.8.6_A6_T2.js


try{throw 1 instanceof Math,new Test262Error("#1: 1 instanceof Math throw TypeError")}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1: 1 instanceof Math throw TypeError")}


try{throw 1 instanceof Math,new Test262Error("#1: 1 instanceof Math throw TypeError")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1: 1 instanceof Math throw TypeError")}



test262/test/language/expressions/instanceof/S11.8.6_A4_T3.js


if(""instanceof String)throw new Test262Error('#1: "" is not instanceof String');if(""instanceof String)throw new Test262Error('#2: String("") is not instanceof String');if(new String instanceof String!==!0)throw new Test262Error("#3: new String instanceof String");


if(""instanceof String)throw new Test262Error('#1: "" is not instanceof String');if(""instanceof String)throw new Test262Error('#2: String("") is not instanceof String');if(!(new String instanceof String))throw new Test262Error("#3: new String instanceof String");



test262/test/language/expressions/delete/S11.4.1_A3.3_T1.js


try{throw x=1,delete x,x,new Test262Error("#1: x = 1; delete x; x is not exist")}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1: x = 1; delete x; x is not exist")}


try{throw x=1,delete x,x,new Test262Error("#1: x = 1; delete x; x is not exist")}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1: x = 1; delete x; x is not exist")}



test262/test/built-ins/String/prototype/at/returns-code-unit.js


assert.sameValue(typeof String.prototype.at,"function");let s="12\\ud80034";assert.sameValue(s.at(0),"1",'s.at(0) must return "1"');assert.sameValue(s.at(1),"2",'s.at(1) must return "2"');assert.sameValue(s.at(2),"\\ud800",'s.at(2) must return "\\uD800"');assert.sameValue(s.at(3),"3",'s.at(3) must return "3"');assert.sameValue(s.at(4),"4",'s.at(4) must return "4"');


assert.sameValue(typeof String.prototype.at,"function");let s="12\uD80034";assert.sameValue(s.at(0),"1",'s.at(0) must return "1"'),assert.sameValue(s.at(1),"2",'s.at(1) must return "2"'),assert.sameValue(s.at(2),"\uD800",'s.at(2) must return "\\uD800"'),assert.sameValue(s.at(3),"3",'s.at(3) must return "3"'),assert.sameValue(s.at(4),"4",'s.at(4) must return "4"');



test262/test/built-ins/String/prototype/toLocaleLowerCase/S15.5.4.17_A7.js


var __FACTORY=String.prototype.toLocaleLowerCase;try{var __instance=new __FACTORY;throw new Test262Error('#1: var __FACTORY = String.prototype.toLocaleLowerCase; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error('#1.1: var __FACTORY = String.prototype.toLocaleLowerCase; "var __instance = new __FACTORY" throw a TypeError. Actual: '+e)}


var __FACTORY=String.prototype.toLocaleLowerCase;try{var __instance=new __FACTORY;throw new Test262Error('#1: var __FACTORY = String.prototype.toLocaleLowerCase; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(!(e instanceof TypeError))throw new Test262Error('#1.1: var __FACTORY = String.prototype.toLocaleLowerCase; "var __instance = new __FACTORY" throw a TypeError. Actual: '+e)}



test262/test/language/expressions/postfix-decrement/S11.3.2_A2.1_T2.js


try{throw x--,new Test262Error("#1.1: x-- throw ReferenceError. Actual: "+x--)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x-- throw ReferenceError. Actual: "+e)}


try{throw x--,new Test262Error("#1.1: x-- throw ReferenceError. Actual: "+x--)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x-- throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/greater-than-or-equal/S11.8.4_A2.1_T3.js


try{throw 1>=y,new Test262Error("#1.1: 1 >= y throw ReferenceError. Actual: "+(1>=y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 >= y throw ReferenceError. Actual: "+e)}


try{throw 1>=y,new Test262Error("#1.1: 1 >= y throw ReferenceError. Actual: "+(1>=y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 >= y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/greater-than-or-equal/S11.8.4_A4.11.js


var x="x";if(x+"y">=x!==!0)throw new Test262Error('#6: var x = "x"; (x + "y" >= x) === true');


var x="x";if(!(x+"y">=x))throw new Test262Error('#6: var x = "x"; (x + "y" >= x) === true');



test262/test/language/expressions/greater-than-or-equal/S11.8.4_A2.1_T2.js


try{throw x>=1,new Test262Error("#1.1: x >= 1 throw ReferenceError. Actual: "+(x>=1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x >= 1 throw ReferenceError. Actual: "+e)}


try{throw x>=1,new Test262Error("#1.1: x >= 1 throw ReferenceError. Actual: "+(x>=1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x >= 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/greater-than-or-equal/S11.8.4_A2.4_T3.js


try{throw x>=(x=1),new Test262Error("#1.1: x >= (x = 1) throw ReferenceError. Actual: "+(x>=(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x >= (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x>=(x=1),new Test262Error("#1.1: x >= (x = 1) throw ReferenceError. Actual: "+(x>=(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x >= (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/greater-than-or-equal/S11.8.4_A2.4_T4.js


if((y=1)>=y!==!0)throw new Test262Error("#1: (y = 1) >= y === true");


if(!((y=1)>=y))throw new Test262Error("#1: (y = 1) >= y === true");



test262/test/language/expressions/subtraction/S11.6.2_A2.4_T3.js


try{throw x-(x=1),new Test262Error("#1.1: x - (x = 1) throw ReferenceError. Actual: "+(x-(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x - (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x-(x=1),new Test262Error("#1.1: x - (x = 1) throw ReferenceError. Actual: "+(x-(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x - (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/built-ins/decodeURIComponent/S15.1.3.2_A5.7.js


try{throw new decodeURIComponent,new Test262Error("#1.1: new decodeURIComponent() throw TypeError. Actual: "+new decodeURIComponent)}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: new decodeURIComponent() throw TypeError. Actual: "+e)}


try{throw new decodeURIComponent,new Test262Error("#1.1: new decodeURIComponent() throw TypeError. Actual: "+new decodeURIComponent)}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: new decodeURIComponent() throw TypeError. Actual: "+e)}



test262/test/language/expressions/subtraction/S11.6.2_A2.1_T2.js


try{throw x-1,new Test262Error("#1.1: x - 1 throw ReferenceError. Actual: "+(x-1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x - 1 throw ReferenceError. Actual: "+e)}


try{throw x-1,new Test262Error("#1.1: x - 1 throw ReferenceError. Actual: "+(x-1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x - 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/subtraction/S11.6.2_A2.1_T3.js


try{throw 1-y,new Test262Error("#1.1: 1 - y throw ReferenceError. Actual: "+(1-y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 - y throw ReferenceError. Actual: "+e)}


try{throw 1-y,new Test262Error("#1.1: 1 - y throw ReferenceError. Actual: "+(1-y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 - y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/array/S11.1.4_A1.3.js


var array=[1,2,3,4,5];if(typeof array!="object")throw new Test262Error('#1: var array = [1,2,3,4,5]; typeof array === "object". Actual: '+typeof array);if(array instanceof Array!==!0)throw new Test262Error("#2: var array = [1,2,3,4,5]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [1,2,3,4,5]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [1,2,3,4,5]; array.length === 5. Actual: "+array.length);if(array[0]!==1)throw new Test262Error("#5: var array = [1,2,3,4,5]; array[0] === 1. Actual: "+array[0]);if(array[1]!==2)throw new Test262Error("#6: var array = [1,2,3,4,5]; array[1] === 2. Actual: "+array[1]);if(array[2]!==3)throw new Test262Error("#7: var array = [1,2,3,4,5]; array[2] === 3. Actual: "+array[2]);if(array[3]!==4)throw new Test262Error("#8: var array = [1,2,3,4,5]; array[3] === 4. Actual: "+array[3]);if(array[4]!==5)throw new Test262Error("#9: var array = [1,2,3,4,5]; array[4] === 5. Actual: "+array[4]);


var array=[1,2,3,4,5];if(typeof array!="object")throw new Test262Error('#1: var array = [1,2,3,4,5]; typeof array === "object". Actual: '+typeof array);if(!(array instanceof Array))throw new Test262Error("#2: var array = [1,2,3,4,5]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [1,2,3,4,5]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [1,2,3,4,5]; array.length === 5. Actual: "+array.length);if(array[0]!==1)throw new Test262Error("#5: var array = [1,2,3,4,5]; array[0] === 1. Actual: "+array[0]);if(array[1]!==2)throw new Test262Error("#6: var array = [1,2,3,4,5]; array[1] === 2. Actual: "+array[1]);if(array[2]!==3)throw new Test262Error("#7: var array = [1,2,3,4,5]; array[2] === 3. Actual: "+array[2]);if(array[3]!==4)throw new Test262Error("#8: var array = [1,2,3,4,5]; array[3] === 4. Actual: "+array[3]);if(array[4]!==5)throw new Test262Error("#9: var array = [1,2,3,4,5]; array[4] === 5. Actual: "+array[4]);



test262/test/built-ins/String/prototype/toLocaleUpperCase/S15.5.4.19_A7.js


var __FACTORY=String.prototype.toLocaleUpperCase;try{var __instance=new __FACTORY;throw new Test262Error('#1: __FACTORY = String.prototype.toLocaleUpperCase; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.1:  var __instance = new __FACTORY;  Object has no construct lead  a TypeError. Actual: "+e)}


var __FACTORY=String.prototype.toLocaleUpperCase;try{var __instance=new __FACTORY;throw new Test262Error('#1: __FACTORY = String.prototype.toLocaleUpperCase; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.1:  var __instance = new __FACTORY;  Object has no construct lead  a TypeError. Actual: "+e)}



test262/test/language/expressions/array/S11.1.4_A1.7.js


var array=[1,2,,4,5];if(typeof array!="object")throw new Test262Error('#1: var array = [1,2,,4,5]; typeof array === "object". Actual: '+typeof array);if(array instanceof Array!==!0)throw new Test262Error("#2: var array = [1,2,,4,5]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [1,2,,4,5]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [1,2,,4,5]; array.length === 5. Actual: "+array.length);if(array[0]!==1)throw new Test262Error("#5: var array = [1,2,,4,5]; array[0] === 1. Actual: "+array[0]);if(array[1]!==2)throw new Test262Error("#6: var array = [1,2,,4,5]; array[1] === 2. Actual: "+array[1]);if(array[2]!==void 0)throw new Test262Error("#7: var array = [1,2,,4,5]; array[2] === undefined. Actual: "+array[2]);if(array[3]!==4)throw new Test262Error("#8: var array = [1,2,,4,5]; array[3] === 4. Actual: "+array[3]);if(array[4]!==5)throw new Test262Error("#9: var array = [1,2,,4,5]; array[4] === 5. Actual: "+array[4]);


var array=[1,2,,4,5];if(typeof array!="object")throw new Test262Error('#1: var array = [1,2,,4,5]; typeof array === "object". Actual: '+typeof array);if(!(array instanceof Array))throw new Test262Error("#2: var array = [1,2,,4,5]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [1,2,,4,5]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [1,2,,4,5]; array.length === 5. Actual: "+array.length);if(array[0]!==1)throw new Test262Error("#5: var array = [1,2,,4,5]; array[0] === 1. Actual: "+array[0]);if(array[1]!==2)throw new Test262Error("#6: var array = [1,2,,4,5]; array[1] === 2. Actual: "+array[1]);if(array[2]!==void 0)throw new Test262Error("#7: var array = [1,2,,4,5]; array[2] === undefined. Actual: "+array[2]);if(array[3]!==4)throw new Test262Error("#8: var array = [1,2,,4,5]; array[3] === 4. Actual: "+array[3]);if(array[4]!==5)throw new Test262Error("#9: var array = [1,2,,4,5]; array[4] === 5. Actual: "+array[4]);



test262/test/language/expressions/array/S11.1.4_A1.6.js


var array=[,,3,,,];if(typeof array!="object")throw new Test262Error('#1: var array = [,,3,,,]; typeof array === "object". Actual: '+typeof array);if(array instanceof Array!==!0)throw new Test262Error("#2: var array = [,,3,,,]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [,,3,,,]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [,,3,,,]; array.length === 5. Actual: "+array.length);if(array[0]!==void 0)throw new Test262Error("#5: var array = [,,3,,,]; array[0] === undefined. Actual: "+array[0]);if(array[1]!==void 0)throw new Test262Error("#6: var array = [,,3,,,]; array[1] === undefined. Actual: "+array[1]);if(array[2]!==3)throw new Test262Error("#7: var array = [,,3,,,]; array[2] === 3. Actual: "+array[2]);if(array[3]!==void 0)throw new Test262Error("#8: var array = [,,3,,,]; array[3] === undefined. Actual: "+array[3]);if(array[4]!==void 0)throw new Test262Error("#9: var array = [,,3,,,]; array[4] === undefined. Actual: "+array[4]);


var array=[,,3,,,];if(typeof array!="object")throw new Test262Error('#1: var array = [,,3,,,]; typeof array === "object". Actual: '+typeof array);if(!(array instanceof Array))throw new Test262Error("#2: var array = [,,3,,,]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [,,3,,,]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [,,3,,,]; array.length === 5. Actual: "+array.length);if(array[0]!==void 0)throw new Test262Error("#5: var array = [,,3,,,]; array[0] === undefined. Actual: "+array[0]);if(array[1]!==void 0)throw new Test262Error("#6: var array = [,,3,,,]; array[1] === undefined. Actual: "+array[1]);if(array[2]!==3)throw new Test262Error("#7: var array = [,,3,,,]; array[2] === 3. Actual: "+array[2]);if(array[3]!==void 0)throw new Test262Error("#8: var array = [,,3,,,]; array[3] === undefined. Actual: "+array[3]);if(array[4]!==void 0)throw new Test262Error("#9: var array = [,,3,,,]; array[4] === undefined. Actual: "+array[4]);



test262/test/language/expressions/array/S11.1.4_A1.2.js


var array=[,,,,,];if(typeof array!="object")throw new Test262Error('#1: var array = [,,,,,]; typeof array === "object". Actual: '+typeof array);if(array instanceof Array!==!0)throw new Test262Error("#2: var array = [,,,,,]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [,,,,,]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [,,,,,]; array.length === 5. Actual: "+array.length);


var array=[,,,,,];if(typeof array!="object")throw new Test262Error('#1: var array = [,,,,,]; typeof array === "object". Actual: '+typeof array);if(!(array instanceof Array))throw new Test262Error("#2: var array = [,,,,,]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [,,,,,]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [,,,,,]; array.length === 5. Actual: "+array.length);



test262/test/language/expressions/array/S11.1.4_A1.5.js


var array=[4,5,,,,];if(typeof array!="object")throw new Test262Error('#1: var array = [4,5,,,,]; typeof array === "object". Actual: '+typeof array);if(array instanceof Array!==!0)throw new Test262Error("#2: var array = [4,5,,,,]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [4,5,,,,]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [4,5,,,,]; array.length === 5. Actual: "+array.length);if(array[0]!==4)throw new Test262Error("#5: var array = [4,5,,,,]; array[0] === 4. Actual: "+array[0]);if(array[1]!==5)throw new Test262Error("#6: var array = [4,5,,,,]; array[1] === 5. Actual: "+array[1]);if(array[2]!==void 0)throw new Test262Error("#7: var array = [4,5,,,,]; array[2] === undefined. Actual: "+array[2]);if(array[3]!==void 0)throw new Test262Error("#8: var array = [4,5,,,,]; array[3] === undefined. Actual: "+array[3]);if(array[4]!==void 0)throw new Test262Error("#9: var array = [4,5,,,,]; array[4] === undefined. Actual: "+array[4]);


var array=[4,5,,,,];if(typeof array!="object")throw new Test262Error('#1: var array = [4,5,,,,]; typeof array === "object". Actual: '+typeof array);if(!(array instanceof Array))throw new Test262Error("#2: var array = [4,5,,,,]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [4,5,,,,]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [4,5,,,,]; array.length === 5. Actual: "+array.length);if(array[0]!==4)throw new Test262Error("#5: var array = [4,5,,,,]; array[0] === 4. Actual: "+array[0]);if(array[1]!==5)throw new Test262Error("#6: var array = [4,5,,,,]; array[1] === 5. Actual: "+array[1]);if(array[2]!==void 0)throw new Test262Error("#7: var array = [4,5,,,,]; array[2] === undefined. Actual: "+array[2]);if(array[3]!==void 0)throw new Test262Error("#8: var array = [4,5,,,,]; array[3] === undefined. Actual: "+array[3]);if(array[4]!==void 0)throw new Test262Error("#9: var array = [4,5,,,,]; array[4] === undefined. Actual: "+array[4]);



test262/test/language/expressions/array/S11.1.4_A1.1.js


var array=[];if(typeof array!="object")throw new Test262Error('#1: var array = []; typeof array === "object". Actual: '+typeof array);if(array instanceof Array!==!0)throw new Test262Error("#2: var array = []; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = []; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==0)throw new Test262Error("#4: var array = []; array.length === 0. Actual: "+array.length);


var array=[];if(typeof array!="object")throw new Test262Error('#1: var array = []; typeof array === "object". Actual: '+typeof array);if(!(array instanceof Array))throw new Test262Error("#2: var array = []; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = []; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==0)throw new Test262Error("#4: var array = []; array.length === 0. Actual: "+array.length);



test262/test/language/expressions/array/S11.1.4_A1.4.js


var array=[,,,1,2];if(typeof array!="object")throw new Test262Error('#1: var array = [,,,1,2]; typeof array === "object". Actual: '+typeof array);if(array instanceof Array!==!0)throw new Test262Error("#2: var array = [,,,1,2]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [,,,1,2]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [,,,1,2]; array.length === 5. Actual: "+array.length);if(array[0]!==void 0)throw new Test262Error("#5: var array = [,,,1,2]; array[0] === undefined. Actual: "+array[0]);if(array[1]!==void 0)throw new Test262Error("#6: var array = [,,,1,2]; array[1] === undefined. Actual: "+array[1]);if(array[2]!==void 0)throw new Test262Error("#7: var array = [,,,1,2]; array[2] === undefined. Actual: "+array[2]);if(array[3]!==1)throw new Test262Error("#8: var array = [,,,1,2]; array[3] === 1. Actual: "+array[3]);if(array[4]!==2)throw new Test262Error("#9: var array = [,,,1,2]; array[4] === 2. Actual: "+array[4]);


var array=[,,,1,2];if(typeof array!="object")throw new Test262Error('#1: var array = [,,,1,2]; typeof array === "object". Actual: '+typeof array);if(!(array instanceof Array))throw new Test262Error("#2: var array = [,,,1,2]; array instanceof Array === true");if(array.toString!==Array.prototype.toString)throw new Test262Error("#3: var array = [,,,1,2]; array.toString === Array.prototype.toString. Actual: "+array.toString);if(array.length!==5)throw new Test262Error("#4: var array = [,,,1,2]; array.length === 5. Actual: "+array.length);if(array[0]!==void 0)throw new Test262Error("#5: var array = [,,,1,2]; array[0] === undefined. Actual: "+array[0]);if(array[1]!==void 0)throw new Test262Error("#6: var array = [,,,1,2]; array[1] === undefined. Actual: "+array[1]);if(array[2]!==void 0)throw new Test262Error("#7: var array = [,,,1,2]; array[2] === undefined. Actual: "+array[2]);if(array[3]!==1)throw new Test262Error("#8: var array = [,,,1,2]; array[3] === 1. Actual: "+array[3]);if(array[4]!==2)throw new Test262Error("#9: var array = [,,,1,2]; array[4] === 2. Actual: "+array[4]);



test262/test/language/expressions/prefix-increment/S11.4.4_A2.1_T2.js


try{throw++x,new Test262Error("#1.1: ++x throw ReferenceError. Actual: "+ ++x)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: ++x throw ReferenceError. Actual: "+e)}


try{throw++x,new Test262Error("#1.1: ++x throw ReferenceError. Actual: "+ ++x)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: ++x throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/does-not-equals/S11.9.2_A2.4_T3.js


try{throw x!=(x=1),new Test262Error("#1.1: x != (x = 1) throw ReferenceError. Actual: "+(x!=(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x != (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x!=(x=1),new Test262Error("#1.1: x != (x = 1) throw ReferenceError. Actual: "+(x!=(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x != (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/does-not-equals/S11.9.2_A2.1_T2.js


try{throw x!=1,new Test262Error("#1.1: x != 1 throw ReferenceError. Actual: "+(x!=1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x != 1 throw ReferenceError. Actual: "+e)}


try{throw x!=1,new Test262Error("#1.1: x != 1 throw ReferenceError. Actual: "+(x!=1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x != 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/does-not-equals/S11.9.2_A2.1_T3.js


try{throw 1!=y,new Test262Error("#1: 1 != y throw ReferenceError")}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 != y throw ReferenceError. Actual: "+e)}


try{throw y!=1,new Test262Error("#1: 1 != y throw ReferenceError")}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 != y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/optional-chaining/iteration-statement-for-of-type-error.js


assert.throws(TypeError,function(){for(const key of{}?.a);});assert.throws(TypeError,function(){for(const key of{}?.a);});const obj=void 0;assert.throws(TypeError,function(){for(const key of obj?.a);});assert.throws(TypeError,function(){for(const key of obj?.a);});


assert.throws(TypeError,function(){for(const key of{}.a);}),assert.throws(TypeError,function(){for(const key of{}.a);});const obj=void 0;assert.throws(TypeError,function(){for(const key of obj?.a);}),assert.throws(TypeError,function(){for(const key of obj?.a);});



test262/test/built-ins/String/prototype/indexOf/S15.5.4.7_A7.js


var __FACTORY=String.prototype.indexOf;try{var __instance=new __FACTORY;throw new Test262Error('#1: var __FACTORY = String.prototype.indexOf; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error('#1.2: var __FACTORY = String.prototype.indexOf; "__instance = new __FACTORY" throw a TypeError. Actual: '+e)}


var __FACTORY=String.prototype.indexOf;try{var __instance=new __FACTORY;throw new Test262Error('#1: var __FACTORY = String.prototype.indexOf; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(!(e instanceof TypeError))throw new Test262Error('#1.2: var __FACTORY = String.prototype.indexOf; "__instance = new __FACTORY" throw a TypeError. Actual: '+e)}



test262/test/language/expressions/optional-chaining/optional-call-preserves-this.js


const a={b(){return this._b},_b:{c:42}};assert.sameValue(a?.b().c,42);assert.sameValue((a?.b)().c,42);assert.sameValue(a.b?.().c,42);assert.sameValue(a.b?.().c,42);assert.sameValue(a?.b?.().c,42);assert.sameValue((a?.b)?.().c,42);


const a={b(){return this._b},_b:{c:42}};assert.sameValue(a?.b().c,42),assert.sameValue((a?.b)().c,42),assert.sameValue(a.b?.().c,42),assert.sameValue(a.b?.().c,42),assert.sameValue(a?.b?.().c,42),assert.sameValue(a?.b?.().c,42);



test262/test/language/expressions/in/S11.8.7_A2.4_T3.js


try{throw max_value in(max_value="MAX_VALUE",Number),new Test262Error('#1.1: max_value in (max_value = "MAX_VALUE", Number) throw ReferenceError. Actual: '+(max_value in(max_value="MAX_VALUE",Number)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error('#1.2: max_value in (max_value = "MAX_VALUE", Number) throw ReferenceError. Actual: '+e)}


try{throw max_value in(max_value="MAX_VALUE",Number),new Test262Error('#1.1: max_value in (max_value = "MAX_VALUE", Number) throw ReferenceError. Actual: '+(max_value in(max_value="MAX_VALUE",Number)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error('#1.2: max_value in (max_value = "MAX_VALUE", Number) throw ReferenceError. Actual: '+e)}



test262/test/language/expressions/in/S11.8.7_A2.1_T2.js


try{throw MAX_VALUE in Number,new Test262Error("#1.1: MAX_VALUE in Number throw ReferenceError. Actual: "+(MAX_VALUE in Number))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: MAX_VALUE in Number throw ReferenceError. Actual: "+e)}


try{throw MAX_VALUE in Number,new Test262Error("#1.1: MAX_VALUE in Number throw ReferenceError. Actual: "+(MAX_VALUE in Number))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: MAX_VALUE in Number throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/in/S11.8.7_A2.1_T3.js


try{throw"MAX_VALUE"in NUMBER,new Test262Error('#1.1: "MAX_VALUE" in NUMBER throw ReferenceError. Actual: '+("MAX_VALUE"in NUMBER))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error('#1.2: "MAX_VALUE" in NUMBER throw ReferenceError. Actual: '+e)}


try{throw"MAX_VALUE"in NUMBER,new Test262Error('#1.1: "MAX_VALUE" in NUMBER throw ReferenceError. Actual: '+("MAX_VALUE"in NUMBER))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error('#1.2: "MAX_VALUE" in NUMBER throw ReferenceError. Actual: '+e)}



test262/test/built-ins/String/raw/nextkey-is-symbol-throws.js


var obj={raw:{length:1,"0":Symbol("")}};assert.throws(TypeError,function(){String.raw(obj)});


var obj={raw:{length:1,0:Symbol("")}};assert.throws(TypeError,function(){String.raw(obj)});



test262/test/language/expressions/prefix-decrement/S11.4.5_A2.1_T2.js


try{throw--x,new Test262Error("#1.1: --x throw ReferenceError. Actual: "+--x)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: --x throw ReferenceError. Actual: "+e)}


try{throw--x,new Test262Error("#1.1: --x throw ReferenceError. Actual: "+--x)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: --x throw ReferenceError. Actual: "+e)}



test262/test/built-ins/eval/no-construct.js


try{new eval}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: new eval() throw TypeError. Actual: "+e)}


try{new eval}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: new eval() throw TypeError. Actual: "+e)}



test262/test/built-ins/RegExp/S15.10.2.6_A4_T6.js


var __executed=/\B\w/.exec("devils arise	for\nrevil"),__expected=["e"];__expected.index=1;__expected.input="devils arise	for\nrevil";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\B\w/.exec(`devils arise	for
revil`),__expected=["e"];__expected.index=1,__expected.input=`devils arise	for
revil`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A4_T2.js


var __executed=/[f-z]e\B/.exec("devils arise	for\nrevil"),__expected=["re"];__expected.index=17;__expected.input="devils arise	for\nrevil";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/[f-z]e\B/.exec(`devils arise	for
revil`),__expected=["re"];__expected.index=17,__expected.input=`devils arise	for
revil`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A2_T10.js


var __executed=/^\d+/m.exec("abc\n123xyz"),__expected=["123"];__expected.index=4;__expected.input="abc\n123xyz";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/^\d+/m.exec(`abc
123xyz`),__expected=["123"];__expected.index=4,__expected.input=`abc
123xyz`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A3_T8.js


var __executed=/\bro/.exec("pilot\nsoviet robot	openoffice"),__expected=["ro"];__expected.index=13;__expected.input="pilot\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\bro/.exec(`pilot
soviet robot	openoffice`),__expected=["ro"];__expected.index=13,__expected.input=`pilot
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A4_T3.js


var __executed=/\Bo\B/i.exec("devils arise	fOr\nrevil"),__expected=["O"];__expected.index=14;__expected.input="devils arise	fOr\nrevil";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\Bo\B/i.exec(`devils arise	fOr
revil`),__expected=["O"];__expected.index=14,__expected.input=`devils arise	fOr
revil`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A2_T2.js


var __executed=/^m/m.exec("pairs\nmakes	double"),__expected=["m"];__expected.index=6;__expected.input="pairs\nmakes	double";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/^m/m.exec(`pairs
makes	double`),__expected=["m"];__expected.index=6,__expected.input=`pairs
makes	double`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A4_T7.js


var __executed=/\B[^z]{4}\B/.exec("devil arise	forzzx\nevils"),__expected=["il a"];__expected.index=3;__expected.input="devil arise	forzzx\nevils";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\B[^z]{4}\B/.exec(`devil arise	forzzx
evils`),__expected=["il a"];__expected.index=3,__expected.input=`devil arise	forzzx
evils`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A3_T7.js


var __executed=/[^o]t\b/i.exec("pilOt\nsoviet robot	openoffice"),__expected=["et"];__expected.index=10;__expected.input="pilOt\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/[^o]t\b/i.exec(`pilOt
soviet robot	openoffice`),__expected=["et"];__expected.index=10,__expected.input=`pilOt
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A1_T3.js


var __executed=/s$/m.exec("pairs\nmakes	double"),__expected=["s"];__expected.index=4;__expected.input="pairs\nmakes	double";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/s$/m.exec(`pairs
makes	double`),__expected=["s"];__expected.index=4,__expected.input=`pairs
makes	double`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A4_T8.js


var __executed=/\B\w{4}\B/.exec("devil arise	forzzx\nevils"),__expected=["orzz"];__expected.index=13;__expected.input="devil arise	forzzx\nevils";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\B\w{4}\B/.exec(`devil arise	forzzx
evils`),__expected=["orzz"];__expected.index=13,__expected.input=`devil arise	forzzx
evils`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A3_T12.js


var __executed=/\bop/.exec("pilot\nsoviet robot	openoffice"),__expected=["op"];__expected.index=19;__expected.input="pilot\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\bop/.exec(`pilot
soviet robot	openoffice`),__expected=["op"];__expected.index=19,__expected.input=`pilot
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A3_T2.js


var __executed=/ot\b/.exec("pilot\nsoviet robot	openoffice"),__expected=["ot"];__expected.index=3;__expected.input="pilot\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/ot\b/.exec(`pilot
soviet robot	openoffice`),__expected=["ot"];__expected.index=3,__expected.input=`pilot
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/JSON/parse/15.12.1.1-g1-3.js


assert.sameValue(JSON.parse("\n1234"),1234,"<LF> should be ignored"),assert.throws(SyntaxError,function(){JSON.parse("12\n34")},"<LF> should produce a syntax error as whitespace results in two tokens");


assert.sameValue(JSON.parse(`
1234`),1234,"<LF> should be ignored"),assert.throws(SyntaxError,function(){JSON.parse(`12
34`)},"<LF> should produce a syntax error as whitespace results in two tokens");



test262/test/built-ins/DisposableStack/prototype/move/this-does-not-have-internal-disposablestate-throws.js


assert.sameValue(typeof DisposableStack.prototype.move,"function");var move=DisposableStack.prototype.move;assert.throws(TypeError,function(){move.call({["[[DisposableState]]"]:{}})},"Ordinary object without [[DisposableState]]");assert.throws(TypeError,function(){move.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot");assert.throws(TypeError,function(){move.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack;assert.throws(TypeError,function(){move.call(asyncStack)},"AsyncDisposableStack instance");


assert.sameValue(typeof DisposableStack.prototype.move,"function");var move=DisposableStack.prototype.move;assert.throws(TypeError,function(){move.call({"[[DisposableState]]":{}})},"Ordinary object without [[DisposableState]]"),assert.throws(TypeError,function(){move.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot"),assert.throws(TypeError,function(){move.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack;assert.throws(TypeError,function(){move.call(asyncStack)},"AsyncDisposableStack instance");



test262/test/built-ins/DisposableStack/prototype/defer/this-does-not-have-internal-disposablestate-throws.js


assert.sameValue(typeof DisposableStack.prototype.defer,"function");var defer=DisposableStack.prototype.defer;assert.throws(TypeError,function(){defer.call({["[[DisposableState]]"]:{}})},"Ordinary object without [[DisposableState]]");assert.throws(TypeError,function(){defer.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot");assert.throws(TypeError,function(){defer.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack(function(){});assert.throws(TypeError,function(){defer.call(asyncStack)},"AsyncDisposableStack instance");


assert.sameValue(typeof DisposableStack.prototype.defer,"function");var defer=DisposableStack.prototype.defer;assert.throws(TypeError,function(){defer.call({"[[DisposableState]]":{}})},"Ordinary object without [[DisposableState]]"),assert.throws(TypeError,function(){defer.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot"),assert.throws(TypeError,function(){defer.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack(function(){});assert.throws(TypeError,function(){defer.call(asyncStack)},"AsyncDisposableStack instance");



test262/test/built-ins/DisposableStack/prototype/adopt/this-does-not-have-internal-disposablestate-throws.js


assert.sameValue(typeof DisposableStack.prototype.adopt,"function");var adopt=DisposableStack.prototype.adopt;assert.throws(TypeError,function(){adopt.call({["[[DisposableState]]"]:{}})},"Ordinary object without [[DisposableState]]");assert.throws(TypeError,function(){adopt.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot");assert.throws(TypeError,function(){adopt.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack(function(){});assert.throws(TypeError,function(){adopt.call(asyncStack)},"AsyncDisposableStack instance");


assert.sameValue(typeof DisposableStack.prototype.adopt,"function");var adopt=DisposableStack.prototype.adopt;assert.throws(TypeError,function(){adopt.call({"[[DisposableState]]":{}})},"Ordinary object without [[DisposableState]]"),assert.throws(TypeError,function(){adopt.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot"),assert.throws(TypeError,function(){adopt.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack(function(){});assert.throws(TypeError,function(){adopt.call(asyncStack)},"AsyncDisposableStack instance");



test262/test/built-ins/TypedArrayConstructors/ctors-bigint/object-arg/throws-setting-property.js


var obj={"2":{valueOf(){throw new Test262Error}},length:4};testWithBigIntTypedArrayConstructors(function(TA){obj[0]=0n,obj[1]=0n,assert.throws(Test262Error,function(){new TA(obj)})});


var obj={2:{valueOf(){throw new Test262Error}},length:4};testWithBigIntTypedArrayConstructors(function(TA){obj[0]=0n,obj[1]=0n,assert.throws(Test262Error,function(){new TA(obj)})});



test262/test/built-ins/TypedArrayConstructors/ctors-bigint/object-arg/throws-setting-symbol-property.js


var obj={"2":Symbol("1"),length:4};testWithBigIntTypedArrayConstructors(function(TA){assert.throws(TypeError,function(){new TA(obj)})});


var obj={2:Symbol("1"),length:4};testWithBigIntTypedArrayConstructors(function(TA){assert.throws(TypeError,function(){new TA(obj)})});



test262/test/built-ins/DisposableStack/prototype/use/this-does-not-have-internal-disposablestate-throws.js


assert.sameValue(typeof DisposableStack.prototype.use,"function");var use=DisposableStack.prototype.use;assert.throws(TypeError,function(){use.call({["[[DisposableState]]"]:{}})},"Ordinary object without [[DisposableState]]");assert.throws(TypeError,function(){use.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot");assert.throws(TypeError,function(){use.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack(function(){});assert.throws(TypeError,function(){use.call(asyncStack)},"AsyncDisposableStack instance");


assert.sameValue(typeof DisposableStack.prototype.use,"function");var use=DisposableStack.prototype.use;assert.throws(TypeError,function(){use.call({"[[DisposableState]]":{}})},"Ordinary object without [[DisposableState]]"),assert.throws(TypeError,function(){use.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot"),assert.throws(TypeError,function(){use.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack(function(){});assert.throws(TypeError,function(){use.call(asyncStack)},"AsyncDisposableStack instance");



test262/test/built-ins/DisposableStack/prototype/dispose/this-does-not-have-internal-disposablestate-throws.js


assert.sameValue(typeof DisposableStack.prototype.dispose,"function");var dispose=DisposableStack.prototype.dispose;assert.throws(TypeError,function(){dispose.call({["[[DisposableState]]"]:{}})},"Ordinary object without [[DisposableState]]");assert.throws(TypeError,function(){dispose.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot");assert.throws(TypeError,function(){dispose.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack(function(){});assert.throws(TypeError,function(){dispose.call(asyncStack)},"AsyncDisposableStack instance");


assert.sameValue(typeof DisposableStack.prototype.dispose,"function");var dispose=DisposableStack.prototype.dispose;assert.throws(TypeError,function(){dispose.call({"[[DisposableState]]":{}})},"Ordinary object without [[DisposableState]]"),assert.throws(TypeError,function(){dispose.call(DisposableStack.prototype)},"DisposableStack.prototype does not have a [[DisposableState]] internal slot"),assert.throws(TypeError,function(){dispose.call(DisposableStack)},"DisposableStack does not have a [[DisposableState]] internal slot");var asyncStack=new AsyncDisposableStack(function(){});assert.throws(TypeError,function(){dispose.call(asyncStack)},"AsyncDisposableStack instance");



test262/test/built-ins/AsyncDisposableStack/prototype/move/this-does-not-have-internal-asyncdisposablestate-throws.js


assert.sameValue(typeof AsyncDisposableStack.prototype.move,"function");var move=AsyncDisposableStack.prototype.move;assert.throws(TypeError,function(){move.call({["[[AsyncDisposableState]]"]:{}})},"Ordinary object without [[AsyncDisposableState]]");assert.throws(TypeError,function(){move.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot");assert.throws(TypeError,function(){move.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;assert.throws(TypeError,function(){move.call(stack)},"DisposableStack instance");


assert.sameValue(typeof AsyncDisposableStack.prototype.move,"function");var move=AsyncDisposableStack.prototype.move;assert.throws(TypeError,function(){move.call({"[[AsyncDisposableState]]":{}})},"Ordinary object without [[AsyncDisposableState]]"),assert.throws(TypeError,function(){move.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot"),assert.throws(TypeError,function(){move.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;assert.throws(TypeError,function(){move.call(stack)},"DisposableStack instance");



test262/test/built-ins/AsyncDisposableStack/prototype/defer/this-does-not-have-internal-asyncdisposablestate-throws.js


assert.sameValue(typeof AsyncDisposableStack.prototype.defer,"function");var defer=AsyncDisposableStack.prototype.defer;assert.throws(TypeError,function(){defer.call({["[[AsyncDisposableState]]"]:{}})},"Ordinary object without [[AsyncDisposableState]]");assert.throws(TypeError,function(){defer.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot");assert.throws(TypeError,function(){defer.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;assert.throws(TypeError,function(){defer.call(stack)},"DisposableStack instance");


assert.sameValue(typeof AsyncDisposableStack.prototype.defer,"function");var defer=AsyncDisposableStack.prototype.defer;assert.throws(TypeError,function(){defer.call({"[[AsyncDisposableState]]":{}})},"Ordinary object without [[AsyncDisposableState]]"),assert.throws(TypeError,function(){defer.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot"),assert.throws(TypeError,function(){defer.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;assert.throws(TypeError,function(){defer.call(stack)},"DisposableStack instance");



test262/test/built-ins/AsyncDisposableStack/prototype/adopt/this-does-not-have-internal-asyncdisposablestate-throws.js


assert.sameValue(typeof AsyncDisposableStack.prototype.adopt,"function");var adopt=AsyncDisposableStack.prototype.adopt;assert.throws(TypeError,function(){adopt.call({["[[AsyncDisposableState]]"]:{}})},"Ordinary object without [[AsyncDisposableState]]");assert.throws(TypeError,function(){adopt.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot");assert.throws(TypeError,function(){adopt.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;assert.throws(TypeError,function(){adopt.call(stack)},"DisposableStack instance");


assert.sameValue(typeof AsyncDisposableStack.prototype.adopt,"function");var adopt=AsyncDisposableStack.prototype.adopt;assert.throws(TypeError,function(){adopt.call({"[[AsyncDisposableState]]":{}})},"Ordinary object without [[AsyncDisposableState]]"),assert.throws(TypeError,function(){adopt.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot"),assert.throws(TypeError,function(){adopt.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;assert.throws(TypeError,function(){adopt.call(stack)},"DisposableStack instance");



test262/test/built-ins/TypedArrayConstructors/ctors/object-arg/throws-setting-property.js


var obj={"2":{valueOf(){throw new Test262Error}},length:4};testWithTypedArrayConstructors(function(TA){assert.throws(Test262Error,function(){new TA(obj)})});


var obj={2:{valueOf(){throw new Test262Error}},length:4};testWithTypedArrayConstructors(function(TA){assert.throws(Test262Error,function(){new TA(obj)})});



test262/test/built-ins/AsyncDisposableStack/prototype/disposeAsync/this-does-not-have-internal-asyncdisposablestate-rejects.js


asyncTest(async function(){assert.sameValue(typeof AsyncDisposableStack.prototype.disposeAsync,"function");var disposeAsync=AsyncDisposableStack.prototype.disposeAsync;await assert.throwsAsync(TypeError,function(){return disposeAsync.call({["[[AsyncDisposableState]]"]:{}})},"Ordinary object without [[AsyncDisposableState]]");await assert.throwsAsync(TypeError,function(){return disposeAsync.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot");await assert.throwsAsync(TypeError,function(){return disposeAsync.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;await assert.throwsAsync(TypeError,function(){return disposeAsync.call(stack)},"DisposableStack instance")});


asyncTest(async function(){assert.sameValue(typeof AsyncDisposableStack.prototype.disposeAsync,"function");var disposeAsync=AsyncDisposableStack.prototype.disposeAsync;await assert.throwsAsync(TypeError,function(){return disposeAsync.call({"[[AsyncDisposableState]]":{}})},"Ordinary object without [[AsyncDisposableState]]"),await assert.throwsAsync(TypeError,function(){return disposeAsync.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot"),await assert.throwsAsync(TypeError,function(){return disposeAsync.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;await assert.throwsAsync(TypeError,function(){return disposeAsync.call(stack)},"DisposableStack instance")});



test262/test/built-ins/AsyncDisposableStack/prototype/use/this-does-not-have-internal-asyncdisposablestate-throws.js


assert.sameValue(typeof AsyncDisposableStack.prototype.use,"function");var use=AsyncDisposableStack.prototype.use;assert.throws(TypeError,function(){use.call({["[[AsyncDisposableState]]"]:{}})},"Ordinary object without [[AsyncDisposableState]]");assert.throws(TypeError,function(){use.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot");assert.throws(TypeError,function(){use.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;assert.throws(TypeError,function(){use.call(stack)},"DisposableStack instance");


assert.sameValue(typeof AsyncDisposableStack.prototype.use,"function");var use=AsyncDisposableStack.prototype.use;assert.throws(TypeError,function(){use.call({"[[AsyncDisposableState]]":{}})},"Ordinary object without [[AsyncDisposableState]]"),assert.throws(TypeError,function(){use.call(AsyncDisposableStack.prototype)},"AsyncDisposableStack.prototype does not have a [[AsyncDisposableState]] internal slot"),assert.throws(TypeError,function(){use.call(AsyncDisposableStack)},"AsyncDisposableStack does not have a [[AsyncDisposableState]] internal slot");var stack=new DisposableStack;assert.throws(TypeError,function(){use.call(stack)},"DisposableStack instance");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-225.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),accessed=!1;for(var prop in desc)prop==="value"&&(accessed=!0);assert(accessed,"accessed !== true");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),accessed=!1;for(var prop in desc)prop==="value"&&(accessed=!0);assert(accessed,"accessed !== true");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-235.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");assert.sameValue(desc.configurable,!0,"desc.configurable");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");assert.sameValue(desc.configurable,!0,"desc.configurable");



test262/test/built-ins/FinalizationRegistry/prototype/unregister/this-does-not-have-internal-cells-throws.js


assert.sameValue(typeof FinalizationRegistry.prototype.unregister,"function");var unregister=FinalizationRegistry.prototype.unregister,token={};assert.throws(TypeError,function(){unregister.call({["[[Cells]]"]:{}},token)},"Ordinary object without [[Cells]]");assert.throws(TypeError,function(){unregister.call(WeakRef.prototype,token)},"WeakRef.prototype does not have a [[Cells]] internal slot");assert.throws(TypeError,function(){unregister.call(WeakRef,token)},"WeakRef does not have a [[Cells]] internal slot");var wr=new WeakRef({});assert.throws(TypeError,function(){unregister.call(wr,token)},"WeakRef instance");var wm=new WeakMap;assert.throws(TypeError,function(){unregister.call(wm,token)},"WeakMap instance");var ws=new WeakSet;assert.throws(TypeError,function(){unregister.call(ws,token)},"WeakSet instance");


assert.sameValue(typeof FinalizationRegistry.prototype.unregister,"function");var unregister=FinalizationRegistry.prototype.unregister,token={};assert.throws(TypeError,function(){unregister.call({"[[Cells]]":{}},token)},"Ordinary object without [[Cells]]"),assert.throws(TypeError,function(){unregister.call(WeakRef.prototype,token)},"WeakRef.prototype does not have a [[Cells]] internal slot"),assert.throws(TypeError,function(){unregister.call(WeakRef,token)},"WeakRef does not have a [[Cells]] internal slot");var wr=new WeakRef({});assert.throws(TypeError,function(){unregister.call(wr,token)},"WeakRef instance");var wm=new WeakMap;assert.throws(TypeError,function(){unregister.call(wm,token)},"WeakMap instance");var ws=new WeakSet;assert.throws(TypeError,function(){unregister.call(ws,token)},"WeakSet instance");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-3.js


var obj={"undefined":1},desc1=Object.getOwnPropertyDescriptor(obj,void 0),desc2=Object.getOwnPropertyDescriptor(obj,"undefined");assert.sameValue(desc1.value,1,"desc1.value");assert.sameValue(desc2.value,1,"desc2.value");


var obj={undefined:1},desc1=Object.getOwnPropertyDescriptor(obj,void 0),desc2=Object.getOwnPropertyDescriptor(obj,"undefined");assert.sameValue(desc1.value,1,"desc1.value"),assert.sameValue(desc2.value,1,"desc2.value");



test262/test/built-ins/FinalizationRegistry/prototype/register/this-does-not-have-internal-target-throws.js


assert.sameValue(typeof FinalizationRegistry.prototype.register,"function");var register=FinalizationRegistry.prototype.register,target={};assert.throws(TypeError,function(){register.call({["[[Cells]]"]:{}},target)},"Ordinary object without [[Cells]]");assert.throws(TypeError,function(){register.call(WeakRef.prototype,target)},"WeakRef.prototype does not have a [[Cells]] internal slot");assert.throws(TypeError,function(){register.call(WeakRef,target)},"WeakRef does not have a [[Cells]] internal slot");var wr=new WeakRef({});assert.throws(TypeError,function(){register.call(wr,target)},"WeakRef instance");var wm=new WeakMap;assert.throws(TypeError,function(){register.call(wm,target)},"WeakMap instance");var ws=new WeakSet;assert.throws(TypeError,function(){register.call(ws,target)},"WeakSet instance");


assert.sameValue(typeof FinalizationRegistry.prototype.register,"function");var register=FinalizationRegistry.prototype.register,target={};assert.throws(TypeError,function(){register.call({"[[Cells]]":{}},target)},"Ordinary object without [[Cells]]"),assert.throws(TypeError,function(){register.call(WeakRef.prototype,target)},"WeakRef.prototype does not have a [[Cells]] internal slot"),assert.throws(TypeError,function(){register.call(WeakRef,target)},"WeakRef does not have a [[Cells]] internal slot");var wr=new WeakRef({});assert.throws(TypeError,function(){register.call(wr,target)},"WeakRef instance");var wm=new WeakMap;assert.throws(TypeError,function(){register.call(wm,target)},"WeakMap instance");var ws=new WeakSet;assert.throws(TypeError,function(){register.call(ws,target)},"WeakSet instance");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-7.js


var obj={"NaN":1},desc=Object.getOwnPropertyDescriptor(obj,NaN);assert.sameValue(desc.value,1,"desc.value");


var obj={NaN:1},desc=Object.getOwnPropertyDescriptor(obj,NaN);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-231.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");assert.sameValue(desc.enumerable,!0,"desc.enumerable");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");assert.sameValue(desc.enumerable,!0,"desc.enumerable");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-6.js


var obj={"true":1},desc=Object.getOwnPropertyDescriptor(obj,!0);assert.sameValue(desc.value,1,"desc.value");


var obj={true:1},desc=Object.getOwnPropertyDescriptor(obj,!0);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-230.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),propDefined="writable"in desc;delete desc.writable;var propDeleted="writable"in desc;assert(propDefined,"propDefined !== true");assert.sameValue(propDeleted,!1,"propDeleted");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),propDefined="writable"in desc;delete desc.writable;var propDeleted="writable"in desc;assert(propDefined,"propDefined !== true"),assert.sameValue(propDeleted,!1,"propDeleted");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-224.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");desc.value="overwriteDataProperty";assert.sameValue(desc.value,"overwriteDataProperty","desc.value");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");desc.value="overwriteDataProperty",assert.sameValue(desc.value,"overwriteDataProperty","desc.value");



test262/test/language/asi/S7.9_A5.4_T1.js


var x=1,y=1;x;--y;if(x!==1)throw new Test262Error("#1: Check Prefix Decrement Operator for automatic semicolon insertion");if(y!==0)throw new Test262Error("#1: Check Prefix Decrement Operator for automatic semicolon insertion");


var x=1,y=1;if(--y,x!==1)throw new Test262Error("#1: Check Prefix Decrement Operator for automatic semicolon insertion");if(y!==0)throw new Test262Error("#1: Check Prefix Decrement Operator for automatic semicolon insertion");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-234.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),propDefined="enumerable"in desc;delete desc.enumerable;var propDeleted="enumerable"in desc;assert(propDefined,"propDefined !== true");assert.sameValue(propDeleted,!1,"propDeleted");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),propDefined="enumerable"in desc;delete desc.enumerable;var propDeleted="enumerable"in desc;assert(propDefined,"propDefined !== true"),assert.sameValue(propDeleted,!1,"propDeleted");



test262/test/language/asi/S7.9_A9_T9.js


do {}while(!1);


do;while(!1);



test262/test/language/asi/S7.9_A5.2_T1.js


var x=0,y=0;x;++y;if(x!==0)throw new Test262Error("#1: Check Prefix Increment Operator for automatic semicolon insertion");if(y!==1)throw new Test262Error("#2: Check Prefix Increment Operator for automatic semicolon insertion");


var x=0,y=0;if(++y,x!==0)throw new Test262Error("#1: Check Prefix Increment Operator for automatic semicolon insertion");if(y!==1)throw new Test262Error("#2: Check Prefix Increment Operator for automatic semicolon insertion");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-9.js


var obj={"0":1},desc=Object.getOwnPropertyDescriptor(obj,0);assert.sameValue(desc.value,1,"desc.value");


var obj={0:1},desc=Object.getOwnPropertyDescriptor(obj,0);assert.sameValue(desc.value,1,"desc.value");



test262/test/language/asi/S7.9_A9_T1.js


do {}while(!1);


do;while(!1);



test262/test/language/asi/S7.9_A9_T5.js


do {}while(!1);


do;while(!1);



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-11.js


var obj={"30":1},desc=Object.getOwnPropertyDescriptor(obj,30);assert.sameValue(desc.value,1,"desc.value");


var obj={30:1},desc=Object.getOwnPropertyDescriptor(obj,30);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-40.js


var obj={"true":1},desc=Object.getOwnPropertyDescriptor(obj,new Boolean(!0));assert.sameValue(desc.value,1,"desc.value");


var obj={true:1},desc=Object.getOwnPropertyDescriptor(obj,new Boolean(!0));assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-35.js


var obj={"null":1},desc=Object.getOwnPropertyDescriptor(obj,"null");assert.sameValue(desc.value,1,"desc.value");


var obj={null:1},desc=Object.getOwnPropertyDescriptor(obj,"null");assert.sameValue(desc.value,1,"desc.value");



test262/test/language/expressions/modulus/S11.5.3_A2.1_T3.js


try{throw 1%y,new Test262Error("#1.1: 1 % y throw ReferenceError. Actual: "+1%y)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 % y throw ReferenceError. Actual: "+e)}


try{throw 1%y,new Test262Error("#1.1: 1 % y throw ReferenceError. Actual: "+1%y)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 % y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/modulus/S11.5.3_A2.1_T2.js


try{throw x%1,new Test262Error("#1.1: x % 1 throw ReferenceError. Actual: "+x%1)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x % 1 throw ReferenceError. Actual: "+e)}


try{throw x%1,new Test262Error("#1.1: x % 1 throw ReferenceError. Actual: "+x%1)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x % 1 throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-10.js


var obj={"0":1},desc=Object.getOwnPropertyDescriptor(obj,-0);assert.sameValue(desc.value,1,"desc.value");


var obj={0:1},desc=Object.getOwnPropertyDescriptor(obj,-0);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-41.js


var obj={"123":1},desc=Object.getOwnPropertyDescriptor(obj,new Number(123));assert.sameValue(desc.value,1,"desc.value");


var obj={123:1},desc=Object.getOwnPropertyDescriptor(obj,new Number(123));assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-34.js


var obj={"undefined":1},desc=Object.getOwnPropertyDescriptor(obj,"undefined");assert.sameValue(desc.value,1,"desc.value");


var obj={undefined:1},desc=Object.getOwnPropertyDescriptor(obj,"undefined");assert.sameValue(desc.value,1,"desc.value");



test262/test/language/expressions/modulus/S11.5.3_A2.4_T3.js


try{throw x%(x=1),new Test262Error("#1.1: x % (x = 1) throw ReferenceError. Actual: "+x%(x=1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x % (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x%(x=1),new Test262Error("#1.1: x % (x = 1) throw ReferenceError. Actual: "+x%(x=1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x % (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-14.js


var obj={"Infinity":1},desc=Object.getOwnPropertyDescriptor(obj,1/0);assert.sameValue(desc.value,1,"desc.value");


var obj={Infinity:1},desc=Object.getOwnPropertyDescriptor(obj,1/0);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-8.js


var obj={"0":1},desc=Object.getOwnPropertyDescriptor(obj,0);assert.sameValue(desc.value,1,"desc.value");


var obj={0:1},desc=Object.getOwnPropertyDescriptor(obj,0);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-229.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),accessed=!1;for(var props in desc)props==="writable"&&(accessed=!0);assert(accessed,"accessed !== true");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),accessed=!1;for(var props in desc)props==="writable"&&(accessed=!0);assert(accessed,"accessed !== true");



test262/test/language/expressions/bitwise-and/S11.10.1_A2.4_T3.js


try{throw x&(x=1),new Test262Error("#1.1: x & (x = 1) throw ReferenceError. Actual: "+(x&(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x & (x = 1) throw ReferenceError. Actual: "+e)}if(((y=1)&y)!==1)throw new Test262Error("#2: ((y = 1) & y) === 1. Actual: "+((y=1)&y));


try{throw x&(x=1),new Test262Error("#1.1: x & (x = 1) throw ReferenceError. Actual: "+(x&(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x & (x = 1) throw ReferenceError. Actual: "+e)}if(((y=1)&y)!==1)throw new Test262Error("#2: ((y = 1) & y) === 1. Actual: "+((y=1)&y));



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-37.js


var obj={"1":1},desc=Object.getOwnPropertyDescriptor(obj,1);assert.sameValue(desc.value,1,"desc.value");


var obj={1:1},desc=Object.getOwnPropertyDescriptor(obj,1);assert.sameValue(desc.value,1,"desc.value");



test262/test/language/expressions/bitwise-and/S11.10.1_A2.1_T2.js


try{throw x&1,new Test262Error("#1.1: x & 1 throw ReferenceError. Actual: "+(x&1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x & 1 throw ReferenceError. Actual: "+e)}


try{throw x&1,new Test262Error("#1.1: x & 1 throw ReferenceError. Actual: "+(x&1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x & 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/bitwise-and/S11.10.1_A2.1_T3.js


try{throw 1&y,new Test262Error("#1.1: 1 & y throw ReferenceError. Actual: "+(1&y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 & y throw ReferenceError. Actual: "+e)}


try{throw 1&y,new Test262Error("#1.1: 1 & y throw ReferenceError. Actual: "+(1&y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 & y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/template-literal/tv-hex-escape-sequence.js


var calls;calls=0;(function(s){calls++,assert.sameValue(s[0],"A","TV"),assert.sameValue(s.raw[0],"\\x41","TRV")})`\x41`;assert.sameValue(calls,1);


var calls;calls=0,function(s){calls++,assert.sameValue(s[0],"A","TV"),assert.sameValue(s.raw[0],"\\x41","TRV")}`\x41`,assert.sameValue(calls,1);



test262/test/built-ins/RegExp/S15.10.2.6_A3_T6.js


var __executed=/[^o]t\b/.exec("pilOt\nsoviet robot	openoffice"),__expected=["Ot"];__expected.index=3;__expected.input="pilOt\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/[^o]t\b/.exec(`pilOt
soviet robot	openoffice`),__expected=["Ot"];__expected.index=3,__expected.input=`pilOt
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A1_T2.js


var __executed=/e$/.exec("pairs\nmakes	double"),__expected=["e"];__expected.index=17;__expected.input="pairs\nmakes	double";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/e$/.exec(`pairs
makes	double`),__expected=["e"];__expected.index=17,__expected.input=`pairs
makes	double`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-228.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");desc.writable="overwriteDataProperty";assert.sameValue(desc.writable,"overwriteDataProperty","desc.writable");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");desc.writable="overwriteDataProperty",assert.sameValue(desc.writable,"overwriteDataProperty","desc.writable");



test262/test/built-ins/RegExp/regexp-modifiers/changing-multiline-flag-does-not-affect-multiline-modifier.js


var re1=new RegExp(/(?m:es$)/m,"");assert(re1.test("es"),"$ still should match end of input in modified group");assert(re1.test("es\ns"),"$ still should match newline in modified group");var re2=new RegExp(/^(?-m:es$)/,"m");assert(re2.test("es"),"$ still should match end of input in modified group");assert(!re2.test("es\ns"),"$ still should not match newline in modified group");


var re1=new RegExp(/(?m:es$)/m,"");assert(re1.test("es"),"$ still should match end of input in modified group"),assert(re1.test(`es
s`),"$ still should match newline in modified group");var re2=new RegExp(/^(?-m:es$)/,"m");assert(re2.test("es"),"$ still should match end of input in modified group"),assert(!re2.test(`es
s`),"$ still should not match newline in modified group");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-238.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),propDefined="configurable"in desc;delete desc.configurable;var propDeleted="configurable"in desc;assert(propDefined,"propDefined !== true");assert.sameValue(propDeleted,!1,"propDeleted");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),propDefined="configurable"in desc;delete desc.configurable;var propDeleted="configurable"in desc;assert(propDefined,"propDefined !== true"),assert.sameValue(propDeleted,!1,"propDeleted");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-223.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");assert.sameValue(desc.value,"ownDataProperty","desc.value");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");assert.sameValue(desc.value,"ownDataProperty","desc.value");



test262/test/language/expressions/assignment/S11.13.1_A4_T2.js


try{throw x=x,new Test262Error("#1.1: x = x throw ReferenceError. Actual: "+(x=x))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x = x throw ReferenceError. Actual: "+e)}


try{throw x=x,new Test262Error("#1.1: x = x throw ReferenceError. Actual: "+(x=x))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x = x throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-5.js


var obj={"false":1},desc=Object.getOwnPropertyDescriptor(obj,!1);assert.sameValue(desc.value,1,"desc.value");


var obj={false:1},desc=Object.getOwnPropertyDescriptor(obj,!1);assert.sameValue(desc.value,1,"desc.value");



test262/test/language/expressions/assignment/S11.13.1_A3.2.js


var x=0;if((x=1)!==1)throw new Test262Error("#1: var x = 0; (x = 1) === 1. Actual: "+(x=1));x=0;if((x=1)!==1)throw new Test262Error("#2: x = 0; (x = 1) === 1. Actual: "+(x=1));


var x=0;if((x=1)!=1)throw new Test262Error("#1: var x = 0; (x = 1) === 1. Actual: "+(x=1));if(x=0,(x=1)!=1)throw new Test262Error("#2: x = 0; (x = 1) === 1. Actual: "+(x=1));



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-233.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),accessed=!1;for(var props in desc)props==="enumerable"&&(accessed=!0);assert(accessed,"accessed !== true");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),accessed=!1;for(var props in desc)props==="enumerable"&&(accessed=!0);assert(accessed,"accessed !== true");



test262/test/language/statements/with/12.10-2-5.js


try{with(null)x=2;throw new Test262Error("#2.1: with(null) x = 2 must throw TypeError. Actual: x === . Actual: "+x)}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#2.2: with(null) x = 2 must throw TypeError. Actual: "+e)}


try{with(null)x=2;throw new Test262Error("#2.1: with(null) x = 2 must throw TypeError. Actual: x === . Actual: "+x)}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#2.2: with(null) x = 2 must throw TypeError. Actual: "+e)}



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-227.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");assert.sameValue(desc.writable,!0,"desc.writable");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");assert.sameValue(desc.writable,!0,"desc.writable");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-237.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),accessed=!1;for(var prop in desc)prop==="configurable"&&(accessed=!0);assert(accessed,"accessed !== true");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),accessed=!1;for(var prop in desc)prop==="configurable"&&(accessed=!0);assert(accessed,"accessed !== true");



test262/test/language/expressions/assignment/S11.13.1_A2.1_T2.js


try{throw x=y,new Test262Error("#1.1: x = y throw ReferenceError. Actual: "+(x=y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x = y throw ReferenceError. Actual: "+e)}


try{throw x=y,new Test262Error("#1.1: x = y throw ReferenceError. Actual: "+(x=y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x = y throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-39.js


var obj={"Hello":1},desc=Object.getOwnPropertyDescriptor(obj,new String("Hello"));assert.sameValue(desc.value,1,"desc.value");


var obj={Hello:1},desc=Object.getOwnPropertyDescriptor(obj,new String("Hello"));assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-28.js


var obj={"123":1},desc=Object.getOwnPropertyDescriptor(obj,123);assert.sameValue(desc.value,1,"desc.value");


var obj={123:1},desc=Object.getOwnPropertyDescriptor(obj,123);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/RegExp/S15.10.2.6_A3_T1.js


var __executed=/\bp/.exec("pilot\nsoviet robot	openoffice"),__expected=["p"];__expected.index=0;__expected.input="pilot\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\bp/.exec(`pilot
soviet robot	openoffice`),__expected=["p"];__expected.index=0,__expected.input=`pilot
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A3_T10.js


var __executed=/\brobot\b/.exec("pilot\nsoviet robot	openoffice"),__expected=["robot"];__expected.index=13;__expected.input="pilot\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\brobot\b/.exec(`pilot
soviet robot	openoffice`),__expected=["robot"];__expected.index=13,__expected.input=`pilot
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-226.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),propDefined="value"in desc;delete desc.value;var propDeleted="value"in desc;assert(propDefined,"propDefined !== true");assert.sameValue(propDeleted,!1,"propDeleted");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property"),propDefined="value"in desc;delete desc.value;var propDeleted="value"in desc;assert(propDefined,"propDefined !== true"),assert.sameValue(propDeleted,!1,"propDeleted");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-236.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");desc.writable="overwriteDataProperty";assert.sameValue(desc.writable,"overwriteDataProperty","desc.writable");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");desc.writable="overwriteDataProperty",assert.sameValue(desc.writable,"overwriteDataProperty","desc.writable");



test262/test/language/statements/with/12.10-2-4.js


try{with(void 0)x=2;throw new Test262Error("#2.1: with(undefined) x = 2 must throw TypeError. Actual: x === "+x)}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#2.2: with(undefined) x = 2 must throw TypeError. Actual: "+e)}


try{with(void 0)x=2;throw new Test262Error("#2.1: with(undefined) x = 2 must throw TypeError. Actual: x === "+x)}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#2.2: with(undefined) x = 2 must throw TypeError. Actual: "+e)}



test262/test/language/expressions/assignment/assignment-operator-calls-putvalue-lref--rval--1.js


var count=0,global=this;Object.defineProperty(this,"x",{configurable:!0,value:1});(function(){"use strict";assert.throws(ReferenceError,()=>{count++,x=(delete global.x,2),count++}),count++})();assert.sameValue(count,2);assert(!("x"in this));assert(!("x"in global));


var count=0,global=this;Object.defineProperty(this,"x",{configurable:!0,value:1}),function(){"use strict";assert.throws(ReferenceError,()=>{count++,x=(delete global.x,2),count++}),count++}(),assert.sameValue(count,2),assert(!("x"in this)),assert(!("x"in global));



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-38.js


var obj={"1":1},desc=Object.getOwnPropertyDescriptor(obj,[1]);assert.sameValue(desc.value,1,"desc.value");


var obj={1:1},desc=Object.getOwnPropertyDescriptor(obj,[1]);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/RegExp/S15.10.2.6_A1_T5.js


var __executed=/es$/gm.exec("pairs\nmakes	doubles"),__expected=["es"];__expected.index=17;__expected.input="pairs\nmakes	doubles";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/es$/mg.exec(`pairs
makes	doubles`),__expected=["es"];__expected.index=17,__expected.input=`pairs
makes	doubles`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-247.js


var obj={"property":100},desc=Object.getOwnPropertyDescriptor(obj,"property");assert(desc instanceof Object,"desc instanceof Object !== true");


var obj={property:100},desc=Object.getOwnPropertyDescriptor(obj,"property");assert(desc instanceof Object,"desc instanceof Object !== true");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-2-4.js


var obj={"null":1},desc=Object.getOwnPropertyDescriptor(obj,null);assert.sameValue(desc.value,1,"desc.value");


var obj={null:1},desc=Object.getOwnPropertyDescriptor(obj,null);assert.sameValue(desc.value,1,"desc.value");



test262/test/built-ins/Object/getOwnPropertyDescriptor/15.2.3.3-4-232.js


var obj={"property":"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");desc.enumerable="overwriteDataProperty";assert.sameValue(desc.enumerable,"overwriteDataProperty","desc.enumerable");


var obj={property:"ownDataProperty"},desc=Object.getOwnPropertyDescriptor(obj,"property");desc.enumerable="overwriteDataProperty",assert.sameValue(desc.enumerable,"overwriteDataProperty","desc.enumerable");



test262/test/built-ins/RegExp/S15.10.2.13_A2_T2.js


var __executed=/a[^]/.exec("   a	\n"),__expected=["a	"];__expected.index=3;__expected.input="   a	\n";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/a[^]/.exec(`   a	
`),__expected=["a	"];__expected.index=3,__expected.input=`   a	
`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A3_T14.js


var __executed=/e\b/.exec("pilot\nsoviet robot	openoffice"),__expected=["e"];__expected.index=28;__expected.input="pilot\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/e\b/.exec(`pilot
soviet robot	openoffice`),__expected=["e"];__expected.index=28,__expected.input=`pilot
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/language/expressions/assignment/dstr/array-empty-iter-get-err.js


var iterable={};iterable[Symbol.iterator]=function(){throw new Test262Error};assert.throws(Test262Error,function(){0,[]=iterable});


var iterable={};iterable[Symbol.iterator]=function(){throw new Test262Error},assert.throws(Test262Error,function(){[]=iterable});



test262/test/built-ins/RegExp/S15.10.2.7_A3_T4.js


var __executed=/\s+java\s+/.test("java\n\nobject");assert(!__executed,"The value of !__executed is expected to be true");


var __executed=/\s+java\s+/.test(`java

object`);assert(!__executed,"The value of !__executed is expected to be true");



test262/test/built-ins/RegExp/S15.10.2.6_A3_T4.js


var __executed=/\bso/.exec("pilot\nsoviet robot	openoffice"),__expected=["so"];__expected.index=6;__expected.input="pilot\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\bso/.exec(`pilot
soviet robot	openoffice`),__expected=["so"];__expected.index=6,__expected.input=`pilot
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/language/expressions/assignment/dstr/array-elem-nested-obj-undefined-hole.js


var x;assert.throws(TypeError,function(){0,[{x}]=[,]});


var x;assert.throws(TypeError,function(){[{x}]=[,]});



test262/test/language/expressions/assignment/dstr/array-rest-put-prop-ref-user-err.js


var x={set y(val){throw new Test262Error}};assert.throws(Test262Error,function(){0,[...x.y]=[23]});


var x={set y(val){throw new Test262Error}};assert.throws(Test262Error,function(){[...x.y]=[23]});



test262/test/language/expressions/assignment/dstr/array-elem-nested-array-null.js


var _;assert.throws(TypeError,function(){0,[[_]]=[null]});


var _;assert.throws(TypeError,function(){[[_]]=[null]});



test262/test/language/expressions/assignment/dstr/array-elem-nested-array-undefined-own.js


var _;assert.throws(TypeError,function(){0,[[x]]=[void 0]});


var _;assert.throws(TypeError,function(){[[x]]=[void 0]});



test262/test/built-ins/RegExp/S15.10.2.6_A3_T11.js


var __executed=/\b\w{5}\b/.exec("pilot\nsoviet robot	openoffice"),__expected=["pilot"];__expected.index=0;__expected.input="pilot\nsoviet robot	openoffice";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\b\w{5}\b/.exec(`pilot
soviet robot	openoffice`),__expected=["pilot"];__expected.index=0,__expected.input=`pilot
soviet robot	openoffice`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/language/expressions/assignment/dstr/array-elision-val-symbol.js


var s=Symbol();assert.throws(TypeError,function(){0,[,]=s});


var s=Symbol();assert.throws(TypeError,function(){[,]=s});



test262/test/language/expressions/assignment/dstr/array-elem-iter-get-err.js


var iterable={};iterable[Symbol.iterator]=function(){throw new Test262Error};var _;assert.throws(Test262Error,function(){0,[_]=iterable});


var iterable={};iterable[Symbol.iterator]=function(){throw new Test262Error};var _;assert.throws(Test262Error,function(){[_]=iterable});



test262/test/language/expressions/assignment/dstr/array-rest-put-unresolvable-strict.js


assert.throws(ReferenceError,function(){0,[...unresolvable]=[]});


assert.throws(ReferenceError,function(){[...unresolvable]=[]});



test262/test/language/expressions/assignment/dstr/array-elem-nested-obj-undefined.js


var x;assert.throws(TypeError,function(){0,[{x}]=[]});


var x;assert.throws(TypeError,function(){[{x}]=[]});



test262/test/built-ins/Object/getOwnPropertyNames/15.2.3.4-4-b-6.js


var obj={"a":"a"},result=Object.getOwnPropertyNames(obj),beforeDeleted=result.hasOwnProperty("0");delete result[0];var afterDeleted=result.hasOwnProperty("0");assert(beforeDeleted,"beforeDeleted !== true");assert.sameValue(afterDeleted,!1,"afterDeleted");


var obj={a:"a"},result=Object.getOwnPropertyNames(obj),beforeDeleted=result.hasOwnProperty("0");delete result[0];var afterDeleted=result.hasOwnProperty("0");assert(beforeDeleted,"beforeDeleted !== true"),assert.sameValue(afterDeleted,!1,"afterDeleted");



test262/test/built-ins/Object/getOwnPropertyNames/15.2.3.4-4-38.js


var obj={"a":"a"},result=Object.getOwnPropertyNames(obj);assert.sameValue(result[0],"a","result[0]");


var obj={a:"a"},result=Object.getOwnPropertyNames(obj);assert.sameValue(result[0],"a","result[0]");



test262/test/language/expressions/assignment/dstr/array-elem-nested-array-undefined-hole.js


var _;assert.throws(TypeError,function(){0,[[_]]=[,]});


var _;assert.throws(TypeError,function(){[[_]]=[,]});



test262/test/language/eval-code/indirect/parse-failure-5.js


var value;try{throw value=(0,eval)("return;"),new Test262Error("#1.1: return must throw SyntaxError. Actual: "+value)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: return must throw SyntaxError. Actual: "+e)}assert.throws(SyntaxError,function(){(0,eval)("return;")});


var value;try{throw value=(0,eval)("return;"),new Test262Error("#1.1: return must throw SyntaxError. Actual: "+value)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: return must throw SyntaxError. Actual: "+e)}assert.throws(SyntaxError,function(){(0,eval)("return;")});



test262/test/built-ins/Object/getOwnPropertyNames/15.2.3.4-4-b-5.js


var propertyFound=!1,obj={"a":"a"},result=Object.getOwnPropertyNames(obj);for(var p in result)if(result[p]==="a"){propertyFound=!0;break}assert(propertyFound,"Property not found");


var propertyFound=!1,obj={a:"a"},result=Object.getOwnPropertyNames(obj);for(var p in result)if(result[p]==="a"){propertyFound=!0;break}assert(propertyFound,"Property not found");



test262/test/language/expressions/assignment/dstr/array-elision-iter-get-err.js


var iterable={};iterable[Symbol.iterator]=function(){throw new Test262Error};assert.throws(Test262Error,function(){0,[,]=iterable});


var iterable={};iterable[Symbol.iterator]=function(){throw new Test262Error},assert.throws(Test262Error,function(){[,]=iterable});



test262/test/built-ins/Object/getOwnPropertyNames/15.2.3.4-4-b-4.js


var obj={"a":"a"},result=Object.getOwnPropertyNames(obj),beforeOverride=result[0]==="a";result[0]="b";var afterOverride=result[0]==="b";assert(beforeOverride,"beforeOverride !== true");assert(afterOverride,"afterOverride !== true");


var obj={a:"a"},result=Object.getOwnPropertyNames(obj),beforeOverride=result[0]==="a";result[0]="b";var afterOverride=result[0]==="b";assert(beforeOverride,"beforeOverride !== true"),assert(afterOverride,"afterOverride !== true");



test262/test/language/expressions/assignment/dstr/array-empty-val-symbol.js


var s=Symbol();assert.throws(TypeError,function(){0,[]=s});


var s=Symbol();assert.throws(TypeError,function(){[]=s});



test262/test/language/expressions/assignment/dstr/array-elem-nested-array-undefined.js


var _;assert.throws(TypeError,function(){0,[[x]]=[]});


var _;assert.throws(TypeError,function(){[[x]]=[]});



test262/test/language/expressions/assignment/dstr/array-empty-val-undef.js


assert.throws(TypeError,function(){0,[]=void 0});


assert.throws(TypeError,function(){[]=void 0});



test262/test/language/expressions/assignment/dstr/array-elision-val-bool.js


assert.throws(TypeError,function(){0,[,]=!0});


assert.throws(TypeError,function(){[,]=!0});



test262/test/language/expressions/assignment/dstr/array-elision-val-null.js


assert.throws(TypeError,function(){0,[,]=null});


assert.throws(TypeError,function(){[,]=null});



test262/test/language/expressions/assignment/dstr/array-rest-iter-get-err.js


var iterable={},x;iterable[Symbol.iterator]=function(){throw new Test262Error};assert.throws(Test262Error,function(){0,[...x]=iterable});


var iterable={},x;iterable[Symbol.iterator]=function(){throw new Test262Error},assert.throws(Test262Error,function(){[...x]=iterable});



test262/test/language/expressions/assignment/dstr/array-elem-put-unresolvable-strict.js


assert.throws(ReferenceError,function(){0,[unresolvable]=[]});


assert.throws(ReferenceError,function(){[unresolvable]=[]});



test262/test/language/expressions/assignment/dstr/array-elem-nested-obj-undefined-own.js


var x;assert.throws(TypeError,function(){0,[{x}]=[void 0]});


var x;assert.throws(TypeError,function(){[{x}]=[void 0]});



test262/test/language/expressions/assignment/dstr/array-empty-val-num.js


assert.throws(TypeError,function(){0,[]=1});


assert.throws(TypeError,function(){[]=1});



test262/test/language/expressions/assignment/dstr/array-elision-val-num.js


assert.throws(TypeError,function(){0,[,]=1});


assert.throws(TypeError,function(){[,]=1});



test262/test/language/expressions/assignment/dstr/array-empty-val-null.js


assert.throws(TypeError,function(){0,[]=null});


assert.throws(TypeError,function(){[]=null});



test262/test/language/expressions/assignment/dstr/array-elem-init-let.js


var x;assert.throws(ReferenceError,function(){0,[x=y]=[]});let y;


var x;assert.throws(ReferenceError,function(){[x=y]=[]});let y;



test262/test/language/expressions/assignment/dstr/array-empty-val-bool.js


assert.throws(TypeError,function(){0,[]=!0});


assert.throws(TypeError,function(){[]=!0});



test262/test/language/expressions/assignment/dstr/array-elem-put-prop-ref-user-err.js


var x={set y(val){throw new Test262Error}};assert.throws(Test262Error,function(){0,[x.y]=[23]});


var x={set y(val){throw new Test262Error}};assert.throws(Test262Error,function(){[x.y]=[23]});



test262/test/built-ins/Object/prototype/propertyIsEnumerable/S15.2.4.7_A9.js


assert(!!Object.prototype.propertyIsEnumerable.hasOwnProperty("length"),'The value of !!Object.prototype.propertyIsEnumerable.hasOwnProperty("length") is expected to be true'),assert(!!delete Object.prototype.propertyIsEnumerable.length,"The value of !!delete Object.prototype.propertyIsEnumerable.length is expected to be true");


assert(!!Object.prototype.propertyIsEnumerable.hasOwnProperty("length"),'The value of !!Object.prototype.propertyIsEnumerable.hasOwnProperty("length") is expected to be true'),assert(delete Object.prototype.propertyIsEnumerable.length,"The value of !!delete Object.prototype.propertyIsEnumerable.length is expected to be true");



test262/test/language/expressions/assignment/dstr/array-rest-put-let.js


assert.throws(ReferenceError,function(){0,[...x]=[]});let x;


assert.throws(ReferenceError,function(){[...x]=[]});let x;



test262/test/language/expressions/assignment/dstr/array-elision-val-undef.js


assert.throws(TypeError,function(){0,[,]=void 0});


assert.throws(TypeError,function(){[,]=void 0});



test262/test/language/expressions/assignment/dstr/array-elem-put-let.js


assert.throws(ReferenceError,function(){0,[x]=[]});let x;


assert.throws(ReferenceError,function(){[x]=[]});let x;



test262/test/language/expressions/assignment/dstr/array-elem-nested-obj-null.js


var x;assert.throws(TypeError,function(){0,[{x}]=[null]});


var x;assert.throws(TypeError,function(){[{x}]=[null]});



test262/test/built-ins/Object/prototype/valueOf/S15.2.4.4_A9.js


assert(!!Object.prototype.valueOf.hasOwnProperty("length"),'The value of !!Object.prototype.valueOf.hasOwnProperty("length") is expected to be true'),assert(!!delete Object.prototype.valueOf.length,"The value of !!delete Object.prototype.valueOf.length is expected to be true"),assert(!Object.prototype.valueOf.hasOwnProperty("length"),'The value of !Object.prototype.valueOf.hasOwnProperty("length") is expected to be true');


assert(!!Object.prototype.valueOf.hasOwnProperty("length"),'The value of !!Object.prototype.valueOf.hasOwnProperty("length") is expected to be true'),assert(delete Object.prototype.valueOf.length,"The value of !!delete Object.prototype.valueOf.length is expected to be true"),assert(!Object.prototype.valueOf.hasOwnProperty("length"),'The value of !Object.prototype.valueOf.hasOwnProperty("length") is expected to be true');



test262/test/language/expressions/exponentiation/exp-operator-evaluation-order.js


var capture=[],leftValue={valueOf(){return capture.push("leftValue"),3}},rightValue={valueOf(){return capture.push("rightValue"),2}};(capture.push("left"),leftValue)**(capture.push("right"),rightValue);assert.sameValue(capture[0],"left","Expected the 1st element captured to be 'left'");assert.sameValue(capture[1],"right","Expected the 2nd element captured to be 'right'");assert.sameValue(capture[2],"leftValue","Expected the 3rd element captured to be 'leftValue'");assert.sameValue(capture[3],"rightValue","Expected the 4th element captured to be 'rightValue'");


var capture=[],leftValue={valueOf(){return capture.push("leftValue"),3}},rightValue={valueOf(){return capture.push("rightValue"),2}};capture.push("left"),leftValue**(capture.push("right"),rightValue),assert.sameValue(capture[0],"left","Expected the 1st element captured to be 'left'"),assert.sameValue(capture[1],"right","Expected the 2nd element captured to be 'right'"),assert.sameValue(capture[2],"leftValue","Expected the 3rd element captured to be 'leftValue'"),assert.sameValue(capture[3],"rightValue","Expected the 4th element captured to be 'rightValue'");



test262/test/built-ins/Object/prototype/toLocaleString/S15.2.4.3_A9.js


assert(!!Object.prototype.toLocaleString.hasOwnProperty("length"),'The value of !!Object.prototype.toLocaleString.hasOwnProperty("length") is expected to be true'),assert(!!delete Object.prototype.toLocaleString.length,"The value of !!delete Object.prototype.toLocaleString.length is expected to be true"),assert(!Object.prototype.toLocaleString.hasOwnProperty("length"),'The value of !Object.prototype.toLocaleString.hasOwnProperty("length") is expected to be true');


assert(!!Object.prototype.toLocaleString.hasOwnProperty("length"),'The value of !!Object.prototype.toLocaleString.hasOwnProperty("length") is expected to be true'),assert(delete Object.prototype.toLocaleString.length,"The value of !!delete Object.prototype.toLocaleString.length is expected to be true"),assert(!Object.prototype.toLocaleString.hasOwnProperty("length"),'The value of !Object.prototype.toLocaleString.hasOwnProperty("length") is expected to be true');



test262/test/built-ins/RegExp/S15.10.2.6_A1_T4.js


var __executed=/[^e]$/gm.exec("pairs\nmakes	double"),__expected=["s"];__expected.index=4;__expected.input="pairs\nmakes	double";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/[^e]$/mg.exec(`pairs
makes	double`),__expected=["s"];__expected.index=4,__expected.input=`pairs
makes	double`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/language/expressions/object/S11.1.5_A1.1.js


var object={};if(typeof object!="object")throw new Test262Error('#1: var object = {}; typeof object === "object". Actual: '+typeof object);if(object instanceof Object!==!0)throw new Test262Error("#2: var object = {}; object instanceof Object === true");if(object.toString!==Object.prototype.toString)throw new Test262Error("#3: var object = {}; object.toString === Object.prototype.toString. Actual: "+object.toString);if(object.toString()!=="[object Object]")throw new Test262Error('#4: var object = {}; object.toString === "[object Object]". Actual: '+object.toString);


var object={};if(typeof object!="object")throw new Test262Error('#1: var object = {}; typeof object === "object". Actual: '+typeof object);if(!(object instanceof Object))throw new Test262Error("#2: var object = {}; object instanceof Object === true");if(object.toString!==Object.prototype.toString)throw new Test262Error("#3: var object = {}; object.toString === Object.prototype.toString. Actual: "+object.toString);if(object.toString()!=="[object Object]")throw new Test262Error('#4: var object = {}; object.toString === "[object Object]". Actual: '+object.toString);



test262/test/language/block-scope/leave/try-block-let-declaration-only-shadows-outer-parameter-value-1.js


(function(x){try{let x="inner";throw 0}catch(e){assert.sameValue(x,"outer")}})("outer");


(function(x){try{let x2="inner";throw 0}catch{assert.sameValue(x,"outer")}})("outer");



test262/test/language/block-scope/leave/finally-block-let-declaration-only-shadows-outer-parameter-value-1.js


try{(function(x){try{let x="inner";throw 0}finally{assert.sameValue(x,"outer")}})("outer")}catch(e){}


try{(function(x){try{let x2="inner";throw 0}finally{assert.sameValue(x,"outer")}})("outer")}catch{}



test262/test/built-ins/decodeURI/S15.1.3.1_A5.7.js


try{throw new decodeURI,new Test262Error("#1.1: new decodeURI() throw TypeError. Actual: "+new decodeURI)}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: new decodeURI() throw TypeError. Actual: "+e)}


try{throw new decodeURI,new Test262Error("#1.1: new decodeURI() throw TypeError. Actual: "+new decodeURI)}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: new decodeURI() throw TypeError. Actual: "+e)}



test262/test/language/statementList/block-let-declaration.js


let a,b=42,c;b;


let a,b=42,c;



test262/test/built-ins/RegExp/S15.10.2.6_A4_T4.js


var __executed=/\B\w\B/.exec("devils arise	for\nrevil"),__expected=["e"];__expected.index=1;__expected.input="devils arise	for\nrevil";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\B\w\B/.exec(`devils arise	for
revil`),__expected=["e"];__expected.index=1,__expected.input=`devils arise	for
revil`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/built-ins/RegExp/S15.10.2.6_A4_T5.js


var __executed=/\w\B/.exec("devils arise	for\nrevil"),__expected=["d"];__expected.index=0;__expected.input="devils arise	for\nrevil";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\w\B/.exec(`devils arise	for
revil`),__expected=["d"];__expected.index=0,__expected.input=`devils arise	for
revil`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/language/expressions/unsigned-right-shift/S11.7.3_A2.4_T3.js


try{throw x>>>(x=1),new Test262Error("#1.1: x >>> (x = 1) throw ReferenceError. Actual: "+(x>>>(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x >>> (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x>>>(x=1),new Test262Error("#1.1: x >>> (x = 1) throw ReferenceError. Actual: "+(x>>>(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x >>> (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-239.js


var arr=[];Object.defineProperty(arr,"1",{value:!0});try{throw Object.defineProperties(arr,{"1":{value:!1}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:!0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{value:!0});try{throw Object.defineProperties(arr,{1:{value:!1}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:!0,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/unsigned-right-shift/S11.7.3_A2.1_T2.js


try{throw x>>>1,new Test262Error("#1.1: x >>> 1 throw ReferenceError. Actual: "+(x>>>1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x >>> 1 throw ReferenceError. Actual: "+e)}


try{throw x>>>1,new Test262Error("#1.1: x >>> 1 throw ReferenceError. Actual: "+(x>>>1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x >>> 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/unsigned-right-shift/S11.7.3_A2.1_T3.js


try{throw 1>>>y,new Test262Error("#1.1: 1 >>> y throw ReferenceError. Actual: "+(1>>>y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 >>> y throw ReferenceError. Actual: "+e)}


try{throw 1>>>y,new Test262Error("#1.1: 1 >>> y throw ReferenceError. Actual: "+(1>>>y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 >>> y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/equals/S11.9.1_A2.1_T3.js


try{throw 1==y,new Test262Error("#1.1: 1 == y throw ReferenceError. Actual: "+(1==y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 == y throw ReferenceError. Actual: "+e)}


try{throw y==1,new Test262Error("#1.1: 1 == y throw ReferenceError. Actual: "+(y==1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 == y throw ReferenceError. Actual: "+e)}



test262/test/built-ins/RegExp/S15.10.2.6_A4_T1.js


var __executed=/\Bevil\B/.exec("devils arise	for\nevil"),__expected=["evil"];__expected.index=1;__expected.input="devils arise	for\nevil";assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length");assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index");assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");


var __executed=/\Bevil\B/.exec(`devils arise	for
evil`),__expected=["evil"];__expected.index=1,__expected.input=`devils arise	for
evil`,assert.sameValue(__executed.length,__expected.length,"The value of __executed.length is expected to equal the value of __expected.length"),assert.sameValue(__executed.index,__expected.index,"The value of __executed.index is expected to equal the value of __expected.index"),assert.sameValue(__executed.input,__expected.input,"The value of __executed.input is expected to equal the value of __expected.input");for(var index=0;index<__expected.length;index++)assert.sameValue(__executed[index],__expected[index],"The value of __executed[index] is expected to equal the value of __expected[index]");



test262/test/language/expressions/equals/S11.9.1_A2.1_T2.js


try{throw x==1,new Test262Error("#1.1: x == 1 throw ReferenceError. Actual: "+(x==1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x == 1 throw ReferenceError. Actual: "+e)}


try{throw x==1,new Test262Error("#1.1: x == 1 throw ReferenceError. Actual: "+(x==1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x == 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/equals/S11.9.1_A2.4_T3.js


try{throw x==(x=1),new Test262Error("#1.1: x == (x = 1) throw ReferenceError. Actual: "+(x==(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x == (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x==(x=1),new Test262Error("#1.1: x == (x = 1) throw ReferenceError. Actual: "+(x==(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x == (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-198.js


var arr=[],isOwnProperty=!1,canEnumerable=!1;Object.defineProperties(arr,{"0":{value:1001,writable:!0,configurable:!0}});isOwnProperty=arr.hasOwnProperty("0");for(var i in arr)i==="0"&&(canEnumerable=!0);assert(isOwnProperty,"isOwnProperty !== true");assert.sameValue(canEnumerable,!1,"canEnumerable");assert.sameValue(arr[0],1001,"arr[0]");


var arr=[],isOwnProperty=!1,canEnumerable=!1;Object.defineProperties(arr,{0:{value:1001,writable:!0,configurable:!0}}),isOwnProperty=arr.hasOwnProperty("0");for(var i in arr)i==="0"&&(canEnumerable=!0);assert(isOwnProperty,"isOwnProperty !== true"),assert.sameValue(canEnumerable,!1,"canEnumerable"),assert.sameValue(arr[0],1001,"arr[0]");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-248.js


var arr=[12];Object.defineProperties(arr,{"0":{value:void 0}});verifyProperty(arr,"0",{value:void 0,writable:!0,enumerable:!0,configurable:!0});


var arr=[12];Object.defineProperties(arr,{0:{value:void 0}}),verifyProperty(arr,"0",{value:void 0,writable:!0,enumerable:!0,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-308.js


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{enumerable:!0,configurable:!1});try{throw Object.defineProperties(arg,{"genericProperty":{enumerable:!1}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arg,"genericProperty",{value:void 0,writable:!1,enumerable:!0,configurable:!1});


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{enumerable:!0,configurable:!1});try{throw Object.defineProperties(arg,{genericProperty:{enumerable:!1}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arg,"genericProperty",{value:void 0,writable:!1,enumerable:!0,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-188.js


var arr=[];assert.throws(TypeError,function(){Object.defineProperty(Array.prototype,"0",{value:11,configurable:!0}),Object.defineProperty(arr,"0",{value:12,configurable:!1}),Object.defineProperties(arr,{"0":{configurable:!0}})});assert.sameValue(arr[0],12,"arr[0]");assert.sameValue(Array.prototype[0],11,"Array.prototype[0]");


var arr=[];assert.throws(TypeError,function(){Object.defineProperty(Array.prototype,"0",{value:11,configurable:!0}),Object.defineProperty(arr,"0",{value:12,configurable:!1}),Object.defineProperties(arr,{0:{configurable:!0}})}),assert.sameValue(arr[0],12,"arr[0]"),assert.sameValue(Array.prototype[0],11,"Array.prototype[0]");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-219.js


var arr=[];Object.defineProperty(arr,"0",{writable:!0});Object.defineProperties(arr,{"0":{writable:!0}});verifyProperty(arr,"0",{value:void 0,writable:!0,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{writable:!0}),Object.defineProperties(arr,{0:{writable:!0}}),verifyProperty(arr,"0",{value:void 0,writable:!0,enumerable:!1,configurable:!1});



test262/test/language/expressions/logical-not/S11.4.9_A2.1_T2.js


try{throw!x,new Test262Error("#1.1: !x throw ReferenceError. Actual: "+!x)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: !x throw ReferenceError. Actual: "+e)}


try{throw x,new Test262Error("#1.1: !x throw ReferenceError. Actual: "+!x)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: !x throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/logical-not/S11.4.9_A1.js


if(eval("!	true")!==!1)throw new Test262Error("#true: !\\u0009true === false");if(eval("!\vtrue")!==!1)throw new Test262Error("#2: !\\u000Btrue === false");if(eval("!\ftrue")!==!1)throw new Test262Error("#3: !\\u000Ctrue === false");if(eval("! true")!==!1)throw new Test262Error("#4: !\\u0020 === false");if(eval("!\xA0true")!==!1)throw new Test262Error("#5: !\\u00A0true === false");if(eval("!\ntrue")!==!1)throw new Test262Error("#6: !\\u000Atrue === false");if(eval("!\rtrue")!==!1)throw new Test262Error("#7: !\\u000Dtrue === false");if(eval("!\u2028true")!==!1)throw new Test262Error("#8: !\\u2028true === false");if(eval("!\u2029true")!==!1)throw new Test262Error("#9: !\\u2029true === false");if(eval("!	\v\f \xA0\n\r\u2028\u2029true")!==!1)throw new Test262Error("#10: !\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true === false");


if(eval("!	true")!==!1)throw new Test262Error("#true: !\\u0009true === false");if(eval("!\vtrue")!==!1)throw new Test262Error("#2: !\\u000Btrue === false");if(eval("!\ftrue")!==!1)throw new Test262Error("#3: !\\u000Ctrue === false");if(eval("! true")!==!1)throw new Test262Error("#4: !\\u0020 === false");if(eval("!\xA0true")!==!1)throw new Test262Error("#5: !\\u00A0true === false");if(eval(`!
true`)!==!1)throw new Test262Error("#6: !\\u000Atrue === false");if(eval("!\rtrue")!==!1)throw new Test262Error("#7: !\\u000Dtrue === false");if(eval("!\u2028true")!==!1)throw new Test262Error("#8: !\\u2028true === false");if(eval("!\u2029true")!==!1)throw new Test262Error("#9: !\\u2029true === false");if(eval(`!	\v\f \xA0
\r\u2028\u2029true`)!==!1)throw new Test262Error("#10: !\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true === false");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-199.js


var arr=[],beforeDeleted=!1,afterDeleted=!1;Object.defineProperties(arr,{"0":{value:1001,writable:!0,enumerable:!0}});verifyProperty(arr,"0",{configurable:!1});


var arr=[],beforeDeleted=!1,afterDeleted=!1;Object.defineProperties(arr,{0:{value:1001,writable:!0,enumerable:!0}}),verifyProperty(arr,"0",{configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-208.js


var arr=[];arr[0]=100;Object.defineProperties(arr,{"0":{value:100,writable:!0,enumerable:!0,configurable:!0}});verifyProperty(arr,"0",{value:100,writable:!0,enumerable:!0,configurable:!0});


var arr=[];arr[0]=100,Object.defineProperties(arr,{0:{value:100,writable:!0,enumerable:!0,configurable:!0}}),verifyProperty(arr,"0",{value:100,writable:!0,enumerable:!0,configurable:!0});



test262/test/language/expressions/left-shift/S11.7.1_A2.1_T2.js


try{throw x<<1,new Test262Error("#1.1: x << 1 throw ReferenceError. Actual: "+(x<<1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x << 1 throw ReferenceError. Actual: "+e)}


try{throw x<<1,new Test262Error("#1.1: x << 1 throw ReferenceError. Actual: "+(x<<1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x << 1 throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-249.js


var arr=[void 0];Object.defineProperties(arr,{"0":{value:12}});verifyProperty(arr,"0",{value:12,writable:!0,enumerable:!0,configurable:!0});


var arr=[void 0];Object.defineProperties(arr,{0:{value:12}}),verifyProperty(arr,"0",{value:12,writable:!0,enumerable:!0,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-309.js


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{configurable:!1});try{throw Object.defineProperties(arg,{"genericProperty":{configurable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arg,"genericProperty",{value:void 0,writable:!1,enumerable:!1,configurable:!1});


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{configurable:!1});try{throw Object.defineProperties(arg,{genericProperty:{configurable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arg,"genericProperty",{value:void 0,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/left-shift/S11.7.1_A2.1_T3.js


try{throw 1<<y,new Test262Error("#1.1: 1 << y throw ReferenceError. Actual: "+(1<<y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 << y throw ReferenceError. Actual: "+e)}


try{throw 1<<y,new Test262Error("#1.1: 1 << y throw ReferenceError. Actual: "+(1<<y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 << y throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-218.js


var arr=[],obj1={length:10};Object.defineProperty(arr,"0",{value:obj1});var properties={"0":{value:obj1}};Object.defineProperties(arr,properties);verifyProperty(arr,"0",{value:obj1,writable:!1,enumerable:!1,configurable:!1});


var arr=[],obj1={length:10};Object.defineProperty(arr,"0",{value:obj1});var properties={0:{value:obj1}};Object.defineProperties(arr,properties),verifyProperty(arr,"0",{value:obj1,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Iterator/prototype/every/iterator-has-no-return.js


let iterator=[1,2,3,4,5][Symbol.iterator]();assert.sameValue(iterator.return,void 0);let ret=iterator.every(v=>v<4);assert.sameValue(ret,!1);let{done,value}=iterator.next();assert.sameValue(done,!1);assert.sameValue(value,5);({done,value}=iterator.next());assert.sameValue(done,!0);assert.sameValue(value,void 0);


let iterator=[1,2,3,4,5][Symbol.iterator]();assert.sameValue(iterator.return,void 0);let ret=iterator.every(v=>v<4);assert.sameValue(ret,!1);let{done,value}=iterator.next();assert.sameValue(done,!1),assert.sameValue(value,5),{done,value}=iterator.next(),assert.sameValue(done,!0),assert.sameValue(value,void 0);



test262/test/language/expressions/left-shift/S11.7.1_A2.4_T3.js


try{throw x<<(x=1),new Test262Error("#1.1: x << (x = 1) throw ReferenceError. Actual: "+(x<<(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x << (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x<<(x=1),new Test262Error("#1.1: x << (x = 1) throw ReferenceError. Actual: "+(x<<(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x << (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/bitwise-xor/S11.10.2_A2.1_T3.js


try{throw 1^y,new Test262Error("#1.1: 1 ^ y throw ReferenceError. Actual: "+(1^y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 ^ y throw ReferenceError. Actual: "+e)}


try{throw 1^y,new Test262Error("#1.1: 1 ^ y throw ReferenceError. Actual: "+(1^y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 ^ y throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-238.js


var arr=[];Object.defineProperty(arr,"1",{value:"abcd"});try{throw Object.defineProperties(arr,{"1":{value:"efgh"}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:"abcd",writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{value:"abcd"});try{throw Object.defineProperties(arr,{1:{value:"efgh"}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:"abcd",writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-269.js


var arr=[];arr.property=12;Object.defineProperties(arr,{"property":{writable:!1,enumerable:!1,configurable:!1}});verifyProperty(arr,"property",{value:12,writable:!1,enumerable:!1,configurable:!1});if(arr.length!==0)throw new Test262Error("Expected arr.length === 0, actually "+arr.length);


var arr=[];if(arr.property=12,Object.defineProperties(arr,{property:{writable:!1,enumerable:!1,configurable:!1}}),verifyProperty(arr,"property",{value:12,writable:!1,enumerable:!1,configurable:!1}),arr.length!==0)throw new Test262Error("Expected arr.length === 0, actually "+arr.length);



test262/test/language/expressions/bitwise-xor/S11.10.2_A2.1_T2.js


try{throw x^1,new Test262Error("#1.1: x ^ 1 throw ReferenceError. Actual: "+(x^1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x ^ 1 throw ReferenceError. Actual: "+e)}


try{throw x^1,new Test262Error("#1.1: x ^ 1 throw ReferenceError. Actual: "+(x^1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x ^ 1 throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-228.js


var arr=[];Object.defineProperty(arr,"1",{value:3,configurable:!1,enumerable:!1});try{throw Object.defineProperties(arr,{"1":{value:13,enumerable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:3,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{value:3,configurable:!1,enumerable:!1});try{throw Object.defineProperties(arr,{1:{value:13,enumerable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:3,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/call/S11.2.3_A1.js


if(eval("Number	()")!==0)throw new Test262Error("#1: Number\\u0009() === 0");if(eval("Number\v()")!==0)throw new Test262Error("#2: Number\\u000B() === 0");if(eval("Number\f()")!==0)throw new Test262Error("#3: Number\\u000C() === 0");if(eval("Number ()")!==0)throw new Test262Error("#4: Number\\u0020 === 0");if(eval("Number\xA0()")!==0)throw new Test262Error("#5: Number\\u00A0() === 0");if(eval("Number\n()")!==0)throw new Test262Error("#6: Number\\u000A() === 0");if(eval("Number\r()")!==0)throw new Test262Error("#7: Number\\u000D() === 0");if(eval("Number\u2028()")!==0)throw new Test262Error("#8: Number\\u2028() === 0");if(eval("Number\u2029()")!==0)throw new Test262Error("#9: Number\\u2029() === 0");if(eval("Number	\v\f \xA0\n\r\u2028\u2029()")!==0)throw new Test262Error("#10: Number\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029() === 0");


if(eval("Number	()")!==0)throw new Test262Error("#1: Number\\u0009() === 0");if(eval("Number\v()")!==0)throw new Test262Error("#2: Number\\u000B() === 0");if(eval("Number\f()")!==0)throw new Test262Error("#3: Number\\u000C() === 0");if(eval("Number ()")!==0)throw new Test262Error("#4: Number\\u0020 === 0");if(eval("Number\xA0()")!==0)throw new Test262Error("#5: Number\\u00A0() === 0");if(eval(`Number
()`)!==0)throw new Test262Error("#6: Number\\u000A() === 0");if(eval("Number\r()")!==0)throw new Test262Error("#7: Number\\u000D() === 0");if(eval("Number\u2028()")!==0)throw new Test262Error("#8: Number\\u2028() === 0");if(eval("Number\u2029()")!==0)throw new Test262Error("#9: Number\\u2029() === 0");if(eval(`Number	\v\f \xA0
\r\u2028\u2029()`)!==0)throw new Test262Error("#10: Number\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029() === 0");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-233.js


var arr=[];Object.defineProperty(arr,"1",{configurable:!1,writable:!1});try{throw Object.defineProperties(arr,{"1":{writable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:void 0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{configurable:!1,writable:!1});try{throw Object.defineProperties(arr,{1:{writable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:void 0,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-196.js


var arr=[];Object.defineProperties(arr,{"0":{writable:!0,enumerable:!0,configurable:!1}});assert(arr.hasOwnProperty("0"),'arr.hasOwnProperty("0") !== true');assert.sameValue(typeof arr[0],"undefined","typeof (arr[0])");


var arr=[];Object.defineProperties(arr,{0:{writable:!0,enumerable:!0,configurable:!1}}),assert(arr.hasOwnProperty("0"),'arr.hasOwnProperty("0") !== true'),assert.sameValue(typeof arr[0],"undefined","typeof (arr[0])");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-186.js


var arr=[];Object.defineProperty(arr,0,{value:"ownDataProperty",configurable:!1});assert.throws(TypeError,function(){Object.defineProperties(arr,{"0":{value:"abc",configurable:!0}})});assert.sameValue(arr[0],"ownDataProperty","arr[0]");


var arr=[];Object.defineProperty(arr,0,{value:"ownDataProperty",configurable:!1}),assert.throws(TypeError,function(){Object.defineProperties(arr,{0:{value:"abc",configurable:!0}})}),assert.sameValue(arr[0],"ownDataProperty","arr[0]");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-217.js


var arr=[];Object.defineProperty(arr,"0",{value:!0});Object.defineProperties(arr,{"0":{value:!0}});verifyProperty(arr,"0",{value:!0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{value:!0}),Object.defineProperties(arr,{0:{value:!0}}),verifyProperty(arr,"0",{value:!0,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/parseFloat/S15.1.2.3_A7.7.js


try{throw new parseFloat,new Test262Error("#1.1: new parseFloat() throw TypeError. Actual: "+new parseFloat)}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: new parseFloat() throw TypeError. Actual: "+e)}


try{throw new parseFloat,new Test262Error("#1.1: new parseFloat() throw TypeError. Actual: "+new parseFloat)}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: new parseFloat() throw TypeError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-246.js


var arr=[];Object.defineProperty(arr,"1",{get:void 0});Object.defineProperties(arr,{"1":{get:void 0}});verifyProperty(arr,"1",{enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{get:void 0}),Object.defineProperties(arr,{1:{get:void 0}}),verifyProperty(arr,"1",{enumerable:!1,configurable:!1});



test262/test/language/expressions/typeof/syntax.js


assert.sameValue(eval("var x = 0; typeof	x"),"number",'#1: var x = 0; typeof\\u0009x; x === "number".'),assert.sameValue(eval("var x = 0; typeof\vx"),"number",'#2: var x = 0; typeof\\u000Bx; x === "number".'),assert.sameValue(eval("var x = 0; typeof\fx"),"number",'#3: var x = 0; typeof\\u000Cx; x === "number".'),assert.sameValue(eval("var x = 0; typeof x"),"number",'#4: var x = 0; typeof\\u0020x; x === "number".'),assert.sameValue(eval("var x = 0; typeof\xA0x"),"number",'#5: var x = 0; typeof\\u00A0x; x === "number".'),assert.sameValue(eval("var x = 0; typeof\nx"),"number",'#6: var x = 0; typeof\\u000Ax; x === "number".'),assert.sameValue(eval("var x = 0; typeof\rx"),"number",'#7: var x = 0; typeof\\u000Dx; x === "number".'),assert.sameValue(eval("var x = 0; typeof\u2028x"),"number",'#8: var x = 0; typeof\\u2028x; x === "number".'),assert.sameValue(eval("var x = 0; typeof\u2029x"),"number",'#9: var x = 0; typeof\\u2029x; x === "number".'),assert.sameValue(eval("var x = 0; typeof	\v\f \xA0\n\r\u2028\u2029x"),"number",'#10: var x = 0; typeof\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029x; x === "number".'),assert.sameValue(eval("typeof(0)"),"number","applied with grouping operator enclosing operand");


assert.sameValue(eval("var x = 0; typeof	x"),"number",'#1: var x = 0; typeof\\u0009x; x === "number".'),assert.sameValue(eval("var x = 0; typeof\vx"),"number",'#2: var x = 0; typeof\\u000Bx; x === "number".'),assert.sameValue(eval("var x = 0; typeof\fx"),"number",'#3: var x = 0; typeof\\u000Cx; x === "number".'),assert.sameValue(eval("var x = 0; typeof x"),"number",'#4: var x = 0; typeof\\u0020x; x === "number".'),assert.sameValue(eval("var x = 0; typeof\xA0x"),"number",'#5: var x = 0; typeof\\u00A0x; x === "number".'),assert.sameValue(eval(`var x = 0; typeof
x`),"number",'#6: var x = 0; typeof\\u000Ax; x === "number".'),assert.sameValue(eval("var x = 0; typeof\rx"),"number",'#7: var x = 0; typeof\\u000Dx; x === "number".'),assert.sameValue(eval("var x = 0; typeof\u2028x"),"number",'#8: var x = 0; typeof\\u2028x; x === "number".'),assert.sameValue(eval("var x = 0; typeof\u2029x"),"number",'#9: var x = 0; typeof\\u2029x; x === "number".'),assert.sameValue(eval(`var x = 0; typeof	\v\f \xA0
\r\u2028\u2029x`),"number",'#10: var x = 0; typeof\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029x; x === "number".'),assert.sameValue(eval("typeof(0)"),"number","applied with grouping operator enclosing operand");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-306.js


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{value:1001,writable:!1,configurable:!1});try{throw Object.defineProperties(arg,{"genericProperty":{value:1002}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arg,"genericProperty",{value:1001,writable:!1,enumerable:!1,configurable:!1});


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{value:1001,writable:!1,configurable:!1});try{throw Object.defineProperties(arg,{genericProperty:{value:1002}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arg,"genericProperty",{value:1001,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/addition/S11.6.1_A3.1_T2.5.js


if(!0+null!==1)throw new Test262Error("#1: true + null === 1. Actual: "+(!0+null));if(null+!0!==1)throw new Test262Error("#2: null + true === 1. Actual: "+(null+!0));if(new Boolean(!0)+null!==1)throw new Test262Error("#3: new Boolean(true) + null === 1. Actual: "+(new Boolean(!0)+null));if(null+new Boolean(!0)!==1)throw new Test262Error("#4: null + new Boolean(true) === 1. Actual: "+(null+new Boolean(!0)));


if(!0+null!=1)throw new Test262Error("#1: true + null === 1. Actual: "+(!0+null));if(null+!0!=1)throw new Test262Error("#2: null + true === 1. Actual: "+(null+!0));if(new Boolean(!0)+null!==1)throw new Test262Error("#3: new Boolean(true) + null === 1. Actual: "+(new Boolean(!0)+null));if(null+new Boolean(!0)!==1)throw new Test262Error("#4: null + new Boolean(true) === 1. Actual: "+(null+new Boolean(!0)));



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-272.js


var arr=[];Object.defineProperty(arr,"property",{value:12,enumerable:!1});try{throw Object.defineProperties(arr,{"property":{enumerable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"property",{value:12,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"property",{value:12,enumerable:!1});try{throw Object.defineProperties(arr,{property:{enumerable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"property",{value:12,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-223.js


var arr=[];Object.defineProperty(arr,"0",{enumerable:!0});Object.defineProperties(arr,{"0":{enumerable:!0}});verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!0,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{enumerable:!0}),Object.defineProperties(arr,{0:{enumerable:!0}}),verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!0,configurable:!1});



test262/test/built-ins/parseFloat/S15.1.2.3_A1_T5.js


if(parseFloat(new Number(-1.1))!==parseFloat("-1.1"))throw new Test262Error('#1: parseFloat(new Number(-1.1)) === parseFloat("-1.1"). Actual: '+parseFloat(new Number(-1.1)));if(parseFloat(new Number(Infinity))!==parseFloat("Infinity"))throw new Test262Error('#2: parseFloat(new Number(Infinity)) === parseFloat("Infinity"). Actual: '+parseFloat(new Number(Infinity)));if(""+parseFloat(new Number(NaN))!=="NaN")throw new Test262Error('#3: String(parseFloat(new Number(NaN))) === "NaN". Actual: '+(""+parseFloat(new Number(NaN))));if(parseFloat(new Number(1))!==parseFloat(".01e+2"))throw new Test262Error('#4: parseFloat(new Number(.01e+2)) === parseFloat(".01e+2"). Actual: '+parseFloat(new Number(1)));


if(parseFloat(new Number(-1.1))!==parseFloat("-1.1"))throw new Test262Error('#1: parseFloat(new Number(-1.1)) === parseFloat("-1.1"). Actual: '+parseFloat(new Number(-1.1)));if(parseFloat(new Number(1/0))!==parseFloat("Infinity"))throw new Test262Error('#2: parseFloat(new Number(Infinity)) === parseFloat("Infinity"). Actual: '+parseFloat(new Number(1/0)));if(String(parseFloat(new Number(NaN)))!=="NaN")throw new Test262Error('#3: String(parseFloat(new Number(NaN))) === "NaN". Actual: '+String(parseFloat(new Number(NaN))));if(parseFloat(new Number(1))!==parseFloat(".01e+2"))throw new Test262Error('#4: parseFloat(new Number(.01e+2)) === parseFloat(".01e+2"). Actual: '+parseFloat(new Number(1)));



test262/test/language/expressions/call/S11.2.3_A4_T5.js


try{throw Math(),new Test262Error("#1.1: Math() throw TypeError. Actual: "+Math())}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: Math() throw TypeError. Actual: "+e)}


try{throw Math(),new Test262Error("#1.1: Math() throw TypeError. Actual: "+Math())}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: Math() throw TypeError. Actual: "+e)}



test262/test/language/expressions/addition/S11.6.1_A3.2_T2.1.js


if(new String("1")+1!=="11")throw new Test262Error('#3: new String("1") + 1 === "11". Actual: '+(new String("1")+1));if(1+new String("1")!=="11")throw new Test262Error('#4: 1 + new String("1") === "11". Actual: '+(1+new String("1")));if("1"+new Number(1)!=="11")throw new Test262Error('#5: "1" + new Number(1) === "11". Actual: '+("1"+new Number(1)));if(new Number(1)+"1"!=="11")throw new Test262Error('#6: new Number(1) + "1" === "11". Actual: '+(new Number(1)+"1"));if(new String("1")+new Number(1)!=="11")throw new Test262Error('#7: new String("1") + new Number(1) === "11". Actual: '+(new String("1")+new Number(1)));if(new Number(1)+new String("1")!=="11")throw new Test262Error('#8: new Number(1) + new String("1") === "11". Actual: '+(new Number(1)+new String("1")));


if(new String("1")+1!=="11")throw new Test262Error('#3: new String("1") + 1 === "11". Actual: '+(new String("1")+1));if(1+new String("1")!=="11")throw new Test262Error('#4: 1 + new String("1") === "11". Actual: '+(1+new String("1")));if("1"+new Number(1)!="11")throw new Test262Error('#5: "1" + new Number(1) === "11". Actual: '+("1"+new Number(1)));if(new Number(1)+"1"!="11")throw new Test262Error('#6: new Number(1) + "1" === "11". Actual: '+(new Number(1)+"1"));if(new String("1")+new Number(1)!=="11")throw new Test262Error('#7: new String("1") + new Number(1) === "11". Actual: '+(new String("1")+new Number(1)));if(new Number(1)+new String("1")!=="11")throw new Test262Error('#8: new Number(1) + new String("1") === "11". Actual: '+(new Number(1)+new String("1")));



test262/test/built-ins/parseFloat/S15.1.2.3_A1_T2.js


if(parseFloat(-1.1)!==parseFloat("-1.1"))throw new Test262Error('#1: parseFloat(-1.1) === parseFloat("-1.1"). Actual: '+parseFloat(-1.1));if(parseFloat(Infinity)!==parseFloat("Infinity"))throw new Test262Error('#2: parseFloat(Infinity) === parseFloat("Infinity"). Actual: '+parseFloat(Infinity));if(""+parseFloat(NaN)!=="NaN")throw new Test262Error('#3: String(parseFloat(NaN)) === "NaN". Actual: '+(""+parseFloat(NaN)));if(parseFloat(1)!==parseFloat(".01e+2"))throw new Test262Error('#4: parseFloat(.01e+2) === parseFloat(".01e+2"). Actual: '+parseFloat(1));if(parseFloat(-0)!==0)throw new Test262Error("#5: parseFloat(-0) === 0. Actual: "+parseFloat(-0));if(1/parseFloat(-0)!==Number.POSITIVE_INFINITY)throw new Test262Error("#5: parseFloat(-0) === +0. Actual: "+parseFloat(-0));


if(parseFloat(-1.1)!==parseFloat("-1.1"))throw new Test262Error('#1: parseFloat(-1.1) === parseFloat("-1.1"). Actual: '+parseFloat(-1.1));if(parseFloat(1/0)!==parseFloat("Infinity"))throw new Test262Error('#2: parseFloat(Infinity) === parseFloat("Infinity"). Actual: '+parseFloat(1/0));if(String(parseFloat(NaN))!=="NaN")throw new Test262Error('#3: String(parseFloat(NaN)) === "NaN". Actual: '+String(parseFloat(NaN)));if(parseFloat(1)!==parseFloat(".01e+2"))throw new Test262Error('#4: parseFloat(.01e+2) === parseFloat(".01e+2"). Actual: '+parseFloat(1));if(parseFloat(-0)!==0)throw new Test262Error("#5: parseFloat(-0) === 0. Actual: "+parseFloat(-0));if(1/parseFloat(-0)!==Number.POSITIVE_INFINITY)throw new Test262Error("#5: parseFloat(-0) === +0. Actual: "+parseFloat(-0));



test262/test/language/expressions/call/S11.2.3_A4_T4.js


try{throw this(),new Test262Error("#1.1: this() throw TypeError. Actual: "+this())}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: this() throw TypeError. Actual: "+e)}


try{throw this(),new Test262Error("#1.1: this() throw TypeError. Actual: "+this())}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: this() throw TypeError. Actual: "+e)}



test262/test/language/expressions/addition/S11.6.1_A2.1_T3.js


try{throw 1+y,new Test262Error("#1.1: 1 + y throw ReferenceError. Actual: "+(1+y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 + y throw ReferenceError. Actual: "+e)}


try{throw 1+y,new Test262Error("#1.1: 1 + y throw ReferenceError. Actual: "+(1+y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 + y throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-252.js


var arr=[12];Object.defineProperties(arr,{"0":{configurable:!1}});verifyProperty(arr,"0",{value:12,writable:!0,enumerable:!0,configurable:!1});


var arr=[12];Object.defineProperties(arr,{0:{configurable:!1}}),verifyProperty(arr,"0",{value:12,writable:!0,enumerable:!0,configurable:!1});



test262/test/built-ins/Iterator/prototype/map/iterator-already-exhausted.js


let iterator=function*(){}(),{value,done}=iterator.next();assert.sameValue(value,void 0);assert.sameValue(done,!0);iterator=iterator.map(()=>0);({value,done}=iterator.next());assert.sameValue(value,void 0);assert.sameValue(done,!0);


let iterator=function*(){}(),{value,done}=iterator.next();assert.sameValue(value,void 0),assert.sameValue(done,!0),iterator=iterator.map(()=>0),{value,done}=iterator.next(),assert.sameValue(value,void 0),assert.sameValue(done,!0);



test262/test/language/expressions/addition/S11.6.1_A3.2_T1.1.js


if(new String("1")+"1"!=="11")throw new Test262Error('#2: new String("1") + "1" === "11". Actual: '+(new String("1")+"1"));if("1"+new String("1")!=="11")throw new Test262Error('#3: "1" + new String("1") === "11". Actual: '+("1"+new String("1")));if(new String("1")+new String("1")!=="11")throw new Test262Error('#4: new String("1") + new String("1") === "11". Actual: '+(new String("1")+new String("1")));


if(new String("1")+"1"!="11")throw new Test262Error('#2: new String("1") + "1" === "11". Actual: '+(new String("1")+"1"));if("1"+new String("1")!="11")throw new Test262Error('#3: "1" + new String("1") === "11". Actual: '+("1"+new String("1")));if(new String("1")+new String("1")!=="11")throw new Test262Error('#4: new String("1") + new String("1") === "11". Actual: '+(new String("1")+new String("1")));



test262/test/language/expressions/addition/S11.6.1_A2.1_T2.js


try{throw x+1,new Test262Error("#1.1: x + 1 throw ReferenceError. Actual: "+(x+1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x + 1 throw ReferenceError. Actual: "+e)}


try{throw x+1,new Test262Error("#1.1: x + 1 throw ReferenceError. Actual: "+(x+1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x + 1 throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-266.js


var arr=[];Object.defineProperties(arr,{"property":{value:12,writable:!0,enumerable:!0,configurable:!0}});verifyProperty(arr,"property",{value:12,writable:!0,enumerable:!0,configurable:!0});if(arr.length!==0)throw new Test262Error("Expected arr.length === 0, actually "+arr.length);


var arr=[];if(Object.defineProperties(arr,{property:{value:12,writable:!0,enumerable:!0,configurable:!0}}),verifyProperty(arr,"property",{value:12,writable:!0,enumerable:!0,configurable:!0}),arr.length!==0)throw new Test262Error("Expected arr.length === 0, actually "+arr.length);



test262/test/language/expressions/addition/S11.6.1_A3.2_T2.2.js


if(new Boolean(!0)+"1"!=="true1")throw new Test262Error('#3: new Boolean(true) + "1" === "true1". Actual: '+(new Boolean(!0)+"1"));if("1"+new Boolean(!0)!=="1true")throw new Test262Error('#4: "1" + new Boolean(true) === "1true". Actual: '+("1"+new Boolean(!0)));if(!0+new String("1")!=="true1")throw new Test262Error('#5: true + new String("1") === "true1". Actual: '+(!0+new String("1")));if(new String("1")+!0!=="1true")throw new Test262Error('#6: new String("1") + true === "1true". Actual: '+(new String("1")+!0));if(new Boolean(!0)+new String("1")!=="true1")throw new Test262Error('#7: new Boolean(true) + new String("1") === "true1". Actual: '+(new Boolean(!0)+new String("1")));if(new String("1")+new Boolean(!0)!=="1true")throw new Test262Error('#8: new String("1") + new Boolean(true) === "1true". Actual: '+(new String("1")+new Boolean(!0)));


if(new Boolean(!0)+"1"!="true1")throw new Test262Error('#3: new Boolean(true) + "1" === "true1". Actual: '+(new Boolean(!0)+"1"));if("1"+new Boolean(!0)!="1true")throw new Test262Error('#4: "1" + new Boolean(true) === "1true". Actual: '+("1"+new Boolean(!0)));if(!0+new String("1")!=="true1")throw new Test262Error('#5: true + new String("1") === "true1". Actual: '+(!0+new String("1")));if(new String("1")+!0!=="1true")throw new Test262Error('#6: new String("1") + true === "1true". Actual: '+(new String("1")+!0));if(new Boolean(!0)+new String("1")!=="true1")throw new Test262Error('#7: new Boolean(true) + new String("1") === "true1". Actual: '+(new Boolean(!0)+new String("1")));if(new String("1")+new Boolean(!0)!=="1true")throw new Test262Error('#8: new String("1") + new Boolean(true) === "1true". Actual: '+(new String("1")+new Boolean(!0)));



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-237.js


var arr=[];Object.defineProperty(arr,"1",{value:12});try{throw Object.defineProperties(arr,{"1":{value:36}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:12,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{value:12});try{throw Object.defineProperties(arr,{1:{value:36}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:12,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/addition/S11.6.1_A2.4_T3.js


try{throw x+(x=1),new Test262Error("#1.1: x + (x = 1) throw ReferenceError. Actual: "+(x+(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x + (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x+(x=1),new Test262Error("#1.1: x + (x = 1) throw ReferenceError. Actual: "+(x+(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x + (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-227.js


var arr=[];Object.defineProperty(arr,"1",{value:3,configurable:!1});try{Object.defineProperties(arr,{"1":{value:13,configurable:!0}})}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:3,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{value:3,configurable:!1});try{Object.defineProperties(arr,{1:{value:13,configurable:!0}})}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:3,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-302.js


var arg=function(){return arguments}(1,2,3);Object.defineProperties(arg,{"genericProperty":{value:1001,writable:!0,enumerable:!0,configurable:!0}});verifyProperty(arg,"genericProperty",{value:1001,writable:!0,enumerable:!0,configurable:!0});


var arg=function(){return arguments}(1,2,3);Object.defineProperties(arg,{genericProperty:{value:1001,writable:!0,enumerable:!0,configurable:!0}}),verifyProperty(arg,"genericProperty",{value:1001,writable:!0,enumerable:!0,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-213.js


var arr=[];Object.defineProperty(arr,"0",{value:-0});try{throw Object.defineProperties(arr,{"0":{value:0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"0",{value:-0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{value:-0});try{throw Object.defineProperties(arr,{0:{value:0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"0",{value:-0,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-224.js


var arr=[];Object.defineProperty(arr,"0",{enumerable:!0,configurable:!0});Object.defineProperties(arr,{"0":{enumerable:!1}});verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!0});


var arr=[];Object.defineProperty(arr,"0",{enumerable:!0,configurable:!0}),Object.defineProperties(arr,{0:{enumerable:!1}}),verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-210.js


var arr=[];Object.defineProperty(arr,"0",{value:void 0});Object.defineProperties(arr,{"0":{value:void 0}});verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{value:void 0}),Object.defineProperties(arr,{0:{value:void 0}}),verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Iterator/prototype/flatMap/iterator-already-exhausted.js


let iterator=function*(){}(),{value,done}=iterator.next();assert.sameValue(value,void 0);assert.sameValue(done,!0);iterator=iterator.flatMap(x=>[x]);({value,done}=iterator.next());assert.sameValue(value,void 0);assert.sameValue(done,!0);


let iterator=function*(){}(),{value,done}=iterator.next();assert.sameValue(value,void 0),assert.sameValue(done,!0),iterator=iterator.flatMap(x=>[x]),{value,done}=iterator.next(),assert.sameValue(value,void 0),assert.sameValue(done,!0);



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-253.js


var arr=[12];Object.defineProperties(arr,{"0":{value:36,writable:!1,configurable:!1}});verifyProperty(arr,"0",{value:36,writable:!1,enumerable:!0,configurable:!1});


var arr=[12];Object.defineProperties(arr,{0:{value:36,writable:!1,configurable:!1}}),verifyProperty(arr,"0",{value:36,writable:!1,enumerable:!0,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-236.js


var arr=[];Object.defineProperty(arr,"1",{value:-0});try{throw Object.defineProperties(arr,{"1":{value:0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:-0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{value:-0});try{throw Object.defineProperties(arr,{1:{value:0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:-0,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/identifier-resolution/S11.1.2_A1_T2.js


try{throw this.z,z,new Test262Error("#1.1: this.z; z === undefined throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: this.z; z === undefined throw ReferenceError. Actual: "+e)}


try{throw this.z,z,new Test262Error("#1.1: this.z; z === undefined throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: this.z; z === undefined throw ReferenceError. Actual: "+e)}



test262/test/built-ins/WeakRef/prototype/deref/this-does-not-have-internal-target-throws.js


assert.sameValue(typeof WeakRef.prototype.deref,"function");var deref=WeakRef.prototype.deref;assert.throws(TypeError,function(){deref.call({["[[Target]]"]:{}})},"Ordinary object without [[Target]]");assert.throws(TypeError,function(){deref.call(WeakRef.prototype)},"WeakRef.prototype does not have a [[Target]] internal slot");assert.throws(TypeError,function(){deref.call(WeakRef)},"WeakRef does not have a [[Target]] internal slot");var finalizationRegistry=new FinalizationRegistry(function(){});assert.throws(TypeError,function(){deref.call(finalizationRegistry)},"FinalizationRegistry instance");var wm=new WeakMap;assert.throws(TypeError,function(){deref.call(wm)},"WeakMap instance");var ws=new WeakSet;assert.throws(TypeError,function(){deref.call(ws)},"WeakSet instance");


assert.sameValue(typeof WeakRef.prototype.deref,"function");var deref=WeakRef.prototype.deref;assert.throws(TypeError,function(){deref.call({"[[Target]]":{}})},"Ordinary object without [[Target]]"),assert.throws(TypeError,function(){deref.call(WeakRef.prototype)},"WeakRef.prototype does not have a [[Target]] internal slot"),assert.throws(TypeError,function(){deref.call(WeakRef)},"WeakRef does not have a [[Target]] internal slot");var finalizationRegistry=new FinalizationRegistry(function(){});assert.throws(TypeError,function(){deref.call(finalizationRegistry)},"FinalizationRegistry instance");var wm=new WeakMap;assert.throws(TypeError,function(){deref.call(wm)},"WeakMap instance");var ws=new WeakSet;assert.throws(TypeError,function(){deref.call(ws)},"WeakSet instance");



test262/test/built-ins/Iterator/prototype/filter/iterator-already-exhausted.js


let iterator=function*(){}(),{value,done}=iterator.next();assert.sameValue(value,void 0);assert.sameValue(done,!0);iterator=iterator.filter(()=>!0);({value,done}=iterator.next());assert.sameValue(value,void 0);assert.sameValue(done,!0);


let iterator=function*(){}(),{value,done}=iterator.next();assert.sameValue(value,void 0),assert.sameValue(done,!0),iterator=iterator.filter(()=>!0),{value,done}=iterator.next(),assert.sameValue(value,void 0),assert.sameValue(done,!0);



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-226.js


var arr=[];Object.defineProperty(arr,"0",{configurable:!0});Object.defineProperties(arr,{"0":{configurable:!1}});verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{configurable:!0}),Object.defineProperties(arr,{0:{configurable:!1}}),verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/greater-than/S11.8.2_A4.11.js


var x="x";if(x+"y">x!==!0)throw new Test262Error('#6: var x = "x"; (x + "y" > x) === true');


var x="x";if(!(x+"y">x))throw new Test262Error('#6: var x = "x"; (x + "y" > x) === true');



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-243.js


var arr=[];Object.defineProperty(arr,"1",{set:void 0});Object.defineProperties(arr,{"1":{set:void 0}});verifyProperty(arr,"1",{enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{set:void 0}),Object.defineProperties(arr,{1:{set:void 0}}),verifyProperty(arr,"1",{enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-183.js


var arr=[1,2,3];Object.defineProperty(arr,"length",{writable:!1});Object.defineProperties(arr,{"1":{value:"abc"}});assert.sameValue(arr[0],1,"arr[0]");assert.sameValue(arr[1],"abc","arr[1]");assert.sameValue(arr[2],3,"arr[2]");


var arr=[1,2,3];Object.defineProperty(arr,"length",{writable:!1}),Object.defineProperties(arr,{1:{value:"abc"}}),assert.sameValue(arr[0],1,"arr[0]"),assert.sameValue(arr[1],"abc","arr[1]"),assert.sameValue(arr[2],3,"arr[2]");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-212.js


var arr=[];Object.defineProperty(arr,"0",{value:NaN});Object.defineProperties(arr,{"0":{value:NaN}});verifyProperty(arr,"0",{value:NaN,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{value:NaN}),Object.defineProperties(arr,{0:{value:NaN}}),verifyProperty(arr,"0",{value:NaN,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/greater-than/S11.8.2_A2.4_T3.js


try{throw x>(x=1),new Test262Error("#1.1: x > (x = 1) throw ReferenceError. Actual: "+(x>(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x > (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x>(x=1),new Test262Error("#1.1: x > (x = 1) throw ReferenceError. Actual: "+(x>(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x > (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/literals/regexp/S7.8.5_A1.3_T6.js


try{throw eval("/\u2029/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: Paragraph separator is incorrect. Actual: "+eval("/\u2029/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionFirstChar :: Paragraph separator is incorrect. Actual: "+e)}


try{throw eval("/\u2029/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: Paragraph separator is incorrect. Actual: "+eval("/\u2029/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionFirstChar :: Paragraph separator is incorrect. Actual: "+e)}



test262/test/built-ins/Iterator/prototype/find/iterator-has-no-return.js


let iterator=[1,2,3,4,5][Symbol.iterator]();assert.sameValue(iterator.return,void 0);let ret=iterator.find(v=>v>3);assert.sameValue(ret,4);let{done,value}=iterator.next();assert.sameValue(done,!1);assert.sameValue(value,5);({done,value}=iterator.next());assert.sameValue(done,!0);assert.sameValue(value,void 0);


let iterator=[1,2,3,4,5][Symbol.iterator]();assert.sameValue(iterator.return,void 0);let ret=iterator.find(v=>v>3);assert.sameValue(ret,4);let{done,value}=iterator.next();assert.sameValue(done,!1),assert.sameValue(value,5),{done,value}=iterator.next(),assert.sameValue(done,!0),assert.sameValue(value,void 0);



test262/test/language/expressions/greater-than/S11.8.2_A2.1_T3.js


try{throw 1>y,new Test262Error("#1.1: 1 > y throw ReferenceError. Actual: "+(1>y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 > y throw ReferenceError. Actual: "+e)}


try{throw 1>y,new Test262Error("#1.1: 1 > y throw ReferenceError. Actual: "+(1>y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 > y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/greater-than/S11.8.2_A2.1_T2.js


try{throw x>1,new Test262Error("#1.1: x > 1 throw ReferenceError. Actual: "+(x>1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x > 1 throw ReferenceError. Actual: "+e)}


try{throw x>1,new Test262Error("#1.1: x > 1 throw ReferenceError. Actual: "+(x>1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x > 1 throw ReferenceError. Actual: "+e)}



test262/test/language/literals/regexp/S7.8.5_A1.5_T6.js


try{throw eval("/\\\u2029/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: BackslashSequence :: \\Paragraph separator is incorrect. Actual: "+eval("/\\\u2029/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionFirstChar :: BackslashSequence :: \\Paragraph separator is incorrect. Actual: "+e)}


try{throw eval("/\\\u2029/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: BackslashSequence :: \\Paragraph separator is incorrect. Actual: "+eval("/\\\u2029/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionFirstChar :: BackslashSequence :: \\Paragraph separator is incorrect. Actual: "+e)}



test262/test/language/literals/regexp/S7.8.5_A2.3_T6.js


try{throw eval("/s\u2029/").source,new Test262Error("#1.1: RegularExpressionChar :: Paragraph separator is incorrect. Actual: "+eval("/s\u2029/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionChar :: Paragraph separator is incorrect. Actual: "+e)}


try{throw eval("/s\u2029/").source,new Test262Error("#1.1: RegularExpressionChar :: Paragraph separator is incorrect. Actual: "+eval("/s\u2029/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionChar :: Paragraph separator is incorrect. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-263.js


var arr=[];arr.length=3;Object.defineProperties(arr,{"1":{value:26}});assert.sameValue(arr.length,3,"arr.length");assert.sameValue(arr[1],26,"arr[1]");


var arr=[];arr.length=3,Object.defineProperties(arr,{1:{value:26}}),assert.sameValue(arr.length,3,"arr.length"),assert.sameValue(arr[1],26,"arr[1]");



test262/test/language/literals/regexp/S7.8.5_A2.5_T6.js


try{throw eval("/a\\\u2029/").source,new Test262Error("#1.1: RegularExpressionChar :: BackslashSequence :: \\Paragraph separator is incorrect. Actual: "+eval("/a\\\u2029/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionChar :: BackslashSequence :: \\Paragraph separator is incorrect. Actual: "+e)}


try{throw eval("/a\\\u2029/").source,new Test262Error("#1.1: RegularExpressionChar :: BackslashSequence :: \\Paragraph separator is incorrect. Actual: "+eval("/a\\\u2029/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionChar :: BackslashSequence :: \\Paragraph separator is incorrect. Actual: "+e)}



test262/test/built-ins/Iterator/prototype/some/iterator-has-no-return.js


let iterator=[1,2,3,4,5][Symbol.iterator]();assert.sameValue(iterator.return,void 0);let ret=iterator.some(v=>v>3);assert.sameValue(ret,!0);let{done,value}=iterator.next();assert.sameValue(done,!1);assert.sameValue(value,5);({done,value}=iterator.next());assert.sameValue(done,!0);assert.sameValue(value,void 0);


let iterator=[1,2,3,4,5][Symbol.iterator]();assert.sameValue(iterator.return,void 0);let ret=iterator.some(v=>v>3);assert.sameValue(ret,!0);let{done,value}=iterator.next();assert.sameValue(done,!1),assert.sameValue(value,5),{done,value}=iterator.next(),assert.sameValue(done,!0),assert.sameValue(value,void 0);



test262/test/language/literals/regexp/S7.8.5_A2.5_T5.js


try{throw eval("/a\\\u2028/").source,new Test262Error("#1.1: RegularExpressionChar :: BackslashSequence :: \\Line separator is incorrect. Actual: "+eval("/a\\\u2028/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionChar :: BackslashSequence :: \\Line separator is incorrect. Actual: "+e)}


try{throw eval("/a\\\u2028/").source,new Test262Error("#1.1: RegularExpressionChar :: BackslashSequence :: \\Line separator is incorrect. Actual: "+eval("/a\\\u2028/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionChar :: BackslashSequence :: \\Line separator is incorrect. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-197.js


var arr=[],isOwnProperty=!1,canWritable=!1;Object.defineProperties(arr,{"0":{value:1001,enumerable:!0,configurable:!1}});verifyProperty(arr,"0",{value:1001,writable:!1});


var arr=[],isOwnProperty=!1,canWritable=!1;Object.defineProperties(arr,{0:{value:1001,enumerable:!0,configurable:!1}}),verifyProperty(arr,"0",{value:1001,writable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-206.js


var arr=[];arr[0]=101;Object.defineProperties(arr,{"0":{}});verifyProperty(arr,"0",{value:101,writable:!0,enumerable:!0,configurable:!0});


var arr=[];arr[0]=101,Object.defineProperties(arr,{0:{}}),verifyProperty(arr,"0",{value:101,writable:!0,enumerable:!0,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-2-7.js


var obj={"123":100},obj1=Object.defineProperties(obj,"");assert.sameValue(obj,obj1,"obj");


var obj={123:100},obj1=Object.defineProperties(obj,"");assert.sameValue(obj,obj1,"obj");



test262/test/language/literals/regexp/S7.8.5_A2.3_T4.js


try{throw eval("/a\r/").source,new Test262Error("#1.1: RegularExpressionChar :: Carriage Retur is incorrect. Actual: "+eval("/a\r/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionChar :: Carriage Retur is incorrect. Actual: "+e)}


try{throw eval("/a\r/").source,new Test262Error("#1.1: RegularExpressionChar :: Carriage Retur is incorrect. Actual: "+eval("/a\r/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionChar :: Carriage Retur is incorrect. Actual: "+e)}



test262/test/language/literals/regexp/S7.8.5_A2.3_T5.js


try{throw eval("/a\u2028/").source,new Test262Error("#1.1: RegularExpressionChar :: Line separator is incorrect. Actual: "+eval("/a\u2028/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionChar :: Line separator is incorrect. Actual: "+e)}


try{throw eval("/a\u2028/").source,new Test262Error("#1.1: RegularExpressionChar :: Line separator is incorrect. Actual: "+eval("/a\u2028/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionChar :: Line separator is incorrect. Actual: "+e)}



test262/test/language/literals/regexp/S7.8.5_A4.1.js


if(/(?:)/ instanceof RegExp!==!0)throw new Test262Error("#1: (/(?:)/ instanceof RegExp) === true. Actual: "+(/(?:)/ instanceof RegExp));


if(!(/(?:)/ instanceof RegExp))throw new Test262Error("#1: (/(?:)/ instanceof RegExp) === true. Actual: "+(/(?:)/ instanceof RegExp));



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-216.js


var arr=[];Object.defineProperty(arr,"0",{value:"abcd"});Object.defineProperties(arr,{"0":{value:"abcd"}});verifyProperty(arr,"0",{value:"abcd",writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{value:"abcd"}),Object.defineProperties(arr,{0:{value:"abcd"}}),verifyProperty(arr,"0",{value:"abcd",writable:!1,enumerable:!1,configurable:!1});



test262/test/language/literals/regexp/S7.8.5_A2.5_T4.js


try{throw eval("/a\\\r/").source,new Test262Error("#1.1: RegularExpressionChar :: BackslashSequence :: \\Carriage Return is incorrect. Actual: "+eval("/a\\\r/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionChar :: BackslashSequence :: \\Carriage Return is incorrect. Actual: "+e)}


try{throw eval("/a\\\r/").source,new Test262Error("#1.1: RegularExpressionChar :: BackslashSequence :: \\Carriage Return is incorrect. Actual: "+eval("/a\\\r/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionChar :: BackslashSequence :: \\Carriage Return is incorrect. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-187.js


Object.defineProperty(Array.prototype,"0",{value:11,configurable:!0});var arr=[];Object.defineProperties(arr,{"0":{configurable:!1}});assert(arr.hasOwnProperty("0"),'arr.hasOwnProperty("0") !== true');assert.sameValue(typeof arr[0],"undefined","typeof arr[0]");assert.sameValue(Array.prototype[0],11,"Array.prototype[0]");


Object.defineProperty(Array.prototype,"0",{value:11,configurable:!0});var arr=[];Object.defineProperties(arr,{0:{configurable:!1}}),assert(arr.hasOwnProperty("0"),'arr.hasOwnProperty("0") !== true'),assert.sameValue(typeof arr[0],"undefined","typeof arr[0]"),assert.sameValue(Array.prototype[0],11,"Array.prototype[0]");



test262/test/language/literals/regexp/S7.8.5_A1.3_T4.js


try{throw eval("/\r/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: Carriage Return is incorrect. Actual: "+eval("/\r/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionFirstChar :: Carriage Return is incorrect. Actual: "+e)}


try{throw eval("/\r/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: Carriage Return is incorrect. Actual: "+eval("/\r/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionFirstChar :: Carriage Return is incorrect. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-247.js


var arr=[12];Object.defineProperties(arr,{"0":{value:36}});verifyProperty(arr,"0",{value:36,writable:!0,enumerable:!0,configurable:!0});


var arr=[12];Object.defineProperties(arr,{0:{value:36}}),verifyProperty(arr,"0",{value:36,writable:!0,enumerable:!0,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-307.js


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{writable:!1,configurable:!1});try{throw Object.defineProperties(arg,{"genericProperty":{writable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arg,"genericProperty",{value:void 0,writable:!1,enumerable:!1,configurable:!1});


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{writable:!1,configurable:!1});try{throw Object.defineProperties(arg,{genericProperty:{writable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arg,"genericProperty",{value:void 0,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/literals/regexp/S7.8.5_A1.5_T5.js


try{throw eval("/\\\u2028/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: BackslashSequence :: \\Line separator is incorrect. Actual: "+eval("/\\\u2028/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionFirstChar :: BackslashSequence :: \\Line separator is incorrect. Actual: "+e)}


try{throw eval("/\\\u2028/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: BackslashSequence :: \\Line separator is incorrect. Actual: "+eval("/\\\u2028/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionFirstChar :: BackslashSequence :: \\Line separator is incorrect. Actual: "+e)}



test262/test/language/literals/regexp/y-assertion-start.js


var re;re=/^a/y;re.lastIndex=0;assert.sameValue(re.test("a"),!0,"positive: beginning of input (without `m`)");re.lastIndex=1;assert.sameValue(re.test(" a"),!1,"negative: within a line (without `m`)");re.lastIndex=1;assert.sameValue(re.test("\na"),!1,"negative: beginning of line (without `m`)");re=/^a/my;re.lastIndex=0;assert.sameValue(re.test("a"),!0,"positive: beginning of input (with `m`)");re.lastIndex=1;assert.sameValue(re.test(" a"),!1,"negative: within a line (with `m`)");re.lastIndex=1;assert.sameValue(re.test("\na"),!0,"positive: beginning of line (with `m`)");


var re;re=/^a/y,re.lastIndex=0,assert.sameValue(re.test("a"),!0,"positive: beginning of input (without `m`)"),re.lastIndex=1,assert.sameValue(re.test(" a"),!1,"negative: within a line (without `m`)"),re.lastIndex=1,assert.sameValue(re.test(`
a`),!1,"negative: beginning of line (without `m`)"),re=/^a/my,re.lastIndex=0,assert.sameValue(re.test("a"),!0,"positive: beginning of input (with `m`)"),re.lastIndex=1,assert.sameValue(re.test(" a"),!1,"negative: within a line (with `m`)"),re.lastIndex=1,assert.sameValue(re.test(`
a`),!0,"positive: beginning of line (with `m`)");



test262/test/language/literals/regexp/S7.8.5_A1.5_T4.js


try{throw eval("/\\\r/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: BackslashSequence :: \\Carriage Return is incorrect. Actual: "+eval("/\\\r/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionFirstChar :: BackslashSequence :: \\Carriage Return is incorrect. Actual: "+e)}


try{throw eval("/\\\r/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: BackslashSequence :: \\Carriage Return is incorrect. Actual: "+eval("/\\\r/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionFirstChar :: BackslashSequence :: \\Carriage Return is incorrect. Actual: "+e)}



test262/test/language/literals/regexp/S7.8.5_A1.3_T5.js


try{throw eval("/\u2028/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: Line separator is incorrect. Actual: "+eval("/\u2028/").source)}catch(e){if(e instanceof SyntaxError!==!0)throw new Test262Error("#1.2: RegularExpressionFirstChar :: Line separator is incorrect. Actual: "+e)}


try{throw eval("/\u2028/").source,new Test262Error("#1.1: RegularExpressionFirstChar :: Line separator is incorrect. Actual: "+eval("/\u2028/").source)}catch(e){if(!(e instanceof SyntaxError))throw new Test262Error("#1.2: RegularExpressionFirstChar :: Line separator is incorrect. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-273.js


var arr=[];Object.defineProperty(arr,"property",{value:12});try{throw Object.defineProperties(arr,{"property":{configurable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"property",{value:12,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"property",{value:12});try{throw Object.defineProperties(arr,{property:{configurable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"property",{value:12,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-235.js


var arr=[];Object.defineProperty(arr,"1",{value:0});try{throw Object.defineProperties(arr,{"1":{value:-0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{value:0});try{throw Object.defineProperties(arr,{1:{value:-0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:0,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-264.js


var arr=[];arr.length=3;Object.defineProperties(arr,{"3":{value:26}});assert.sameValue(arr.length,4,"arr.length");assert.sameValue(arr[3],26,"arr[3]");


var arr=[];arr.length=3,Object.defineProperties(arr,{3:{value:26}}),assert.sameValue(arr.length,4,"arr.length"),assert.sameValue(arr[3],26,"arr[3]");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-250.js


var arr=[100];Object.defineProperties(arr,{"0":{writable:!1}});verifyProperty(arr,"0",{value:100,writable:!1,enumerable:!0,configurable:!0});


var arr=[100];Object.defineProperties(arr,{0:{writable:!1}}),verifyProperty(arr,"0",{value:100,writable:!1,enumerable:!0,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-178.js


var arr=[0];Object.defineProperties(arr,{"0":{value:12}});assert.sameValue(arr[0],12,"arr[0]");


var arr=[0];Object.defineProperties(arr,{0:{value:12}}),assert.sameValue(arr[0],12,"arr[0]");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-184.js


var arr=[1,2,3];Object.defineProperty(arr,"length",{writable:!1});assert.throws(TypeError,function(){Object.defineProperties(arr,{"3":{value:"abc"}})});assert.sameValue(arr[0],1,"arr[0]");assert.sameValue(arr[1],2,"arr[1]");assert.sameValue(arr[2],3,"arr[2]");assert.sameValue(arr.hasOwnProperty("3"),!1,'arr.hasOwnProperty("3")');


var arr=[1,2,3];Object.defineProperty(arr,"length",{writable:!1}),assert.throws(TypeError,function(){Object.defineProperties(arr,{3:{value:"abc"}})}),assert.sameValue(arr[0],1,"arr[0]"),assert.sameValue(arr[1],2,"arr[1]"),assert.sameValue(arr[2],3,"arr[2]"),assert.sameValue(arr.hasOwnProperty("3"),!1,'arr.hasOwnProperty("3")');



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-215.js


var arr=[];Object.defineProperty(arr,"0",{value:101});Object.defineProperties(arr,{"0":{value:101}});verifyProperty(arr,"0",{value:101,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{value:101}),Object.defineProperties(arr,{0:{value:101}}),verifyProperty(arr,"0",{value:101,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-225.js


var arr=[];Object.defineProperty(arr,"0",{configurable:!0});Object.defineProperties(arr,{"0":{configurable:!0}});verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!0});


var arr=[];Object.defineProperty(arr,"0",{configurable:!0}),Object.defineProperties(arr,{0:{configurable:!0}}),verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-211.js


var arr=[];Object.defineProperty(arr,"0",{value:null});Object.defineProperties(arr,{"0":{value:null}});verifyProperty(arr,"0",{value:null,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{value:null}),Object.defineProperties(arr,{0:{value:null}}),verifyProperty(arr,"0",{value:null,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-270.js


var arr=[];Object.defineProperty(arr,"property",{value:12});try{throw Object.defineProperties(arr,{"property":{value:36}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"property",{value:12,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"property",{value:12});try{throw Object.defineProperties(arr,{property:{value:36}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"property",{value:12,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-240.js


var arr=[],obj1={value:12},obj2={value:36};Object.defineProperty(arr,"1",{value:obj1});try{throw Object.defineProperties(arr,{"1":{value:obj2}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:obj1,writable:!1,enumerable:!1,configurable:!1});


var arr=[],obj1={value:12},obj2={value:36};Object.defineProperty(arr,"1",{value:obj1});try{throw Object.defineProperties(arr,{1:{value:obj2}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:obj1,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-195.js


var arr=[];Object.defineProperties(arr,{"0":{enumerable:!0}});verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!0,configurable:!1});


var arr=[];Object.defineProperties(arr,{0:{enumerable:!0}}),verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!0,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-194.js


var arr=[];Object.preventExtensions(arr);assert.throws(TypeError,function(){Object.defineProperties(arr,{"0":{value:1}})});assert.sameValue(arr.hasOwnProperty("0"),!1,'arr.hasOwnProperty("0")');


var arr=[];Object.preventExtensions(arr),assert.throws(TypeError,function(){Object.defineProperties(arr,{0:{value:1}})}),assert.sameValue(arr.hasOwnProperty("0"),!1,'arr.hasOwnProperty("0")');



test262/test/built-ins/Object/defineProperties/15.2.3.7-2-5.js


var obj={"123":100},obj1=Object.defineProperties(obj,-12);assert.sameValue(obj,obj1,"obj");


var obj={123:100},obj1=Object.defineProperties(obj,-12);assert.sameValue(obj,obj1,"obj");



test262/test/language/expressions/bitwise-not/S11.4.8_A1.js


if(eval("~	0")!==-1)throw new Test262Error("#0: ~\\u00090 === -1");if(eval("~\v0")!==-1)throw new Test262Error("#2: ~\\u000B0 === -1");if(eval("~\f0")!==-1)throw new Test262Error("#3: ~\\u000C0 === -1");if(eval("~ 0")!==-1)throw new Test262Error("#4: ~\\u0020 === -1");if(eval("~\xA00")!==-1)throw new Test262Error("#5: ~\\u00A00 === -1");if(eval("~\n0")!==-1)throw new Test262Error("#6: ~\\u000A0 === -1");if(eval("~\r0")!==-1)throw new Test262Error("#7: ~\\u000D0 === -1");if(eval("~\u20280")!==-1)throw new Test262Error("#8: ~\\u20280 === -1");if(eval("~\u20290")!==-1)throw new Test262Error("#9: ~\\u20290 === -1");if(eval("~	\v\f \xA0\n\r\u2028\u20290")!==-1)throw new Test262Error("#10: ~\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20290 === -1");


if(eval("~	0")!==-1)throw new Test262Error("#0: ~\\u00090 === -1");if(eval("~\v0")!==-1)throw new Test262Error("#2: ~\\u000B0 === -1");if(eval("~\f0")!==-1)throw new Test262Error("#3: ~\\u000C0 === -1");if(eval("~ 0")!==-1)throw new Test262Error("#4: ~\\u0020 === -1");if(eval("~\xA00")!==-1)throw new Test262Error("#5: ~\\u00A00 === -1");if(eval(`~
0`)!==-1)throw new Test262Error("#6: ~\\u000A0 === -1");if(eval("~\r0")!==-1)throw new Test262Error("#7: ~\\u000D0 === -1");if(eval("~\u20280")!==-1)throw new Test262Error("#8: ~\\u20280 === -1");if(eval("~\u20290")!==-1)throw new Test262Error("#9: ~\\u20290 === -1");if(eval(`~	\v\f \xA0
\r\u2028\u20290`)!==-1)throw new Test262Error("#10: ~\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20290 === -1");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-305.js


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{value:1001,writable:!0,enumerable:!0,configurable:!0});Object.defineProperties(arg,{"genericProperty":{value:1002,enumerable:!1,configurable:!1}});verifyProperty(arg,"genericProperty",{value:1002,writable:!0,enumerable:!1,configurable:!1});


var arg=function(){return arguments}(1,2,3);Object.defineProperty(arg,"genericProperty",{value:1001,writable:!0,enumerable:!0,configurable:!0}),Object.defineProperties(arg,{genericProperty:{value:1002,enumerable:!1,configurable:!1}}),verifyProperty(arg,"genericProperty",{value:1002,writable:!0,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-214.js


var arr=[];Object.defineProperty(arr,"0",{value:0});try{throw Object.defineProperties(arr,{"0":{value:-0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"0",{value:0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"0",{value:0});try{throw Object.defineProperties(arr,{0:{value:-0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"0",{value:0,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-185.js


var arr=[1,2,3];Object.defineProperty(arr,"length",{writable:!1});assert.throws(TypeError,function(){Object.defineProperties(arr,{"4":{value:"abc"}})});assert.sameValue(arr[0],1,"arr[0]");assert.sameValue(arr[1],2,"arr[1]");assert.sameValue(arr[2],3,"arr[2]");assert.sameValue(arr.hasOwnProperty("3"),!1,'arr.hasOwnProperty("3")');assert.sameValue(arr.hasOwnProperty("4"),!1,'arr.hasOwnProperty("4")');


var arr=[1,2,3];Object.defineProperty(arr,"length",{writable:!1}),assert.throws(TypeError,function(){Object.defineProperties(arr,{4:{value:"abc"}})}),assert.sameValue(arr[0],1,"arr[0]"),assert.sameValue(arr[1],2,"arr[1]"),assert.sameValue(arr[2],3,"arr[2]"),assert.sameValue(arr.hasOwnProperty("3"),!1,'arr.hasOwnProperty("3")'),assert.sameValue(arr.hasOwnProperty("4"),!1,'arr.hasOwnProperty("4")');



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-220.js


var arr=[];Object.defineProperty(arr,"0",{writable:!0,configurable:!0});Object.defineProperties(arr,{"0":{writable:!1}});verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!0});


var arr=[];Object.defineProperty(arr,"0",{writable:!0,configurable:!0}),Object.defineProperties(arr,{0:{writable:!1}}),verifyProperty(arr,"0",{value:void 0,writable:!1,enumerable:!1,configurable:!0});



test262/test/language/expressions/bitwise-not/S11.4.8_A2.1_T2.js


try{throw~x,new Test262Error("#1.1: ~x throw ReferenceError. Actual: "+~x)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: ~x throw ReferenceError. Actual: "+e)}


try{throw~x,new Test262Error("#1.1: ~x throw ReferenceError. Actual: "+~x)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: ~x throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-271.js


var arr=[];Object.defineProperty(arr,"property",{writable:!1});try{throw Object.defineProperties(arr,{"property":{writable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"property",{value:void 0,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"property",{writable:!1});try{throw Object.defineProperties(arr,{property:{writable:!0}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"property",{value:void 0,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/object/accessor-name-literal-numeric-leading-decimal.js


var stringSet,obj={get[.1](){return"get string"},set[.1](param){stringSet=param}};assert.sameValue(obj["0.1"],"get string");obj["0.1"]="set string";assert.sameValue(stringSet,"set string");


var stringSet,obj={get .1(){return"get string"},set .1(param){stringSet=param}};assert.sameValue(obj["0.1"],"get string"),obj["0.1"]="set string",assert.sameValue(stringSet,"set string");



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-251.js


var arr=[12];Object.defineProperties(arr,{"0":{enumerable:!1}});verifyProperty(arr,"0",{value:12,writable:!0,enumerable:!1,configurable:!0});


var arr=[12];Object.defineProperties(arr,{0:{enumerable:!1}}),verifyProperty(arr,"0",{value:12,writable:!0,enumerable:!1,configurable:!0});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-200.js


var arr=[1];Object.defineProperties(arr,{"0":{value:1001,writable:!1,enumerable:!1,configurable:!1}});verifyProperty(arr,"0",{value:1001,writable:!1,enumerable:!1,configurable:!1});


var arr=[1];Object.defineProperties(arr,{0:{value:1001,writable:!1,enumerable:!1,configurable:!1}}),verifyProperty(arr,"0",{value:1001,writable:!1,enumerable:!1,configurable:!1});



test262/test/language/expressions/logical-or/S11.11.2_A2.1_T3.js


try{throw y,new Test262Error("#1.1: false || y throw ReferenceError. Actual: "+y)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: false || y throw ReferenceError. Actual: "+e)}


try{throw y,new Test262Error("#1.1: false || y throw ReferenceError. Actual: "+y)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: false || y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/right-shift/S11.7.2_A2.1_T2.js


try{throw x>>1,new Test262Error("#1.1: x >> 1 throw ReferenceError. Actual: "+(x>>1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x >> 1 throw ReferenceError. Actual: "+e)}


try{throw x>>1,new Test262Error("#1.1: x >> 1 throw ReferenceError. Actual: "+(x>>1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x >> 1 throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-234.js


var arr=[];Object.defineProperty(arr,"1",{value:3,configurable:!1,writable:!1});try{throw Object.defineProperties(arr,{"1":{value:"abc"}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:3,writable:!1,enumerable:!1,configurable:!1});


var arr=[];Object.defineProperty(arr,"1",{value:3,configurable:!1,writable:!1});try{throw Object.defineProperties(arr,{1:{value:"abc"}}),new Test262Error("Expected an exception.")}catch(e){if(!(e instanceof TypeError))throw new Test262Error("Expected TypeError, got "+e)}verifyProperty(arr,"1",{value:3,writable:!1,enumerable:!1,configurable:!1});



test262/test/built-ins/Object/defineProperties/15.2.3.7-6-a-265.js


var arr=[];Object.defineProperties(arr,{"5":{value:26}});assert.sameValue(arr.length,6,"arr.length");assert.sameValue(arr[5],26,"arr[5]");


var arr=[];Object.defineProperties(arr,{5:{value:26}}),assert.sameValue(arr.length,6,"arr.length"),assert.sameValue(arr[5],26,"arr[5]");



test262/test/language/expressions/right-shift/S11.7.2_A2.4_T3.js


try{throw x>>(x=1),new Test262Error("#1.1: x >> (x = 1) throw ReferenceError. Actual: "+(x>>(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x >> (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x>>(x=1),new Test262Error("#1.1: x >> (x = 1) throw ReferenceError. Actual: "+(x>>(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x >> (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/right-shift/S11.7.2_A2.1_T3.js


try{throw 1>>y,new Test262Error("#1.1: 1 >> y throw ReferenceError. Actual: "+(1>>y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 >> y throw ReferenceError. Actual: "+e)}


try{throw 1>>y,new Test262Error("#1.1: 1 >> y throw ReferenceError. Actual: "+(1>>y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 >> y throw ReferenceError. Actual: "+e)}



test262/test/intl402/Temporal/PlainDate/prototype/toLocaleString/lone-options-accepted.js


const epochMs=1735213600321,legacyDate=new Date(epochMs),plainDate=new Temporal.PlainDate(2024,12,26);for(const options of[{"year":"numeric"},{"month":"long"},{"day":"numeric"},{"weekday":"long"}]){const plainDateResult=plainDate.toLocaleString("en",options),legacyDateResult=legacyDate.toLocaleString("en",options);assert.sameValue(plainDateResult,legacyDateResult,`Instant.toLocaleString should format lone option ${JSON.stringify(options)}`)}


const epochMs=1735213600321,legacyDate=new Date(1735213600321),plainDate=new Temporal.PlainDate(2024,12,26);for(const options of[{year:"numeric"},{month:"long"},{day:"numeric"},{weekday:"long"}]){const plainDateResult=plainDate.toLocaleString("en",options),legacyDateResult=legacyDate.toLocaleString("en",options);assert.sameValue(plainDateResult,legacyDateResult,`Instant.toLocaleString should format lone option ${JSON.stringify(options)}`)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.9.js


try{var x=1,z=x&=y;throw new Test262Error("#1.1: var x = 1; x &= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x &= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x&=y;throw new Test262Error("#1.1: var x = 1; x &= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x &= y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.3.js


try{var z=x%=1;throw new Test262Error("#1.1: x %= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x %= 1 throw ReferenceError. Actual: "+e)}


try{var z=x%=1;throw new Test262Error("#1.1: x %= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x %= 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/object/accessor-name-literal-numeric-non-canonical.js


var stringSet,obj={get[1e-7](){return"get string"},set[1e-7](param){stringSet=param}};assert.sameValue(obj["1e-7"],"get string");obj["1e-7"]="set string";assert.sameValue(stringSet,"set string");


var stringSet,obj={get 1e-7(){return"get string"},set 1e-7(param){stringSet=param}};assert.sameValue(obj["1e-7"],"get string"),obj["1e-7"]="set string",assert.sameValue(stringSet,"set string");



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.2.js


try{var x=1,z=x/=y;throw new Test262Error("#1.1: var x = 1; x /= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x /= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x/=y;throw new Test262Error("#1.1: var x = 1; x /= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x /= y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.11.js


try{var z=x|=1;throw new Test262Error("#1.1: x |= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x |= 1 throw ReferenceError. Actual: "+e)}


try{var z=x|=1;throw new Test262Error("#1.1: x |= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x |= 1 throw ReferenceError. Actual: "+e)}



test262/test/harness/asyncHelpers-asyncTest-returns-undefined.js


var realDone=$DONE,doneCalls=0;globalThis.$DONE=function(){doneCalls++};(async function(){assert.sameValue(void 0,asyncTest({})),assert.sameValue(void 0,asyncTest(function(){return"non-thenable"})),assert.sameValue(void 0,asyncTest(function(){return Promise.resolve(!0)})),assert.sameValue(void 0,asyncTest(function(){return Promise.reject(new Test262Error("oh no"))}))})().then(()=>{assert.sameValue(doneCalls,4,"asyncTest must call $DONE")}).then(realDone,realDone);


var realDone=$DONE,doneCalls=0;globalThis.$DONE=function(){doneCalls++},async function(){assert.sameValue(void 0,asyncTest({})),assert.sameValue(void 0,asyncTest(function(){return"non-thenable"})),assert.sameValue(void 0,asyncTest(function(){return Promise.resolve(!0)})),assert.sameValue(void 0,asyncTest(function(){return Promise.reject(new Test262Error("oh no"))}))}().then(()=>{assert.sameValue(doneCalls,4,"asyncTest must call $DONE")}).then(realDone,realDone);



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.7.js


try{var z=x>>=1;throw new Test262Error("#1.1: x >>= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x >>= 1 throw ReferenceError. Actual: "+e)}


try{var z=x>>=1;throw new Test262Error("#1.1: x >>= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x >>= 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.6.js


try{var x=1,z=x<<=y;throw new Test262Error("#1.1: var x = 1; x <<= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x <<= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x<<=y;throw new Test262Error("#1.1: var x = 1; x <<= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x <<= y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.10.js


try{var z=x^=1;throw new Test262Error("#1.1: x ^= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x ^= 1 throw ReferenceError. Actual: "+e)}


try{var z=x^=1;throw new Test262Error("#1.1: x ^= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x ^= 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.6.js


try{var z=x<<=1;throw new Test262Error("#1.1: x <<= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x <<= 1 throw ReferenceError. Actual: "+e)}


try{var z=x<<=1;throw new Test262Error("#1.1: x <<= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x <<= 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.7.js


try{var x=1,z=x>>=y;throw new Test262Error("#1.1: var x = 1; x >>= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x >>= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x>>=y;throw new Test262Error("#1.1: var x = 1; x >>= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x >>= y throw ReferenceError. Actual: "+e)}



test262/test/harness/asyncHelpers-asyncTest-then-resolves.js


var doneCalls=0,realDone=$DONE;globalThis.$DONE=function(noError){doneCalls++,assert.sameValue(noError,void 0,"asyncTest should discard promise's resolved value")};(async function(){asyncTest(function(){return Promise.resolve(null)})})().then(()=>{assert.sameValue(doneCalls,1,"asyncTest called $DONE with undefined"),asyncTest(function(){return Promise.resolve({})})}).then(()=>{assert.sameValue(doneCalls,2,"asyncTest called $DONE with undefined"),asyncTest(function(){return Promise.resolve("hi")})}).then(()=>{assert.sameValue(doneCalls,3,"asyncTest called $DONE with undefined"),asyncTest(function(){return Promise.resolve(10)})}).then(()=>{assert.sameValue(doneCalls,4,"asyncTest called $DONE with undefined"),asyncTest(function(){return{then(res,rej){res(!0)}}})}).then(()=>{assert.sameValue(doneCalls,5,"asyncTest called $DONE with undefined")}).then(realDone,realDone);


var doneCalls=0,realDone=$DONE;globalThis.$DONE=function(noError){doneCalls++,assert.sameValue(noError,void 0,"asyncTest should discard promise's resolved value")},async function(){asyncTest(function(){return Promise.resolve(null)})}().then(()=>{assert.sameValue(doneCalls,1,"asyncTest called $DONE with undefined"),asyncTest(function(){return Promise.resolve({})})}).then(()=>{assert.sameValue(doneCalls,2,"asyncTest called $DONE with undefined"),asyncTest(function(){return Promise.resolve("hi")})}).then(()=>{assert.sameValue(doneCalls,3,"asyncTest called $DONE with undefined"),asyncTest(function(){return Promise.resolve(10)})}).then(()=>{assert.sameValue(doneCalls,4,"asyncTest called $DONE with undefined"),asyncTest(function(){return{then(res,rej){res(!0)}}})}).then(()=>{assert.sameValue(doneCalls,5,"asyncTest called $DONE with undefined")}).then(realDone,realDone);



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.2.js


try{var z=x/=1;throw new Test262Error("#1.1: x /= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x /= 1 throw ReferenceError. Actual: "+e)}


try{var z=x/=1;throw new Test262Error("#1.1: x /= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x /= 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/multiplication/S11.5.1_A2.4_T3.js


try{throw x*(x=1),new Test262Error("#1.1: x * (x = 1) throw ReferenceError. Actual: "+x*(x=1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x * (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x*(x=1),new Test262Error("#1.1: x * (x = 1) throw ReferenceError. Actual: "+x*(x=1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x * (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.3.js


try{var x=1,z=x%=y;throw new Test262Error("#1.1: var x = 1; x %= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x %= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x%=y;throw new Test262Error("#1.1: var x = 1; x %= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x %= y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/multiplication/S11.5.1_A2.1_T3.js


try{throw 1*y,new Test262Error("#1.1: 1 * y throw ReferenceError. Actual: "+1*y)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 * y throw ReferenceError. Actual: "+e)}


try{throw 1*y,new Test262Error("#1.1: 1 * y throw ReferenceError. Actual: "+1*y)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 * y throw ReferenceError. Actual: "+e)}



test262/test/intl402/Locale/prototype/minimize/removing-likely-subtags-first-adds-likely-subtags.js


var testDataMinimal={"und":"en","und-Thai":"th","und-419":"es-419","und-150":"en-150","und-AT":"de-AT","aae-Latn-IT":"aae","aae-Thai-CO":"aae-Thai-CO","und-CW":"pap","und-US":"en","zh-Hant":"zh-TW","zh-Hani":"zh-Hani"};for(const[tag,minimal]of Object.entries(testDataMinimal))assert.sameValue(new Intl.Locale(minimal).minimize().toString(),minimal,`"${minimal}" should be minimal`),assert.sameValue(new Intl.Locale(tag).minimize().toString(),minimal,`"${tag}".minimize() should be "${minimal}"`);


var testDataMinimal={und:"en","und-Thai":"th","und-419":"es-419","und-150":"en-150","und-AT":"de-AT","aae-Latn-IT":"aae","aae-Thai-CO":"aae-Thai-CO","und-CW":"pap","und-US":"en","zh-Hant":"zh-TW","zh-Hani":"zh-Hani"};for(const[tag,minimal]of Object.entries(testDataMinimal))assert.sameValue(new Intl.Locale(minimal).minimize().toString(),minimal,`"${minimal}" should be minimal`),assert.sameValue(new Intl.Locale(tag).minimize().toString(),minimal,`"${tag}".minimize() should be "${minimal}"`);



test262/test/language/expressions/multiplication/S11.5.1_A2.1_T2.js


try{throw x*1,new Test262Error("#1.1: x * 1 throw ReferenceError. Actual: "+x*1)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x * 1 throw ReferenceError. Actual: "+e)}


try{throw x*1,new Test262Error("#1.1: x * 1 throw ReferenceError. Actual: "+x*1)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x * 1 throw ReferenceError. Actual: "+e)}



test262/test/built-ins/Object/defineProperty/15.2.3.6-4-51.js


var obj={"property":1};Object.defineProperty(obj,"property",{value:1001,writable:!1,enumerable:!1,configurable:!1});verifyProperty(obj,"property",{value:1001,writable:!1,enumerable:!1,configurable:!1});


var obj={property:1};Object.defineProperty(obj,"property",{value:1001,writable:!1,enumerable:!1,configurable:!1}),verifyProperty(obj,"property",{value:1001,writable:!1,enumerable:!1,configurable:!1});



test262/test/intl402/Locale/constructor-tag.js


const validLanguageTags={"eN":"en","en-gb":"en-GB","IT-LATN-iT":"it-Latn-IT","th-th-u-nu-thai":"th-TH-u-nu-thai","en-x-u-foo":"en-x-u-foo","en-a-bar-x-u-foo":"en-a-bar-x-u-foo","en-x-u-foo-a-bar":"en-x-u-foo-a-bar","en-u-baz-a-bar-x-u-foo":"en-a-bar-u-baz-x-u-foo","DE-1996":"de-1996","sl-ROZAJ-BISKE-1994":"sl-1994-biske-rozaj","zh-latn-pinyin-pinyin2":"zh-Latn-pinyin-pinyin2"};for(const[langtag,canonical]of Object.entries(validLanguageTags))assert.sameValue(new Intl.Locale(canonical).toString(),canonical,`new Intl.Locale("${canonical}").toString() returns "${canonical}"`),assert.sameValue(new Intl.Locale(langtag).toString(),canonical,`new Intl.Locale("${langtag}").toString() returns "${canonical}"`);const invalidLanguageTags=["X-u-foo","Flob","ZORK","Blah-latn","QuuX-latn-us","SPAM-gb-x-Sausages-BACON-eggs"];for(const langtag of invalidLanguageTags)assert.throws(RangeError,()=>new Intl.Locale(langtag));


const validLanguageTags={eN:"en","en-gb":"en-GB","IT-LATN-iT":"it-Latn-IT","th-th-u-nu-thai":"th-TH-u-nu-thai","en-x-u-foo":"en-x-u-foo","en-a-bar-x-u-foo":"en-a-bar-x-u-foo","en-x-u-foo-a-bar":"en-x-u-foo-a-bar","en-u-baz-a-bar-x-u-foo":"en-a-bar-u-baz-x-u-foo","DE-1996":"de-1996","sl-ROZAJ-BISKE-1994":"sl-1994-biske-rozaj","zh-latn-pinyin-pinyin2":"zh-Latn-pinyin-pinyin2"};for(const[langtag,canonical]of Object.entries(validLanguageTags))assert.sameValue(new Intl.Locale(canonical).toString(),canonical,`new Intl.Locale("${canonical}").toString() returns "${canonical}"`),assert.sameValue(new Intl.Locale(langtag).toString(),canonical,`new Intl.Locale("${langtag}").toString() returns "${canonical}"`);const invalidLanguageTags=["X-u-foo","Flob","ZORK","Blah-latn","QuuX-latn-us","SPAM-gb-x-Sausages-BACON-eggs"];for(const langtag of invalidLanguageTags)assert.throws(RangeError,()=>new Intl.Locale(langtag));



test262/test/language/expressions/unary-minus/S11.4.7_A2.1_T2.js


try{throw-x,new Test262Error("#1.1: -x throw ReferenceError. Actual: "+-x)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: -x throw ReferenceError. Actual: "+e)}


try{throw-x,new Test262Error("#1.1: -x throw ReferenceError. Actual: "+-x)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: -x throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/unary-minus/S11.4.7_A1.js


if(eval("-	1")!==-1)throw new Test262Error("#1: -\\u00091 === -1");if(eval("-\v1")!==-1)throw new Test262Error("#2: -\\u000B1 === -1");if(eval("-\f1")!==-1)throw new Test262Error("#3: -\\u000C1 === -1");if(eval("- 1")!==-1)throw new Test262Error("#4: -\\u0020 === -1");if(eval("-\xA01")!==-1)throw new Test262Error("#5: -\\u00A01 === -1");if(eval("-\n1")!==-1)throw new Test262Error("#6: -\\u000A1 === -1");if(eval("-\r1")!==-1)throw new Test262Error("#7: -\\u000D1 === -1");if(eval("-\u20281")!==-1)throw new Test262Error("#8: -\\u20281 === -1");if(eval("-\u20291")!==-1)throw new Test262Error("#9: -\\u20291 === -1");if(eval("-	\v\f \xA0\n\r\u2028\u20291")!==-1)throw new Test262Error("#10: -\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291 === -1");


if(eval("-	1")!==-1)throw new Test262Error("#1: -\\u00091 === -1");if(eval("-\v1")!==-1)throw new Test262Error("#2: -\\u000B1 === -1");if(eval("-\f1")!==-1)throw new Test262Error("#3: -\\u000C1 === -1");if(eval("- 1")!==-1)throw new Test262Error("#4: -\\u0020 === -1");if(eval("-\xA01")!==-1)throw new Test262Error("#5: -\\u00A01 === -1");if(eval(`-
1`)!==-1)throw new Test262Error("#6: -\\u000A1 === -1");if(eval("-\r1")!==-1)throw new Test262Error("#7: -\\u000D1 === -1");if(eval("-\u20281")!==-1)throw new Test262Error("#8: -\\u20281 === -1");if(eval("-\u20291")!==-1)throw new Test262Error("#9: -\\u20291 === -1");if(eval(`-	\v\f \xA0
\r\u2028\u20291`)!==-1)throw new Test262Error("#10: -\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291 === -1");



test262/test/language/expressions/bitwise-or/S11.10.3_A2.1_T2.js


try{throw x|1,new Test262Error("#1.1: x | 1 throw ReferenceError. Actual: "+(x|1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x | 1 throw ReferenceError. Actual: "+e)}


try{throw x|1,new Test262Error("#1.1: x | 1 throw ReferenceError. Actual: "+(x|1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x | 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/bitwise-or/S11.10.3_A2.1_T3.js


try{throw 1|y,new Test262Error("#1.1: 1 | y throw ReferenceError. Actual: "+(1|y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 | y throw ReferenceError. Actual: "+e)}


try{throw 1|y,new Test262Error("#1.1: 1 | y throw ReferenceError. Actual: "+(1|y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 | y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/bitwise-or/S11.10.3_A2.4_T3.js


try{throw x|(x=1),new Test262Error("#1.1: x | (x = 1) throw ReferenceError. Actual: "+(x|(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x | (x = 1) throw ReferenceError. Actual: "+e)}if(((y=1)|y)!==1)throw new Test262Error("#2: ((y = 1) | y) === 1. Actual: "+((y=1)|y));


try{throw x|(x=1),new Test262Error("#1.1: x | (x = 1) throw ReferenceError. Actual: "+(x|(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x | (x = 1) throw ReferenceError. Actual: "+e)}if(((y=1)|y)!==1)throw new Test262Error("#2: ((y = 1) | y) === 1. Actual: "+((y=1)|y));



test262/test/language/expressions/void/S11.4.2_A1.js


if(eval("void	0")!==void 0)throw new Test262Error("#1: void\\u00090 === undefined");if(eval("void\v0")!==void 0)throw new Test262Error("#2: void\\u000B0 === undefined");if(eval("void\f0")!==void 0)throw new Test262Error("#3: void\\u000C0 === undefined");if(eval("void 0")!==void 0)throw new Test262Error("#4: void\\u00200 === undefined");if(eval("void\xA00")!==void 0)throw new Test262Error("#5: void\\u00A00 === undefined");if(eval("void\n0")!==void 0)throw new Test262Error("#6: void\\u000A0 === undefined");if(eval("void\r0")!==void 0)throw new Test262Error("#7: void\\u000D0 === undefined");if(eval("void\u20280")!==void 0)throw new Test262Error("#8: void\\u20280 === undefined");if(eval("void\u20290")!==void 0)throw new Test262Error("#9: void\\u20290 === undefined");if(eval("void	\v\f \xA0\n\r\u2028\u20290")!==void 0)throw new Test262Error("#10: void\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20290 === undefined");


if(eval("void	0")!==void 0)throw new Test262Error("#1: void\\u00090 === undefined");if(eval("void\v0")!==void 0)throw new Test262Error("#2: void\\u000B0 === undefined");if(eval("void\f0")!==void 0)throw new Test262Error("#3: void\\u000C0 === undefined");if(eval("void 0")!==void 0)throw new Test262Error("#4: void\\u00200 === undefined");if(eval("void\xA00")!==void 0)throw new Test262Error("#5: void\\u00A00 === undefined");if(eval(`void
0`)!==void 0)throw new Test262Error("#6: void\\u000A0 === undefined");if(eval("void\r0")!==void 0)throw new Test262Error("#7: void\\u000D0 === undefined");if(eval("void\u20280")!==void 0)throw new Test262Error("#8: void\\u20280 === undefined");if(eval("void\u20290")!==void 0)throw new Test262Error("#9: void\\u20290 === undefined");if(eval(`void	\v\f \xA0
\r\u2028\u20290`)!==void 0)throw new Test262Error("#10: void\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20290 === undefined");



test262/test/language/expressions/less-than-or-equal/S11.8.3_A2.4_T3.js


try{throw x<=(x=1),new Test262Error("#1.1: x <= (x = 1) throw ReferenceError. Actual: "+(x<=(x=1)))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x <= (x = 1) throw ReferenceError. Actual: "+e)}


try{throw x<=(x=1),new Test262Error("#1.1: x <= (x = 1) throw ReferenceError. Actual: "+(x<=(x=1)))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x <= (x = 1) throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/new/S11.2.2_A1.2.js


if(eval("new	Number()")!=0)throw new Test262Error("#1: new\\u0009Number == 0");if(eval("new\vNumber()")!=0)throw new Test262Error("#2: new\\u000BNumber == 0");if(eval("new\fNumber()")!=0)throw new Test262Error("#3: new\\u000CNumber == 0");if(eval("new Number()")!=0)throw new Test262Error("#4: new\\u0020Number == 0");if(eval("new\xA0Number()")!=0)throw new Test262Error("#5: new\\u00A0Number == 0");if(eval("new\nNumber()")!=0)throw new Test262Error("#6: new\\u000ANumber == 0");if(eval("new\rNumber()")!=0)throw new Test262Error("#7: new\\u000DNumber == 0");if(eval("new\u2028Number()")!=0)throw new Test262Error("#8: new\\u2028Number == 0");if(eval("new\u2029Number()")!=0)throw new Test262Error("#9: new\\u2029Number == 0");if(eval("new	\v\f \xA0\n\r\u2028\u2029Number()")!=0)throw new Test262Error("#10: new\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029Number == 0");


if(eval("new	Number()")!=0)throw new Test262Error("#1: new\\u0009Number == 0");if(eval("new\vNumber()")!=0)throw new Test262Error("#2: new\\u000BNumber == 0");if(eval("new\fNumber()")!=0)throw new Test262Error("#3: new\\u000CNumber == 0");if(eval("new Number()")!=0)throw new Test262Error("#4: new\\u0020Number == 0");if(eval("new\xA0Number()")!=0)throw new Test262Error("#5: new\\u00A0Number == 0");if(eval(`new
Number()`)!=0)throw new Test262Error("#6: new\\u000ANumber == 0");if(eval("new\rNumber()")!=0)throw new Test262Error("#7: new\\u000DNumber == 0");if(eval("new\u2028Number()")!=0)throw new Test262Error("#8: new\\u2028Number == 0");if(eval("new\u2029Number()")!=0)throw new Test262Error("#9: new\\u2029Number == 0");if(eval(`new	\v\f \xA0
\r\u2028\u2029Number()`)!=0)throw new Test262Error("#10: new\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029Number == 0");



test262/test/language/expressions/less-than-or-equal/S11.8.3_A2.1_T2.js


try{throw x<=1,new Test262Error("#1.1: x <= 1 throw ReferenceError. Actual: "+(x<=1))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x <= 1 throw ReferenceError. Actual: "+e)}


try{throw x<=1,new Test262Error("#1.1: x <= 1 throw ReferenceError. Actual: "+(x<=1))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x <= 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/less-than-or-equal/S11.8.3_A4.11.js


var x="x";if(x<=x+"y"!==!0)throw new Test262Error('#6: var x = "x"; (x <= x + "y") === true');


var x="x";if(!(x<=x+"y"))throw new Test262Error('#6: var x = "x"; (x <= x + "y") === true');



test262/test/language/expressions/less-than-or-equal/S11.8.3_A2.1_T3.js


try{throw 1<=y,new Test262Error("#1.1: 1 <= y throw ReferenceError. Actual: "+(1<=y))}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: 1 <= y throw ReferenceError. Actual: "+e)}


try{throw 1<=y,new Test262Error("#1.1: 1 <= y throw ReferenceError. Actual: "+(1<=y))}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: 1 <= y throw ReferenceError. Actual: "+e)}



test262/test/intl402/DurationFormat/constructor-options-style-invalid.js


const invalidOptions=[null,1,"","Long","LONG","long\0","Short","SHORT","short\0","Narrow","NARROW","narrow\0","Digital","DIGITAL","digital\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.DurationFormat([],{"style":invalidOption})},`${invalidOption} is an invalid style option value`);


const invalidOptions=[null,1,"","Long","LONG","long\0","Short","SHORT","short\0","Narrow","NARROW","narrow\0","Digital","DIGITAL","digital\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.DurationFormat([],{style:invalidOption})},`${invalidOption} is an invalid style option value`);



test262/test/language/expressions/less-than-or-equal/S11.8.3_A2.4_T4.js


if((y=1)<=y!==!0)throw new Test262Error("#1: (y = 1) <= y === true");


if(!((y=1)<=y))throw new Test262Error("#1: (y = 1) <= y === true");



test262/test/language/expressions/new/S11.2.2_A1.1.js


if(eval("new	Number")!=0)throw new Test262Error("#1: new\\u0009Number == 0");if(eval("new\vNumber")!=0)throw new Test262Error("#2: new\\u000BNumber == 0");if(eval("new\fNumber")!=0)throw new Test262Error("#3: new\\u000CNumber == 0");if(eval("new Number")!=0)throw new Test262Error("#4: new\\u0020Number == 0");if(eval("new\xA0Number")!=0)throw new Test262Error("#5: new\\u00A0Number == 0");if(eval("new\nNumber")!=0)throw new Test262Error("#6: new\\u000ANumber == 0");if(eval("new\rNumber")!=0)throw new Test262Error("#7: new\\u000DNumber == 0");if(eval("new\u2028Number")!=0)throw new Test262Error("#8: new\\u2028Number == 0");if(eval("new\u2029Number")!=0)throw new Test262Error("#9: new\\u2029Number == 0");if(eval("new	\v\f \xA0\n\r\u2028\u2029Number")!=0)throw new Test262Error("#10: new\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029Number == 0");


if(eval("new	Number")!=0)throw new Test262Error("#1: new\\u0009Number == 0");if(eval("new\vNumber")!=0)throw new Test262Error("#2: new\\u000BNumber == 0");if(eval("new\fNumber")!=0)throw new Test262Error("#3: new\\u000CNumber == 0");if(eval("new Number")!=0)throw new Test262Error("#4: new\\u0020Number == 0");if(eval("new\xA0Number")!=0)throw new Test262Error("#5: new\\u00A0Number == 0");if(eval(`new
Number`)!=0)throw new Test262Error("#6: new\\u000ANumber == 0");if(eval("new\rNumber")!=0)throw new Test262Error("#7: new\\u000DNumber == 0");if(eval("new\u2028Number")!=0)throw new Test262Error("#8: new\\u2028Number == 0");if(eval("new\u2029Number")!=0)throw new Test262Error("#9: new\\u2029Number == 0");if(eval(`new	\v\f \xA0
\r\u2028\u2029Number`)!=0)throw new Test262Error("#10: new\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029Number == 0");



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.4.js


try{var x=1,z=x+=y;throw new Test262Error("#1.1: var x = 1; x += y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x += y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x+=y;throw new Test262Error("#1.1: var x = 1; x += y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x += y throw ReferenceError. Actual: "+e)}



test262/test/intl402/ListFormat/prototype/format/iterable-iteratorclose.js


let lf=new Intl.ListFormat,iterator_close_call_return={[Symbol.iterator](){return this},"return"(){this.returnIsCalled=!0,assert.sameValue(this.count,3)},count:0,returnIsCalled:!1,next(){return this.count++,this.count==3?{done:!1,value:3}:this.count<5?{done:!1,value:String(this.count)}:{done:!0}}};assert.throws(TypeError,()=>{lf.format(iterator_close_call_return)},"Iterable yielded 3 which is not a string");assert.sameValue(iterator_close_call_return.count,3);assert.sameValue(iterator_close_call_return.returnIsCalled,!0);


let lf=new Intl.ListFormat,iterator_close_call_return={[Symbol.iterator](){return this},return(){this.returnIsCalled=!0,assert.sameValue(this.count,3)},count:0,returnIsCalled:!1,next(){return this.count++,this.count==3?{done:!1,value:3}:this.count<5?{done:!1,value:String(this.count)}:{done:!0}}};assert.throws(TypeError,()=>{lf.format(iterator_close_call_return)},"Iterable yielded 3 which is not a string"),assert.sameValue(iterator_close_call_return.count,3),assert.sameValue(iterator_close_call_return.returnIsCalled,!0);



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.1.js


try{var z=x*=1;throw new Test262Error("#1.1: x *= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x *= 1 throw ReferenceError. Actual: "+e)}


try{var z=x*=1;throw new Test262Error("#1.1: x *= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x *= 1 throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.9.js


try{var z=x&=1;throw new Test262Error("#1.1: x &= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x &= 1 throw ReferenceError. Actual: "+e)}


try{var z=x&=1;throw new Test262Error("#1.1: x &= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x &= 1 throw ReferenceError. Actual: "+e)}



test262/test/intl402/ListFormat/constructor/supportedLocalesOf/options-localeMatcher-invalid.js


assert.sameValue(typeof Intl.ListFormat.supportedLocalesOf,"function","Should support Intl.ListFormat.supportedLocalesOf.");const invalidOptions=[null,1,"","Lookup","LOOKUP","lookup\0","Best fit","BEST FIT","best\xA0fit"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){Intl.ListFormat.supportedLocalesOf([],{"localeMatcher":invalidOption})},`${invalidOption} is an invalid localeMatcher option value`);


assert.sameValue(typeof Intl.ListFormat.supportedLocalesOf,"function","Should support Intl.ListFormat.supportedLocalesOf.");const invalidOptions=[null,1,"","Lookup","LOOKUP","lookup\0","Best fit","BEST FIT","best\xA0fit"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){Intl.ListFormat.supportedLocalesOf([],{localeMatcher:invalidOption})},`${invalidOption} is an invalid localeMatcher option value`);



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.11.js


try{var x=1,z=x|=y;throw new Test262Error("#1.1: var x = 1; x |= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x |= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x|=y;throw new Test262Error("#1.1: var x = 1; x |= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x |= y throw ReferenceError. Actual: "+e)}



test262/test/intl402/ListFormat/constructor/supportedLocalesOf/options-undefined.js


assert.sameValue(typeof Intl.ListFormat.supportedLocalesOf,"function","Should support Intl.ListFormat.supportedLocalesOf."),Object.defineProperties(Object.prototype,{"localeMatcher":{get(){throw new Error("Should not call localeMatcher getter")}}}),assert.sameValue(Array.isArray(Intl.ListFormat.supportedLocalesOf()),!0,"No arguments"),assert.sameValue(Array.isArray(Intl.ListFormat.supportedLocalesOf([])),!0,"One argument"),assert.sameValue(Array.isArray(Intl.ListFormat.supportedLocalesOf([],void 0)),!0,"Two arguments");


assert.sameValue(typeof Intl.ListFormat.supportedLocalesOf,"function","Should support Intl.ListFormat.supportedLocalesOf."),Object.defineProperties(Object.prototype,{localeMatcher:{get(){throw new Error("Should not call localeMatcher getter")}}}),assert.sameValue(Array.isArray(Intl.ListFormat.supportedLocalesOf()),!0,"No arguments"),assert.sameValue(Array.isArray(Intl.ListFormat.supportedLocalesOf([])),!0,"One argument"),assert.sameValue(Array.isArray(Intl.ListFormat.supportedLocalesOf([],void 0)),!0,"Two arguments");



test262/test/built-ins/encodeURI/S15.1.3.3_A4_T3.js


if(encodeURI("http://unipro.ru/\nabout")!=="http://unipro.ru/%0Aabout"&&encodeURI("http://unipro.ru/\nabout")!=="http://unipro.ru/%0aabout")throw new Test262Error("#1: http://unipro.ru/\\nabout");if(encodeURI("http://unipro.ru/\vabout")!=="http://unipro.ru/%0Babout"&&encodeURI("http://unipro.ru/\vabout")!=="http://unipro.ru/%0babout")throw new Test262Error("#2: http://unipro.ru/\\vabout");if(encodeURI("http://unipro.ru/\fabout")!=="http://unipro.ru/%0Cabout"&&encodeURI("http://unipro.ru/\fabout")!=="http://unipro.ru/%0cabout")throw new Test262Error("#3: http://unipro.ru/\\fabout");if(encodeURI("http://unipro.ru/\rabout")!=="http://unipro.ru/%0Dabout"&&encodeURI("http://unipro.ru/\rabout")!=="http://unipro.ru/%0dabout")throw new Test262Error("#4: http://unipro.ru/\\rabout");


if(encodeURI(`http://unipro.ru/
about`)!=="http://unipro.ru/%0Aabout"&&encodeURI(`http://unipro.ru/
about`)!=="http://unipro.ru/%0aabout")throw new Test262Error("#1: http://unipro.ru/\\nabout");if(encodeURI("http://unipro.ru/\vabout")!=="http://unipro.ru/%0Babout"&&encodeURI("http://unipro.ru/\vabout")!=="http://unipro.ru/%0babout")throw new Test262Error("#2: http://unipro.ru/\\vabout");if(encodeURI("http://unipro.ru/\fabout")!=="http://unipro.ru/%0Cabout"&&encodeURI("http://unipro.ru/\fabout")!=="http://unipro.ru/%0cabout")throw new Test262Error("#3: http://unipro.ru/\\fabout");if(encodeURI("http://unipro.ru/\rabout")!=="http://unipro.ru/%0Dabout"&&encodeURI("http://unipro.ru/\rabout")!=="http://unipro.ru/%0dabout")throw new Test262Error("#4: http://unipro.ru/\\rabout");



test262/test/intl402/ListFormat/constructor/constructor/options-style-invalid.js


const invalidOptions=[null,1,"","Long","LONG","long\0","Short","SHORT","short\0","Narrow","NARROW","narrow\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.ListFormat([],{"style":invalidOption})},`${invalidOption} is an invalid style option value`);


const invalidOptions=[null,1,"","Long","LONG","long\0","Short","SHORT","short\0","Narrow","NARROW","narrow\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.ListFormat([],{style:invalidOption})},`${invalidOption} is an invalid style option value`);



test262/test/intl402/ListFormat/constructor/constructor/options-type-invalid.js


const invalidOptions=[null,1,"","Conjunction","CONJUNCTION","conjunction\0","Disjunction","DISJUNCTION","disjunction\0","Unit","UNIT","unit\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.ListFormat([],{"type":invalidOption})},`${invalidOption} is an invalid type option value`);


const invalidOptions=[null,1,"","Conjunction","CONJUNCTION","conjunction\0","Disjunction","DISJUNCTION","disjunction\0","Unit","UNIT","unit\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.ListFormat([],{type:invalidOption})},`${invalidOption} is an invalid type option value`);



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.8.js


try{var x=1,z=x>>>=y;throw new Test262Error("#1.1: var x = 1; x >>>= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x >>>= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x>>>=y;throw new Test262Error("#1.1: var x = 1; x >>>= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x >>>= y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.1.js


try{var x=1,z=x*=y;throw new Test262Error("#1.1: var x = 1; x *= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x *= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x*=y;throw new Test262Error("#1.1: var x = 1; x *= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x *= y throw ReferenceError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.4.js


try{var z=x+=1;throw new Test262Error("#1.1: x += 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x += 1 throw ReferenceError. Actual: "+e)}


try{var z=x+=1;throw new Test262Error("#1.1: x += 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x += 1 throw ReferenceError. Actual: "+e)}



test262/test/built-ins/encodeURI/S15.1.3.3_A5.7.js


try{throw new encodeURI,new Test262Error("#1.1: new encodeURI() throw TypeError. Actual: "+new encodeURI)}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: new encodeURI() throw TypeError. Actual: "+e)}


try{throw new encodeURI,new Test262Error("#1.1: new encodeURI() throw TypeError. Actual: "+new encodeURI)}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: new encodeURI() throw TypeError. Actual: "+e)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.5.js


try{var x=1,z=x-=y;throw new Test262Error("#1.1: var x = 1; x -= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x -= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x-=y;throw new Test262Error("#1.1: var x = 1; x -= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x -= y throw ReferenceError. Actual: "+e)}



test262/test/built-ins/StringIteratorPrototype/next/next-iteration-surrogate-pairs.js


var lo="\\ud834",hi="\\udf06",pair=lo+hi,string="a"+pair+"b"+lo+pair+hi+lo,iterator=string[Symbol.iterator](),result;result=iterator.next();assert.sameValue(result.value,"a","First normal code point `value`");assert.sameValue(result.done,!1,"First normal code point `done` flag");result=iterator.next();assert.sameValue(result.value,pair,"Surrogate pair `value` (between normal code points)");assert.sameValue(result.done,!1,"Surrogate pair `done` flag (between normal code points)");result=iterator.next();assert.sameValue(result.value,"b","Second normal code point `value`");assert.sameValue(result.done,!1,"Second normal code point `done` flag");result=iterator.next();assert.sameValue(result.value,lo,"Lone lower code point `value` (following normal code point)");assert.sameValue(result.done,!1,"Lone lower code point `done` flag (following normal code point)");result=iterator.next();assert.sameValue(result.value,pair,"Surrogate pair `value` (between lone lower- and upper- code points)");assert.sameValue(result.done,!1,"Surrogate pair `done` flag (between lone lower- and upper- code points)");result=iterator.next();assert.sameValue(result.value,hi,"Lone upper code point `value`");assert.sameValue(result.done,!1,"Lone upper code point `done` flag");result=iterator.next();assert.sameValue(result.value,lo,"Lone lower code point `value` (following lone upper code point)");assert.sameValue(result.done,!1,"Lone lower code point `done` flag (following lone upper code point)");result=iterator.next();assert.sameValue(result.value,void 0,"Exhausted result `value`");assert.sameValue(result.done,!0,"Exhausted result `done` flag");result=iterator.next();assert.sameValue(result.value,void 0,"Exhausted result `value` (repeated request)");assert.sameValue(result.done,!0,"Exhausted result `done` flag (repeated request");


var lo="\uD834",hi="\uDF06",pair=lo+hi,string="a"+pair+"b"+lo+pair+hi+lo,iterator=string[Symbol.iterator](),result;result=iterator.next(),assert.sameValue(result.value,"a","First normal code point `value`"),assert.sameValue(result.done,!1,"First normal code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,pair,"Surrogate pair `value` (between normal code points)"),assert.sameValue(result.done,!1,"Surrogate pair `done` flag (between normal code points)"),result=iterator.next(),assert.sameValue(result.value,"b","Second normal code point `value`"),assert.sameValue(result.done,!1,"Second normal code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,lo,"Lone lower code point `value` (following normal code point)"),assert.sameValue(result.done,!1,"Lone lower code point `done` flag (following normal code point)"),result=iterator.next(),assert.sameValue(result.value,pair,"Surrogate pair `value` (between lone lower- and upper- code points)"),assert.sameValue(result.done,!1,"Surrogate pair `done` flag (between lone lower- and upper- code points)"),result=iterator.next(),assert.sameValue(result.value,hi,"Lone upper code point `value`"),assert.sameValue(result.done,!1,"Lone upper code point `done` flag"),result=iterator.next(),assert.sameValue(result.value,lo,"Lone lower code point `value` (following lone upper code point)"),assert.sameValue(result.done,!1,"Lone lower code point `done` flag (following lone upper code point)"),result=iterator.next(),assert.sameValue(result.value,void 0,"Exhausted result `value`"),assert.sameValue(result.done,!0,"Exhausted result `done` flag"),result=iterator.next(),assert.sameValue(result.value,void 0,"Exhausted result `value` (repeated request)"),assert.sameValue(result.done,!0,"Exhausted result `done` flag (repeated request");



test262/test/intl402/Intl/getCanonicalLocales/unicode-ext-canonicalize-calendar.js


const testData={"ethiopic-amete-alem":"ethioaa","islamicc":"islamic-civil"};for(let[alias,name]of Object.entries(testData)){let tag="und-u-ca-"+alias,canonical="und-u-ca-"+name;assert.sameValue(isCanonicalizedStructurallyValidLanguageTag(tag),!1,'"'+tag+`" isn't a canonical language tag.`);assert(isCanonicalizedStructurallyValidLanguageTag(canonical),'"'+canonical+'" is a canonical and structurally valid language tag.');let result=Intl.getCanonicalLocales(tag);assert.sameValue(result.length,1);assert.sameValue(result[0],canonical)}


const testData={"ethiopic-amete-alem":"ethioaa",islamicc:"islamic-civil"};for(let[alias,name]of Object.entries(testData)){let tag="und-u-ca-"+alias,canonical="und-u-ca-"+name;assert.sameValue(isCanonicalizedStructurallyValidLanguageTag(tag),!1,'"'+tag+`" isn't a canonical language tag.`),assert(isCanonicalizedStructurallyValidLanguageTag(canonical),'"'+canonical+'" is a canonical and structurally valid language tag.');let result=Intl.getCanonicalLocales(tag);assert.sameValue(result.length,1),assert.sameValue(result[0],canonical)}



test262/test/intl402/Intl/getCanonicalLocales/Locale-object.js


assert.compareArray(Intl.getCanonicalLocales(["fr-CA",new Intl.Locale("en-gb-oxendict"),"de",new Intl.Locale("jp",{"calendar":"gregory"}),"zh",new Intl.Locale("fr-CA")]),["fr-CA","en-GB-oxendict","de","jp-u-ca-gregory","zh"]);


assert.compareArray(Intl.getCanonicalLocales(["fr-CA",new Intl.Locale("en-gb-oxendict"),"de",new Intl.Locale("jp",{calendar:"gregory"}),"zh",new Intl.Locale("fr-CA")]),["fr-CA","en-GB-oxendict","de","jp-u-ca-gregory","zh"]);



test262/test/intl402/Intl/getCanonicalLocales/unicode-ext-canonicalize-measurement-system.js


const testData={"imperial":"uksystem"};for(let[alias,name]of Object.entries(testData)){let tag="und-u-ms-"+alias,canonical="und-u-ms-"+name;assert.sameValue(isCanonicalizedStructurallyValidLanguageTag(tag),!1,'"'+tag+`" isn't a canonical language tag.`);assert(isCanonicalizedStructurallyValidLanguageTag(canonical),'"'+canonical+'" is a canonical and structurally valid language tag.');let result=Intl.getCanonicalLocales(tag);assert.sameValue(result.length,1);assert.sameValue(result[0],canonical)}


const testData={imperial:"uksystem"};for(let[alias,name]of Object.entries(testData)){let tag="und-u-ms-"+alias,canonical="und-u-ms-"+name;assert.sameValue(isCanonicalizedStructurallyValidLanguageTag(tag),!1,'"'+tag+`" isn't a canonical language tag.`),assert(isCanonicalizedStructurallyValidLanguageTag(canonical),'"'+canonical+'" is a canonical and structurally valid language tag.');let result=Intl.getCanonicalLocales(tag);assert.sameValue(result.length,1),assert.sameValue(result[0],canonical)}



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T3.8.js


try{var z=x>>>=1;throw new Test262Error("#1.1: x >>>= 1 throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: x >>>= 1 throw ReferenceError. Actual: "+e)}


try{var z=x>>>=1;throw new Test262Error("#1.1: x >>>= 1 throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: x >>>= 1 throw ReferenceError. Actual: "+e)}



test262/test/intl402/NumberFormat/test-option-style.js


testOption(Intl.NumberFormat,"style","string",["decimal","percent","currency"],"decimal",{extra:{"currency":{currency:"CNY"}}});


testOption(Intl.NumberFormat,"style","string",["decimal","percent","currency"],"decimal",{extra:{currency:{currency:"CNY"}}});



test262/test/language/expressions/compound-assignment/S11.13.2_A2.1_T2.10.js


try{var x=1,z=x^=y;throw new Test262Error("#1.1: var x = 1; x ^= y throw ReferenceError. Actual: "+z)}catch(e){if(e instanceof ReferenceError!==!0)throw new Test262Error("#1.2: var x = 1; x ^= y throw ReferenceError. Actual: "+e)}


try{var x=1,z=x^=y;throw new Test262Error("#1.1: var x = 1; x ^= y throw ReferenceError. Actual: "+z)}catch(e){if(!(e instanceof ReferenceError))throw new Test262Error("#1.2: var x = 1; x ^= y throw ReferenceError. Actual: "+e)}



test262/test/built-ins/String/prototype/toUpperCase/S15.5.4.18_A7.js


var __FACTORY=String.prototype.toUpperCase;try{var __instance=new __FACTORY;throw new Test262Error('#1: var __FACTORY = String.prototype.toUpperCase; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error('#1.1: var __FACTORY = String.prototype.toUpperCase; "__instance = new __FACTORY" throw a TypeError. Actual: '+e)}


var __FACTORY=String.prototype.toUpperCase;try{var __instance=new __FACTORY;throw new Test262Error('#1: var __FACTORY = String.prototype.toUpperCase; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(!(e instanceof TypeError))throw new Test262Error('#1.1: var __FACTORY = String.prototype.toUpperCase; "__instance = new __FACTORY" throw a TypeError. Actual: '+e)}



test262/test/intl402/ListFormat/prototype/formatToParts/iterable-iteratorclose.js


let lf=new Intl.ListFormat,iterator_close_call_return={[Symbol.iterator](){return this},"return"(){this.returnIsCalled=!0,assert.sameValue(this.count,3)},count:0,returnIsCalled:!1,next(){return this.count++,this.count==3?{done:!1,value:3}:this.count<5?{done:!1,value:String(this.count)}:{done:!0}}};assert.throws(TypeError,()=>{lf.formatToParts(iterator_close_call_return)},"Iterable yielded 3 which is not a string");assert.sameValue(iterator_close_call_return.count,3);assert.sameValue(iterator_close_call_return.returnIsCalled,!0);


let lf=new Intl.ListFormat,iterator_close_call_return={[Symbol.iterator](){return this},return(){this.returnIsCalled=!0,assert.sameValue(this.count,3)},count:0,returnIsCalled:!1,next(){return this.count++,this.count==3?{done:!1,value:3}:this.count<5?{done:!1,value:String(this.count)}:{done:!0}}};assert.throws(TypeError,()=>{lf.formatToParts(iterator_close_call_return)},"Iterable yielded 3 which is not a string"),assert.sameValue(iterator_close_call_return.count,3),assert.sameValue(iterator_close_call_return.returnIsCalled,!0);



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-half-expand.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfExpand",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.2","1.1999":"1.2","1.25":"1.3","0":"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.3"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfExpand",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.2","1.1999":"1.2","1.25":"1.3",0:"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.3"});



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-half-ceil.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfCeil",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.2","1.1999":"1.2","1.25":"1.3","0":"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.1","-1.1999":"-1.2","-1.25":"-1.2"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfCeil",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.2","1.1999":"1.2","1.25":"1.3",0:"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.1","-1.1999":"-1.2","-1.25":"-1.2"});



test262/test/intl402/NumberFormat/ignore-invalid-unicode-ext-values.js


var locales=["ja-JP","zh-Hans-CN","zh-Hant-TW"],input=1234567.89;locales.forEach(function(locale){var defaultNumberFormat=new Intl.NumberFormat([locale]),defaultOptions=defaultNumberFormat.resolvedOptions(),defaultOptionsJSON=JSON.stringify(defaultOptions),defaultLocale=defaultOptions.locale,defaultFormatted=defaultNumberFormat.format(input),keyValues={"cu":["USD","EUR","JPY","CNY","TWD","invalid"],"nu":["native","traditio","finance","invalid"]};Object.getOwnPropertyNames(keyValues).forEach(function(key){keyValues[key].forEach(function(value){var numberFormat=new Intl.NumberFormat([locale+"-u-"+key+"-"+value]),options=numberFormat.resolvedOptions();assert.sameValue(options.locale,defaultLocale,"Locale "+options.locale+" is affected by key "+key+"; value "+value+".");assert.sameValue(JSON.stringify(options),defaultOptionsJSON,"Resolved options "+JSON.stringify(options)+" are affected by key "+key+"; value "+value+".");assert.sameValue(numberFormat.format(input),defaultFormatted,"Formatted value "+numberFormat.format(input)+" is affected by key "+key+"; value "+value+".")})})});


var locales=["ja-JP","zh-Hans-CN","zh-Hant-TW"],input=123456789e-2;locales.forEach(function(locale){var defaultNumberFormat=new Intl.NumberFormat([locale]),defaultOptions=defaultNumberFormat.resolvedOptions(),defaultOptionsJSON=JSON.stringify(defaultOptions),defaultLocale=defaultOptions.locale,defaultFormatted=defaultNumberFormat.format(input),keyValues={cu:["USD","EUR","JPY","CNY","TWD","invalid"],nu:["native","traditio","finance","invalid"]};Object.getOwnPropertyNames(keyValues).forEach(function(key){keyValues[key].forEach(function(value){var numberFormat=new Intl.NumberFormat([locale+"-u-"+key+"-"+value]),options=numberFormat.resolvedOptions();assert.sameValue(options.locale,defaultLocale,"Locale "+options.locale+" is affected by key "+key+"; value "+value+"."),assert.sameValue(JSON.stringify(options),defaultOptionsJSON,"Resolved options "+JSON.stringify(options)+" are affected by key "+key+"; value "+value+"."),assert.sameValue(numberFormat.format(input),defaultFormatted,"Formatted value "+numberFormat.format(input)+" is affected by key "+key+"; value "+value+".")})})});



test262/test/built-ins/String/prototype/charAt/S15.5.4.4_A7.js


var __FACTORY=String.prototype.charAt;try{var __instance=new __FACTORY;throw new Test262Error('#1: __FACTORY = String.prototype.charAt; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: undefined = 1 throw a TypeError. Actual: "+e)}


var __FACTORY=String.prototype.charAt;try{var __instance=new __FACTORY;throw new Test262Error('#1: __FACTORY = String.prototype.charAt; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: undefined = 1 throw a TypeError. Actual: "+e)}



test262/test/intl402/DisplayNames/prototype/resolvedOptions/return-object.js


const dn=new Intl.DisplayNames("en-US",{type:"language"}),options=dn.resolvedOptions(),other=dn.resolvedOptions();assert.notSameValue(options,other,"each call returns a new object");assert.sameValue(Object.getPrototypeOf(options),Object.prototype,"ordinary object #1");assert.sameValue(Object.getPrototypeOf(other),Object.prototype,"ordinary object #2");assert.compareArray(Reflect.ownKeys(options),["locale","style","type","fallback","languageDisplay"],"all the data properties set to this object, in order of creation");verifyProperty(options,"locale",{value:"en-US",writable:!0,enumerable:!0,configurable:!0});const explicit=new Intl.DisplayNames("en",{localeMatcher:"lookup",type:"language"}).resolvedOptions();assert.sameValue(explicit.hasOwnProperty("localeMatcher"),!1,"the localeMatcher option is not set, option was explicitly set");const extra=new Intl.DisplayNames("en",{chaos:"yes",random:"sure","0":42,type:"language"}).resolvedOptions();assert.compareArray(Reflect.ownKeys(extra),["locale","style","type","fallback","languageDisplay"],"extra properties are not reflected in the resolvedOptions");


const dn=new Intl.DisplayNames("en-US",{type:"language"}),options=dn.resolvedOptions(),other=dn.resolvedOptions();assert.notSameValue(options,other,"each call returns a new object"),assert.sameValue(Object.getPrototypeOf(options),Object.prototype,"ordinary object #1"),assert.sameValue(Object.getPrototypeOf(other),Object.prototype,"ordinary object #2"),assert.compareArray(Reflect.ownKeys(options),["locale","style","type","fallback","languageDisplay"],"all the data properties set to this object, in order of creation"),verifyProperty(options,"locale",{value:"en-US",writable:!0,enumerable:!0,configurable:!0});const explicit=new Intl.DisplayNames("en",{localeMatcher:"lookup",type:"language"}).resolvedOptions();assert.sameValue(explicit.hasOwnProperty("localeMatcher"),!1,"the localeMatcher option is not set, option was explicitly set");const extra=new Intl.DisplayNames("en",{chaos:"yes",random:"sure",0:42,type:"language"}).resolvedOptions();assert.compareArray(Reflect.ownKeys(extra),["locale","style","type","fallback","languageDisplay"],"extra properties are not reflected in the resolvedOptions");



test262/test/built-ins/encodeURIComponent/S15.1.3.4_A4_T3.js


if(encodeURIComponent("http://unipro.ru/\nabout")!=="http%3A%2F%2Funipro.ru%2F%0Aabout"&&encodeURIComponent("http://unipro.ru/\nabout")!=="http%3A%2F%2Funipro.ru%2F%0aabout")throw new Test262Error("#1: http://unipro.ru/\\nabout");if(encodeURIComponent("http://unipro.ru/\vabout")!=="http%3A%2F%2Funipro.ru%2F%0Babout"&&encodeURIComponent("http://unipro.ru/\vabout")!=="http%3A%2F%2Funipro.ru%2F%0babout")throw new Test262Error("#2: http://unipro.ru/\\vabout");if(encodeURIComponent("http://unipro.ru/\fabout")!=="http%3A%2F%2Funipro.ru%2F%0Cabout"&&encodeURIComponent("http://unipro.ru/\fabout")!=="http%3A%2F%2Funipro.ru%2F%0cabout")throw new Test262Error("#3: http://unipro.ru/\\fabout");if(encodeURIComponent("http://unipro.ru/\rabout")!=="http%3A%2F%2Funipro.ru%2F%0Dabout"&&encodeURIComponent("http://unipro.ru/\rabout")!=="http%3A%2F%2Funipro.ru%2F%0dabout")throw new Test262Error("#4: http://unipro.ru/\\rabout");


if(encodeURIComponent(`http://unipro.ru/
about`)!=="http%3A%2F%2Funipro.ru%2F%0Aabout"&&encodeURIComponent(`http://unipro.ru/
about`)!=="http%3A%2F%2Funipro.ru%2F%0aabout")throw new Test262Error("#1: http://unipro.ru/\\nabout");if(encodeURIComponent("http://unipro.ru/\vabout")!=="http%3A%2F%2Funipro.ru%2F%0Babout"&&encodeURIComponent("http://unipro.ru/\vabout")!=="http%3A%2F%2Funipro.ru%2F%0babout")throw new Test262Error("#2: http://unipro.ru/\\vabout");if(encodeURIComponent("http://unipro.ru/\fabout")!=="http%3A%2F%2Funipro.ru%2F%0Cabout"&&encodeURIComponent("http://unipro.ru/\fabout")!=="http%3A%2F%2Funipro.ru%2F%0cabout")throw new Test262Error("#3: http://unipro.ru/\\fabout");if(encodeURIComponent("http://unipro.ru/\rabout")!=="http%3A%2F%2Funipro.ru%2F%0Dabout"&&encodeURIComponent("http://unipro.ru/\rabout")!=="http%3A%2F%2Funipro.ru%2F%0dabout")throw new Test262Error("#4: http://unipro.ru/\\rabout");



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-half-even.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfEven",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.2","1.1999":"1.2","1.25":"1.2","0":"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.2"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfEven",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.2","1.1999":"1.2","1.25":"1.2",0:"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.2"});



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-trunc.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"trunc",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.1","1.1999":"1.1","1.25":"1.2","0":"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.1","-1.1999":"-1.1","-1.25":"-1.2"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"trunc",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.1","1.1999":"1.1","1.25":"1.2",0:"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.1","-1.1999":"-1.1","-1.25":"-1.2"});



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-half-floor.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfFloor",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.1","1.1999":"1.2","1.25":"1.2","0":"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.3"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfFloor",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.1","1.1999":"1.2","1.25":"1.2",0:"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.3"});



test262/test/built-ins/encodeURIComponent/S15.1.3.4_A5.7.js


try{throw new encodeURIComponent,new Test262Error("#1.1: new encodeURIComponent() throw TypeError. Actual: "+new encodeURIComponent)}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error("#1.2: new encodeURIComponent() throw TypeError. Actual: "+e)}


try{throw new encodeURIComponent,new Test262Error("#1.1: new encodeURIComponent() throw TypeError. Actual: "+new encodeURIComponent)}catch(e){if(!(e instanceof TypeError))throw new Test262Error("#1.2: new encodeURIComponent() throw TypeError. Actual: "+e)}



test262/test/intl402/Segmenter/prototype/resolvedOptions/order.js


const options=new Intl.Segmenter([],{"granularity":"word"}).resolvedOptions(),expected=["locale","granularity"],actual=Object.getOwnPropertyNames(options);assert(actual.indexOf("locale")>-1,'"locale" is present');for(var i=1;i<expected.length;i++)assert(actual.indexOf(expected[i-1])<actual.indexOf(expected[i]),`"${expected[i-1]}" precedes "${expected[i]}"`);


const options=new Intl.Segmenter([],{granularity:"word"}).resolvedOptions(),expected=["locale","granularity"],actual=Object.getOwnPropertyNames(options);assert(actual.indexOf("locale")>-1,'"locale" is present');for(var i=1;i<expected.length;i++)assert(actual.indexOf(expected[i-1])<actual.indexOf(expected[i]),`"${expected[i-1]}" precedes "${expected[i]}"`);



test262/test/intl402/Segmenter/constructor/supportedLocalesOf/options-undefined.js


assert.sameValue(typeof Intl.Segmenter.supportedLocalesOf,"function","Should support Intl.Segmenter.supportedLocalesOf."),Object.defineProperties(Object.prototype,{"localeMatcher":{get(){throw new Error("Should not call localeMatcher getter")}}}),assert.sameValue(Array.isArray(Intl.Segmenter.supportedLocalesOf()),!0,"No arguments"),assert.sameValue(Array.isArray(Intl.Segmenter.supportedLocalesOf([])),!0,"One argument"),assert.sameValue(Array.isArray(Intl.Segmenter.supportedLocalesOf([],void 0)),!0,"Two arguments");


assert.sameValue(typeof Intl.Segmenter.supportedLocalesOf,"function","Should support Intl.Segmenter.supportedLocalesOf."),Object.defineProperties(Object.prototype,{localeMatcher:{get(){throw new Error("Should not call localeMatcher getter")}}}),assert.sameValue(Array.isArray(Intl.Segmenter.supportedLocalesOf()),!0,"No arguments"),assert.sameValue(Array.isArray(Intl.Segmenter.supportedLocalesOf([])),!0,"One argument"),assert.sameValue(Array.isArray(Intl.Segmenter.supportedLocalesOf([],void 0)),!0,"Two arguments");



test262/test/built-ins/String/prototype/toLowerCase/S15.5.4.16_A7.js


var __FACTORY=String.prototype.toLowerCase;try{var __instance=new __FACTORY;throw new Test262Error('#1: var __FACTORY = String.prototype.toLowerCase; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(e instanceof TypeError!==!0)throw new Test262Error('#1.1: var __FACTORY = String.prototype.toLowerCase; "__instance = new __FACTORY" throws a TypeError. Actual: '+e)}


var __FACTORY=String.prototype.toLowerCase;try{var __instance=new __FACTORY;throw new Test262Error('#1: var __FACTORY = String.prototype.toLowerCase; "__instance = new __FACTORY" lead to throwing exception')}catch(e){if(!(e instanceof TypeError))throw new Test262Error('#1.1: var __FACTORY = String.prototype.toLowerCase; "__instance = new __FACTORY" throws a TypeError. Actual: '+e)}



test262/test/intl402/Segmenter/constructor/supportedLocalesOf/options-localeMatcher-invalid.js


assert.sameValue(typeof Intl.Segmenter.supportedLocalesOf,"function","Should support Intl.Segmenter.supportedLocalesOf.");const invalidOptions=[null,1,"","Lookup","LOOKUP","lookup\0","Best fit","BEST FIT","best\xA0fit"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){Intl.Segmenter.supportedLocalesOf([],{"localeMatcher":invalidOption})},`${invalidOption} is an invalid localeMatcher option value`);


assert.sameValue(typeof Intl.Segmenter.supportedLocalesOf,"function","Should support Intl.Segmenter.supportedLocalesOf.");const invalidOptions=[null,1,"","Lookup","LOOKUP","lookup\0","Best fit","BEST FIT","best\xA0fit"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){Intl.Segmenter.supportedLocalesOf([],{localeMatcher:invalidOption})},`${invalidOption} is an invalid localeMatcher option value`);



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-half-trunc.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfTrunc",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.1","1.1999":"1.2","1.25":"1.2","0":"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.1","-1.1999":"-1.2","-1.25":"-1.2"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"halfTrunc",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.1","1.1999":"1.2","1.25":"1.2",0:"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.1","-1.1999":"-1.2","-1.25":"-1.2"});



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-floor.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"floor",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.1","1.1999":"1.1","1.25":"1.2","0":"0","-0":"-0","-1.101":"-1.2","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.3"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"floor",maximumSignificantDigits:2},{"1.101":"1.1","1.15":"1.1","1.1999":"1.1","1.25":"1.2",0:"0","-0":"-0","-1.101":"-1.2","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.3"});



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-expand.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"expand",maximumSignificantDigits:2},{"1.101":"1.2","1.15":"1.2","1.1999":"1.2","1.25":"1.3","0":"0","-0":"-0","-1.101":"-1.2","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.3"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"expand",maximumSignificantDigits:2},{"1.101":"1.2","1.15":"1.2","1.1999":"1.2","1.25":"1.3",0:"0","-0":"-0","-1.101":"-1.2","-1.15":"-1.2","-1.1999":"-1.2","-1.25":"-1.3"});



test262/test/intl402/NumberFormat/prototype/format/format-rounding-mode-ceil.js


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"ceil",maximumSignificantDigits:2},{"1.101":"1.2","1.15":"1.2","1.1999":"1.2","1.25":"1.3","0":"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.1","-1.1999":"-1.1","-1.25":"-1.2"});


var locales=[new Intl.NumberFormat().resolvedOptions().locale,"ar","de","th","ja"],numberingSystems=["arab","latn","thai","hanidec"];testNumberFormat(locales,numberingSystems,{useGrouping:!1,roundingMode:"ceil",maximumSignificantDigits:2},{"1.101":"1.2","1.15":"1.2","1.1999":"1.2","1.25":"1.3",0:"0","-0":"-0","-1.101":"-1.1","-1.15":"-1.1","-1.1999":"-1.1","-1.25":"-1.2"});



test262/test/intl402/RelativeTimeFormat/constructor/constructor/options-localeMatcher-invalid.js


const invalidOptions=[null,1,"","Lookup","LOOKUP","lookup\0","Best fit","BEST FIT","best\xA0fit"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.RelativeTimeFormat([],{"localeMatcher":invalidOption})},`${invalidOption} is an invalid localeMatcher option value`);


const invalidOptions=[null,1,"","Lookup","LOOKUP","lookup\0","Best fit","BEST FIT","best\xA0fit"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.RelativeTimeFormat([],{localeMatcher:invalidOption})},`${invalidOption} is an invalid localeMatcher option value`);



test262/test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/options-localeMatcher-invalid.js


assert.sameValue(typeof Intl.RelativeTimeFormat.supportedLocalesOf,"function","Should support Intl.RelativeTimeFormat.supportedLocalesOf.");const invalidOptions=[null,1,"","Lookup","LOOKUP","lookup\0","Best fit","BEST FIT","best\xA0fit"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){Intl.RelativeTimeFormat.supportedLocalesOf([],{"localeMatcher":invalidOption})},`${invalidOption} is an invalid localeMatcher option value`);


assert.sameValue(typeof Intl.RelativeTimeFormat.supportedLocalesOf,"function","Should support Intl.RelativeTimeFormat.supportedLocalesOf.");const invalidOptions=[null,1,"","Lookup","LOOKUP","lookup\0","Best fit","BEST FIT","best\xA0fit"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){Intl.RelativeTimeFormat.supportedLocalesOf([],{localeMatcher:invalidOption})},`${invalidOption} is an invalid localeMatcher option value`);



test262/test/intl402/RelativeTimeFormat/constructor/constructor/options-style-invalid.js


const invalidOptions=[null,1,"","Long","LONG","long\0","Short","SHORT","short\0","Narrow","NARROW","narrow\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.RelativeTimeFormat([],{"style":invalidOption})},`${invalidOption} is an invalid style option value`);


const invalidOptions=[null,1,"","Long","LONG","long\0","Short","SHORT","short\0","Narrow","NARROW","narrow\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.RelativeTimeFormat([],{style:invalidOption})},`${invalidOption} is an invalid style option value`);



test262/test/intl402/RelativeTimeFormat/constructor/constructor/options-numeric-invalid.js


assert.sameValue(typeof Intl.RelativeTimeFormat,"function");const invalidOptions=[null,1,"","Always","ALWAYS","always\0","Auto","AUTO","auto\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.RelativeTimeFormat([],{"numeric":invalidOption})},`${invalidOption} is an invalid numeric option value`);


assert.sameValue(typeof Intl.RelativeTimeFormat,"function");const invalidOptions=[null,1,"","Always","ALWAYS","always\0","Auto","AUTO","auto\0"];for(const invalidOption of invalidOptions)assert.throws(RangeError,function(){new Intl.RelativeTimeFormat([],{numeric:invalidOption})},`${invalidOption} is an invalid numeric option value`);



test262/test/intl402/RelativeTimeFormat/constructor/constructor/options-toobject-prototype.js


Object.defineProperties(Object.prototype,{"style":{value:"short"},"numeric":{value:"auto"}});const optionsArguments=[!0,"test",7,Symbol()];for(const options of optionsArguments){const rtf=new Intl.RelativeTimeFormat([],options),resolvedOptions=rtf.resolvedOptions();assert.sameValue(resolvedOptions.style,"short",`options argument ${""+options} should yield the correct value for "style"`);assert.sameValue(resolvedOptions.numeric,"auto",`options argument ${""+options} should yield the correct value for "numeric"`)}


Object.defineProperties(Object.prototype,{style:{value:"short"},numeric:{value:"auto"}});const optionsArguments=[!0,"test",7,Symbol()];for(const options of optionsArguments){const resolvedOptions=new Intl.RelativeTimeFormat([],options).resolvedOptions();assert.sameValue(resolvedOptions.style,"short",`options argument ${String(options)} should yield the correct value for "style"`),assert.sameValue(resolvedOptions.numeric,"auto",`options argument ${String(options)} should yield the correct value for "numeric"`)}



test262/test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/options-undefined.js


assert.sameValue(typeof Intl.RelativeTimeFormat.supportedLocalesOf,"function","Should support Intl.RelativeTimeFormat.supportedLocalesOf."),Object.defineProperties(Object.prototype,{"localeMatcher":{get(){throw new Error("Should not call localeMatcher getter")}}}),assert.sameValue(Array.isArray(Intl.RelativeTimeFormat.supportedLocalesOf()),!0,"No arguments"),assert.sameValue(Array.isArray(Intl.RelativeTimeFormat.supportedLocalesOf([])),!0,"One argument"),assert.sameValue(Array.isArray(Intl.RelativeTimeFormat.supportedLocalesOf([],void 0)),!0,"Two arguments");


assert.sameValue(typeof Intl.RelativeTimeFormat.supportedLocalesOf,"function","Should support Intl.RelativeTimeFormat.supportedLocalesOf."),Object.defineProperties(Object.prototype,{localeMatcher:{get(){throw new Error("Should not call localeMatcher getter")}}}),assert.sameValue(Array.isArray(Intl.RelativeTimeFormat.supportedLocalesOf()),!0,"No arguments"),assert.sameValue(Array.isArray(Intl.RelativeTimeFormat.supportedLocalesOf([])),!0,"One argument"),assert.sameValue(Array.isArray(Intl.RelativeTimeFormat.supportedLocalesOf([],void 0)),!0,"Two arguments");


esbuild_test262 Summary:
AST Parsed     : 44101/44101 (100.00%)
Positive Passed: 41542/44101 (94.20%)
